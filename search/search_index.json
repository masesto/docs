{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Linux Documentation","text":""},{"location":"#welcome","title":"Welcome!","text":"<p>Welcome to the Linux Documentation &amp; Tutorials; we are glad you're here. Here you will find documents on how to build Linux itself, as well as documents on various subjects that are important to the Linux community.</p> <p>This home page will give you an introduction to the documentation website and how to find your way around \u2014 we're confident that you will feel right at home.</p>"},{"location":"#navigating-the-site","title":"Navigating the Site","text":""},{"location":"#getting-around","title":"Getting Around","text":"<p>Now, you are on the home page of the documentation. If you glance at the top menu (which is always available, including on mobile devices) you can see the main structure showing the top-level sections of the documentation site. If you click on each top menu item (try 'Guides' for example) then on the left side, you will see the list of sub-sections for each main section. Guides has many topics of interest.</p> <p>When you open a document, on the right side you will see a 'Table of contents' with clickable navigation links for that document (for mobile devices try landscape orientation). For long documents the table of contents allows you to move around the document with ease. If you are reading a long document and want to go back to the top press pg up and you will see a Back to top button appear at the top of the screen.</p> <p>The main sections of the documentation site are:</p> <ul> <li>Guides: which cover specific ways to set up and use Linux.</li> <li>Books: are more detailed information based around a specific area.</li> <li>Labs: it is 'back to school', but these tutorials you will enjoy doing!</li> </ul>"},{"location":"#using-search","title":"Using Search","text":"<p>If you want to quickly find specific information or documents, the documentation site has full-text search capability. Start typing in the 'Search' entry field in the top menu bar and the site will return drill down search results.</p> <p>To open a page in the search results click (or tap on mobile) on the desired page in the list displayed.</p>"},{"location":"#first-time","title":"First Time","text":"<p>If this is your first time visiting the Shele Documentation site then likely you are new to Linux and you are itching to install it! No problem, jump on over to the [Installing Shele Linux] page for detailed instructions.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Did you find something missing? Did you find an error? Are you wondering how to create a document of your own, or how to fix things here?</p>"},{"location":"books/","title":"Linux Books","text":"<p>You've found the Books section of the documentation. This is where longer-form documentation is kept. These documents are broken down into sections or \"chapters\" to make it easy for you to work through them at your own pace and keep track of your progress. These documents were created by people just like you, with a passion for certain subjects.</p>"},{"location":"books/admin_guide/00-toc/","title":"Learning Linux with Rocky","text":"<p>The Administrator's Guide is a collection of educational documents focused on System Administrators. They can be used by future System Administrators trying to get up to speed, by current System Administrators who would like a refresher, or by any Linux user who'd like to learn more about the Linux environment, commands, processes, and more. Like all documents of this type, it will evolve and update over time.</p> <p>We start with Introduction to Linux, which outlines Linux, distributions, and the whole ecosystem around our operating system.</p> <p>User Commands contains essential commands for getting up to speed with Linux. More experienced users should also consult the following chapter on Advanced Linux Commands.</p> <p>The VI Text Editor deserves its own chapter. While Linux comes with many editors, VI is one of the most powerful. Other commands sometimes use identical syntax to VI (<code>sed</code> comes to mind). So, knowing something about VI, or at least demystifying its essential functions (how to open a file, save, quit or quit without saving), is very important. The user will become more comfortable with the other functions of VI as they use the editor. An alternative would be to use nano which comes installed by default in Rocky Linux. While not as versatile, it is simple to use, straightforward, and gets the job done.</p> <p>We can then get into the deep functioning of Linux to discover how the system addresses:</p> <ul> <li>User Management</li> <li>File Systems</li> <li>Process Management</li> </ul> <p>Backup and Restoration is essential info for the System Administrator. Linux comes with many software solutions to enhance backups (rsnapshot, lsyncd, etcetera.). It is valuable to know the essential components of the backup that exist within the operating system. We investigate two tools: <code>tar</code> and the less widespread <code>cpio</code> in this chapter.</p> <p>System Startup is also an important read because management of the system during the boot process has evolved significantly in recent years since the arrival of the systemd.</p> <p>Final chapters address Task Management, Implementing the Network, and Software Management including installation.</p>"},{"location":"books/admin_guide/01-presentation/","title":"Introduction to the Linux Operating System","text":"<p>In this chapter you will learn about GNU/Linux distributions.</p> <p>Objectives: In this chapter you will learn how to:</p> <p> Describe the features and possible architectures of an operating system.   Recount the history of UNIX and GNU/Linux.   Choose the right Linux distribution for your needs.   Explain the philosophy of Free and Open-source Software.   Discover the usefulness of the shell.   </p> <p> generalities, linux, distributions</p> <p>Knowledge:  Complexity: </p> <p>Reading time: 10 minutes</p>"},{"location":"books/admin_guide/01-presentation/#what-is-an-operating-system","title":"What is an operating system?","text":"<p>Linux, UNIX, BSD, Windows, and MacOS are all operating systems.</p> <p>Abstract</p> <p>An operating system is a set of programs that manages the available resources of a computer.</p> <p>As part of this management of resources, the operating system has to:</p> <ul> <li>Manage the physical or virtual memory.<ul> <li>The physical memory is made up of the RAM bars and the processor cache memory, which are used for the execution of programs.</li> <li>The virtual memory is a location on the hard disk (the swap partition) that allows the unloading of the physical memory and the saving of the current state of the system during the electrical shutdown of the computer.</li> </ul> </li> <li>Intercept access to peripherals.   Software is rarely allowed to access hardware directly (except for graphics cards for very specific needs).</li> <li>Provide applications with proper task management.   The operating system is responsible for scheduling processes to occupy the processor.</li> <li>Protect files from unauthorized access.</li> <li>Collect information about programs in use or in progress.</li> </ul> <p></p>"},{"location":"books/admin_guide/01-presentation/#generalities-unix-gnulinux","title":"Generalities UNIX - GNU/Linux","text":""},{"location":"books/admin_guide/01-presentation/#history","title":"History","text":""},{"location":"books/admin_guide/01-presentation/#unix","title":"UNIX","text":"<ul> <li> <p>1964 \u2014 1968:   MULTICS (MULTiplexed Information and Computing Service) is developed for MIT, Bell Labs (AT&amp;T) and General Electric.</p> </li> <li> <p>1969 \u2014 1971: After the withdrawal of Bell (1969) and then General Electric from the project, two developers, Ken Thompson and Dennis Ritchie (joined later by Brian Kernighan), judging MULTICS to be too complex, begin development of UNIX (UNiplexed Information and Computing Service). While it was originally created in Assembly language, the creators of UNIX eventually develop the B language and then the C language (1971) and completely rewrite UNIX. As it was developed in 1970, the reference (epoch) date for the start of time of UNIX/Linux systems is set at January 01, 1970.</p> </li> </ul> <p>The C language remains one of the most popular programming languages today. A low-level language, close to the hardware, it allows the adaptation of the operating system to any machine architecture having a C compiler.</p> <p>UNIX is an open and evolving operating system that has played a major role in the history of computing. It forms the basis for many other systems such as Linux, BSD, MacOS, and more.</p> <p>UNIX is still relevant today (HP-UX, AIX, Solaris, etc.).</p>"},{"location":"books/admin_guide/01-presentation/#gnu-project","title":"GNU Project","text":"<ul> <li> <p>1984: Richard Matthew Stallman launched the GNU (GNU's Not Unix) Project, which aims to establish a free and open Unix system, in which the more important tools are: gcc compiler, bash shell, Emacs editor and so on. GNU is a Unix-like operating system. The development of GNU, started in January 1984, is known as the GNU Project. Many of the programs in GNU are released under the auspices of the GNU Project; those we call GNU packages.</p> </li> <li> <p>1990: GNU's own kernel, the GNU Hurd, was started in 1990 (before Linux was started).</p> </li> </ul>"},{"location":"books/admin_guide/01-presentation/#minix","title":"MINIX","text":"<ul> <li>1987: Andrew S. Tanenbaum develops MINIX, a simplified UNIX, to teach operating systems in a simple way. Mr. Tanenbaum makes the source code of his operating system available.</li> </ul>"},{"location":"books/admin_guide/01-presentation/#linux","title":"Linux","text":"<ul> <li> <p>1991: A Finnish student, Linus Torvalds, creates an operating system that runs on his personal computer and names it Linux. He publishes his first version, called 0.02, on the Usenet discussion forum, and other developers help him improve his system. The term Linux is a play on words between the founder's first name, Linus, and UNIX.</p> </li> <li> <p>1993: The Debian distribution is created. Debian is a non-commercial, community-based distribution. Originally developed for use on servers, it is  well-suited for this role; however it is a universal system, usable on a personal computer as well. Debian forms the basis for many other distributions, such as Mint or Ubuntu.</p> </li> <li> <p>1994: The commercial distribution Red Hat is created by the company Red Hat, which is today the leading distributor of the GNU/Linux operating system. Red Hat supports the community version Fedora and until recently the free distribution CentOS.</p> </li> <li> <p>1997: The KDE desktop environment is created. It is based on the Qt component library and the C++ development language.</p> </li> <li> <p>1999: The GNOME desktop environment is created. It is based on the GTK+ component library.</p> </li> <li> <p>2002: The Arch distribution is created. Its distinctive is that it offers rolling release (continuous update).</p> </li> <li> <p>2004: Ubuntu is created by the Canonical company (Mark Shuttleworth). It is based on Debian but includes free and proprietary software.</p> </li> <li> <p>2021: Rocky Linux is created, based on Red Hat distribution.</p> </li> </ul> <p>Info</p> <p>Dispute over the name: although people are accustomed to calling the Linux operating system verbally, Linux is strictly a kernel. We must not forget the development and contribution of the GNU project to the open source cause, so! I prefer to call it the GNU/Linux operating system.</p>"},{"location":"books/admin_guide/01-presentation/#market-share","title":"Market share","text":"<p>Despite its prevalence, Linux remains relatively unknown by the general public. Linux is hidden within smartphones, televisions, internet boxes, etc. Almost 70% of the websites in the world are hosted on a Linux or UNIX server!</p> <p>Linux equips about 3% of personal computers but more than 82% of smartphones. The Android operating system, for example, uses a Linux kernel.</p> <p>Linux equips 100% of the top 500 supercomputers since 2018. A supercomputer is a computer designed to achieve the highest possible performance with the techniques known at the time of its design, especially with regard to computing speed.</p>"},{"location":"books/admin_guide/01-presentation/#architectural-design","title":"Architectural design","text":"<ul> <li>The kernel is the first software component.<ul> <li>It is the heart of the Linux system.</li> <li>It manages the hardware resources of the system.</li> <li>The other software components must go through it to access the hardware.</li> </ul> </li> <li>The shell is a utility that interprets user commands and ensures their execution.<ul> <li>Main shells: Bourne shell, C shell, Korn shell and Bourne-Again shell (bash).</li> </ul> </li> <li>Applications are user programs including but not limited to:<ul> <li>Internet browsers</li> <li>Word processors</li> <li>Spreadsheets</li> </ul> </li> </ul>"},{"location":"books/admin_guide/01-presentation/#multi-task","title":"Multi-task","text":"<p>Linux belongs to the family of time-sharing operating systems. It divides processing time between several programs, switching from one to another in a transparent way for the user. This implies:</p> <ul> <li>Simultaneous execution of several programs.</li> <li>Distribution of CPU time by the scheduler.</li> <li>Reduction of problems caused by a failed application.</li> <li>Reduced performance in the event of too many programs running.</li> </ul>"},{"location":"books/admin_guide/01-presentation/#multi-user","title":"Multi-user","text":"<p>The purpose of MULTICS was to allow several users to work from several terminals (screen and keyboard) from a single computer (very expensive at the time). Linux, inspired by this operating system, kept this ability to work with several users simultaneously and independently, each one having their own user account with memory space and access rights to files and software.</p>"},{"location":"books/admin_guide/01-presentation/#multi-processor","title":"Multi-processor","text":"<p>Linux is able to work with multi-processor computers or with multi-core processors.</p>"},{"location":"books/admin_guide/01-presentation/#multi-platform","title":"Multi-platform","text":"<p>Linux is written in a high-level language that can be adapted to different types of platforms during compilation. This allows it to run on:</p> <ul> <li>Home computers (PC and laptop)</li> <li>Servers (data and applications)</li> <li>Portable computers (smartphones and tablets)</li> <li>Embedded systems (car computers)</li> <li>Active network elements (routers and switches)</li> <li>Household appliances (TVs and refrigerators)</li> </ul>"},{"location":"books/admin_guide/01-presentation/#open","title":"Open","text":"<p>Linux is based on recognized standards such as POSIX, TCP/IP, NFS, and Samba, which allow it to share data and services with other application systems.</p>"},{"location":"books/admin_guide/01-presentation/#the-unixlinux-philosophy","title":"The UNIX/Linux Philosophy","text":"<ul> <li>Treat everything as a file.</li> <li>Value portability.</li> <li>Do one thing and do it well.</li> <li>KISS: Keep It Simple Stupid.</li> <li>\"UNIX is basically a simple operating system, but you have to be a genius to understand the simplicity.\" (Dennis Ritchie)</li> <li>\"Unix is user-friendly. It just isn't promiscuous about which users it's friendly with.\" (Steven King)</li> </ul>"},{"location":"books/admin_guide/01-presentation/#the-gnulinux-distributions","title":"The GNU/Linux distributions","text":"<p>A Linux distribution is a consistent set of software assembled around the Linux kernel, ready to be installed along with the necessary components to manage itself (installation, removal, configuration). There are associative or community distributions (Debian, Rocky) and commercial distributions (Red Hat, Ubuntu).</p> <p>Each distribution offers one or more desktop environments, and provides a set of pre-installed software and a library of additional software. Configuration options (kernel or services options for example) are specific to each distribution.</p> <p>This principle allows distributions to be geared to beginners (Ubuntu, Linux Mint...) or fully customizable for advanced users (Gentoo, Arch);  distributions can also be more adept with servers (Debian, Red Hat) or workstations (Fedora).</p>"},{"location":"books/admin_guide/01-presentation/#desktop-environments","title":"Desktop environments","text":"<p>There are many graphic environments such as GNOME, KDE, LXDE, XFCE, etc. There is something for everyone, and their ergonomics hold their own against Microsoft or Apple systems.</p> <p>So why is there so little enthusiasm for Linux, when this system is practically virus free? Could it be because so many editors (Adobe) and manufacturers (Nvidia) do not play the free game and do not provide a version of their software or drivers for GNU/Linux? Perhaps it's fear of change, or the difficulty of finding where to buy a Linux computer, or too few games distributed under Linux. That last excuse at least shouldn't be true for long, with the advent of the game engine Steam for Linux.</p> <p></p> <p>The GNOME 3 desktop environment no longer uses the concept of desktop but that of GNOME Shell (not to be confused with the command line shell). It serves as a desktop, a dashboard, a notification area and a window selector. The GNOME desktop environment is based on the GTK+ component library.</p> <p></p> <p>The KDE desktop environment is based on the Qt component library. It is traditionally recommended for users familiar with a Windows environment.</p> <p></p>"},{"location":"books/admin_guide/01-presentation/#free-open-source","title":"Free / Open Source","text":"<p>A user of a Microsoft or Mac operating system must purchase a license to use the operating system. This license has a cost, although it is usually transparent (the price of the license is included in the price of the computer).</p> <p>In the GNU/Linux world, the Free Software movement provides mostly free distributions.</p> <p>Free does not mean free!</p> <p>Open Source: the source code is available, so it is possible to consult and modify it under certain conditions.</p> <p>A free software is necessarily open-source, but the opposite is not true since open-source software is distinct from the freedom offered by the GPL license.</p>"},{"location":"books/admin_guide/01-presentation/#gnu-gpl-gnu-general-public-license","title":"GNU GPL (GNU General Public License)","text":"<p>The GPL guarantees the author of a software its intellectual property, but allows modification, redistribution or resale of software by third parties, provided that the source code is included with the software. The GPL is the license that came out of the GNU (GNU is Not UNIX) project, which was instrumental in creating Linux.</p> <p>It implies:</p> <ul> <li>The freedom to run the program, for any purpose.</li> <li>The freedom to study how the program works and adapt it to your needs.</li> <li>The freedom to redistribute copies.</li> <li>The freedom to improve the program, and publish those improvements for the benefit of the whole community.</li> </ul> <p>On the other hand, even products licensed under the GPL can have a cost. This is not for the product itself, but the guarantee that a team of developers will continue to work on it to make it evolve and troubleshoot errors, or even provide support to users.</p>"},{"location":"books/admin_guide/01-presentation/#areas-of-use","title":"Areas of use","text":"<p>A Linux distribution excels for:</p> <ul> <li>Servers: HTTP, email, groupware, file sharing, etc.</li> <li>Security: Gateway, firewall, router, proxy, etc.</li> <li>Central computers: Banks, insurance, industry, etc.</li> <li>Embedded systems: Routers, Internet boxes, SmartTVs, etc.</li> </ul> <p>Linux is a suitable choice for hosting databases or websites, or as a mail server, DNS or firewall. In short, Linux can do just about anything, which explains the quantity of specific distributions.</p>"},{"location":"books/admin_guide/01-presentation/#shell","title":"Shell","text":""},{"location":"books/admin_guide/01-presentation/#generalities","title":"Generalities","text":"<p>The shell, known as command interface, allows users to send commands to the operating system. It is less visible today since the implementation of graphical interfaces, but remains a privileged means on Linux systems which do not all have graphical interfaces and whose services do not always have a setting interface.</p> <p>It offers a real programming language including classical structures (loops, alternatives) and common constituents (variables, passing of parameters, and sub-programs). It allows the creation of scripts to automate certain actions (backups, creation of users, system monitoring, etc.).</p> <p>There are several types of shells available and configurable on a platform or according to the user's preference. A few examples include:</p> <ul> <li>sh, the POSIX standard shell</li> <li>csh, command-oriented shell in C</li> <li>bash, Bourne-Again Shell, Linux shell</li> </ul>"},{"location":"books/admin_guide/01-presentation/#functionalities","title":"Functionalities","text":"<ul> <li>Command execution (checks the command given and executes it).</li> <li>Input/Output redirection (returns data to a file instead of writing it on the screen).</li> <li>Connection process (manages the user's connection).</li> <li>Interpreted programming language (allowing the creation of scripts).</li> <li>Environment variables (access to information specific to the system during operation).</li> </ul>"},{"location":"books/admin_guide/01-presentation/#principle","title":"Principle","text":""},{"location":"books/admin_guide/01-presentation/#check-your-knowledge","title":"Check your Knowledge","text":"<p> An operating system is a set of programs for managing the available resources of a computer:</p> <ul> <li> True   </li> <li> False</li> </ul> <p> The operating system is necessary to:</p> <ul> <li> Manage physical and virtual memory   </li> <li> Allow direct access to peripherals   </li> <li> Subcontract the management of tasks to the processor   </li> <li> Collect information about the programs used or in use   </li> </ul> <p> Among these personalities, which ones participated in the development of UNIX:</p> <ul> <li> Linus Torvalds   </li> <li> Ken Thompson   </li> <li> Lionel Richie   </li> <li> Brian Kernighan   </li> <li> Andrew Stuart Tanenbaum   </li> </ul> <p> The original nationality of Linus Torvalds, creator of the Linux kernel, is:</p> <ul> <li> Swedish   </li> <li> Finnish   </li> <li> Norwegian   </li> <li> Flemish   </li> <li> French  </li> </ul> <p> Which of the following distributions is the oldest:</p> <ul> <li> Debian   </li> <li> Slackware   </li> <li> Red Hat   </li> <li> Arch</li> </ul> <p> Is the Linux kernel:</p> <ul> <li> Multi-tasking   </li> <li> Multi-user   </li> <li> Multi-processor   </li> <li> Multi-core   </li> <li> Cross-platform   </li> <li> Open   </li> </ul> <p> Is free software necessarily open-source?</p> <ul> <li> True   </li> <li> False   </li> </ul> <p> Is open-source software necessarily free?</p> <ul> <li> True   </li> <li> False   </li> </ul> <p> Which of the following is not a shell:</p> <ul> <li> Jason   </li> <li> Jason-Bourne shell (jbsh)   </li> <li> Bourne-Again shell (bash)   </li> <li> C shell (csh)   </li> <li> Korn shell (ksh)</li> </ul>"},{"location":"books/admin_guide/03-commands/","title":"Commands for Linux Users","text":"<p>In this chapter you will learn Linux commands and how to use them.</p> <p>Objectives: In this chapter, future Linux administrators will learn how to:</p> <p> Move within the system tree.  Create a text file, display its contents and modify it.  Use the most useful Linux commands.</p> <p> user commands, linux</p> <p>Knowledge:  Complexity: </p> <p>Reading time: 40 minutes</p>"},{"location":"books/admin_guide/03-commands/#generalities","title":"Generalities","text":"<p>Current Linux systems have graphical utilities dedicated to the work of an administrator. However, it is important to be able to use the interface in command line mode for several reasons:</p> <ul> <li>The majority of system commands are common to all Linux distributions, which is not the case for graphical tools.</li> <li>It can happen that the system does not start correctly but that a backup command interpreter remains accessible.</li> <li>Remote administration is done on the command line with an SSH terminal.</li> <li>In order to preserve server resources, the graphical interface is either not installed or launched on demand.</li> <li>Administration is done by scripts.</li> </ul> <p>Learning these commands allows the administrator to connect to a Linux terminal, to manage its resources and files, to identify the station, the terminal, and the connected users, etc.</p>"},{"location":"books/admin_guide/03-commands/#the-users","title":"The users","text":"<p>The user of a Linux system will be defined in the <code>/etc/passwd</code> file, by:</p> <ul> <li>A login name, more commonly called \"login\", containing no spaces.</li> <li>A numeric identifier: UID (User Identifier).</li> <li>A group identifier: GID (Group Identifier).</li> <li>A command interpreter, e.g., a shell, which can be different from one user to another.</li> <li>A connection directory, e.g., the home directory.</li> </ul> <p>In other files the user will be defined by:</p> <ul> <li>A password, which is encrypted before being stored (<code>/etc/shadow</code>).</li> <li>A command prompt, or prompt login, which is symbolized by a <code>#</code> for administrators and a <code>$</code> for other users (<code>/etc/profile</code>).</li> </ul> <p>Depending on the security policy implemented on the system, the password will require a certain number of characters and meet certain complexity requirements.</p> <p>Among the existing command interpreters, the Bourne-Again Shell (<code>/bin/bash</code>) is the one most frequently used. It is assigned by default to new users. For various reasons, advanced Linux users can choose alternative shells such as the Korn Shell (<code>ksh</code>), the C Shell (<code>csh</code>), etc.</p> <p>The user's login directory is by convention stored in the <code>/home</code> directory of the workstation. It will contain the user's personal data and the configuration files of his applications. By default, at login, the login directory is selected as the current directory.</p> <p>A workstation-type installation (with graphical interface) starts this interface on terminal 1. Linux being multi-user, it is possible to connect several users several times, on different physical terminals (TTY) or virtual terminals (PTS). Virtual terminals are available within a graphical environment. A user switches from one physical terminal to another using Alt + Fx from the command line or using CTRL + Alt + Fx.</p>"},{"location":"books/admin_guide/03-commands/#the-shell","title":"The shell","text":"<p>Once the user is connected to a console, the shell displays the command prompt. It then behaves like an infinite loop, repeating the same pattern with each statement entered:</p> <ul> <li>Displays the command prompt.</li> <li>Reads the command.</li> <li>Analyzes the syntax.</li> <li>Substitutes special characters.</li> <li>Executes the command.</li> <li>Displays the command prompt.</li> <li>Etc.</li> </ul> <p>The key sequence CTRL + C is used to interrupt a running command.</p> <p>The use of a command generally follows this sequence:</p> <pre><code>command [option(s)] [argument(s)]\n</code></pre> <p>The name of the command is often lower case.</p> <p>A space separates each item.</p> <p>Short options begin with a dash (<code>-l</code>), while long options begin with two dashes (<code>--list</code>). A double dash (<code>--</code>) indicates the end of the option list.</p> <p>It is possible to group some short options together:</p> <pre><code>$ ls -l -i -a\n</code></pre> <p>is equivalent to:</p> <pre><code>$ ls -lia\n</code></pre> <p>There can be several arguments after an option:</p> <pre><code>$ ls -lia /etc /home /var\n</code></pre> <p>In the literature, the term \"option\" is equivalent to the term \"parameter,\" which is more commonly used in programming. The optional side of an option or argument is symbolized by enclosing it in square brackets <code>[</code> and <code>]</code>. When more than one option is possible, a vertical bar called a \"pipe\" separates them <code>[a|e|i]</code>.</p>"},{"location":"books/admin_guide/03-commands/#general-commands","title":"General commands","text":""},{"location":"books/admin_guide/03-commands/#apropos-whatis-and-man-commands","title":"<code>apropos</code>, <code>whatis</code> and <code>man</code> commands","text":"<p>It is impossible for an administrator at any level to know all the commands and options in detail. A manual is usually available for all installed commands.</p>"},{"location":"books/admin_guide/03-commands/#apropos-command","title":"<code>apropos</code> command","text":"<p>The command <code>apropos</code> allows you to search by keyword within these manual pages:</p> Options Description <code>-s</code>, <code>--sections list</code> or <code>--section list</code> Limited to manual sections. <code>-a</code> or <code>--and</code> Displays only the item matching all the provided keywords. <p>Example:</p> <pre><code>$ apropos clear\nclear (1)            - clear the terminal screen\nclear_console (1)    - clear the console\nclearenv (3)         - clear the environment\nclearerr (3)         - check and reset stream status\nclearerr_unlocked (3) - nonlocking stdio functions\nfeclearexcept (3)    - floating-point rounding and exception handling\nfwup_clear_status (3) - library to support management of system firmware updates\nklogctl (3)          - read and/or clear kernel message ring buffer; set console_loglevel\nsgt-samegame (6)     - block-clearing puzzle\nsyslog (2)           - read and/or clear kernel message ring buffer; set console_loglevel\ntimerclear (3)       - timeval operations\nXClearArea (3)       - clear area or window\nXClearWindow (3)     - clear area or window\nXSelectionClearEvent (3) - SelectionClear event structure\n</code></pre> <p>To find the command that will allow changing the password of an account:</p> <pre><code>$ apropos --exact password  -a change\nchage (1)            - change user password expiry information\npasswd (1)           - change user password\n</code></pre>"},{"location":"books/admin_guide/03-commands/#whatis-command","title":"<code>whatis</code> command","text":"<p>The <code>whatis</code> command displays the description of the command passed as argument:</p> <pre><code>whatis clear\n</code></pre> <p>Example:</p> <pre><code>$ whatis clear\nclear (1)            - clear the terminal screen\n</code></pre>"},{"location":"books/admin_guide/03-commands/#man-command","title":"<code>man</code> command","text":"<p>Once found by <code>apropos</code> or <code>whatis</code>, the manual is read by <code>man</code> (\"Man is your friend\"). This set of manuals is divided into 8 sections, grouping information by topic, the default section being 1:</p> <ol> <li>Executable programs or commands.</li> <li>System calls (functions given by the kernel).</li> <li>Library calls (functions given by the library).</li> <li>Special files (usually found in /dev).</li> <li>File Formats and conventions (configuration files such as etc/passwd).</li> <li>Games (such as character-based applications).</li> <li>Miscellaneous (e.g. man (7)).</li> <li>System administration commands (usually only for root).</li> <li>Kernel routines (non-standard).</li> </ol> <p>Information about each section can be accessed by typing <code>man x intro</code>, where <code>x</code> is the section number.</p> <p>The command:</p> <pre><code>man passwd\n</code></pre> <p>will tell the administrator about the passwd command, its options, etc. While a:</p> <pre><code>$ man 5 passwd\n</code></pre> <p>will inform him about the files related to the command.</p> <p>Navigate through the manual with the arrows \u2191 and \u2193. Exit the manual by pressing the q key.</p>"},{"location":"books/admin_guide/03-commands/#shutdown-command","title":"<code>shutdown</code> command","text":"<p>The <code>shutdown</code> command allows you to electronically shut down a Linux server, either immediately or after a certain period of time.</p> <pre><code>shutdown [-h] [-r] time [message]\n</code></pre> <p>Specify the shutdown time in the format <code>hh:mm</code> for a precise time, or <code>+mm</code> for a delay in minutes.</p> <p>To force an immediate stop, use the word <code>now</code> in place of the time. In this case, the optional message is not sent to other users of the system.</p> <p>Examples:</p> <pre><code>[root]# shutdown -h 0:30 \"Server shutdown at 0:30\"\n[root]# shutdown -r +5\n</code></pre> <p>Options:</p> Options Remarks <code>-h</code> Shuts down the system electronically. <code>-r</code> Restarts the system."},{"location":"books/admin_guide/03-commands/#history-command","title":"<code>history</code> command","text":"<p>The <code>history</code> command displays the history of commands that have been entered by the user.</p> <p>The commands are stored in the <code>.bash_history</code> file in the user's login directory.</p> <p>Example of a history command</p> <pre><code>$ history\n147 man ls\n148 man history\n</code></pre> Options Comments <code>-w</code> Writes the current history to the history file. <code>-c</code> Deletes the history of the current session (but not the contents of the <code>.bash_history</code> file). <ul> <li>Manipulating history:</li> </ul> <p>To manipulate the history, the following commands entered from the command prompt will:</p> Keys Function !! Recalls the last command placed. !n Recalls the command by its number in the list. !string Recalls the most recent command beginning with the string. \u2191 Navigates through your history working backward in time from the most recent command. \u2193 Navigates through your history working forward in time."},{"location":"books/admin_guide/03-commands/#auto-complete","title":"Auto-complete","text":"<p>Auto-completion is a great help.</p> <ul> <li>Completes commands, entered paths, or file names.</li> <li>Press the TAB key to complete the entry in the case of a single solution.</li> <li>In the case of multiple solutions, press TAB a second time to see options.</li> </ul> <p>If double-pressing the TAB key presents no options, then there is no solution to the current completion.</p>"},{"location":"books/admin_guide/03-commands/#display-and-identification","title":"Display and Identification","text":""},{"location":"books/admin_guide/03-commands/#clear-command","title":"<code>clear</code> command","text":"<p>The <code>clear</code> command clears the contents of the terminal screen. More accurately, it shifts the display so that the command prompt is at the top of the screen on the first line.</p> <p>On a physical terminal, the display will be permanently hidden, whereas in a graphical interface, a scrollbar will allow you to go back in the history of the virtual terminal.</p> <p>Tip</p> <p>CTRL + L will have the same effect as the <code>clear</code> command</p>"},{"location":"books/admin_guide/03-commands/#echo-command","title":"<code>echo</code> command","text":"<p>The <code>echo</code> command is used to display a string of characters.</p> <p>This command is most commonly used in administration scripts to inform the user during execution.</p> <p>The <code>-n</code> option indicates no newline output string (by default, newline output string).</p> <pre><code>shell &gt; echo -n \"123\";echo \"456\"\n123456\n\nshell &gt; echo \"123\";echo \"456\"\n123\n456\n</code></pre> <p>For various reasons, the script developer may need to use special sequences (starting with a <code>\\</code> character). In this case, the <code>-e</code> option will be stipulated, allowing interpretation of the sequences.</p> <p>Among the frequently used sequences, we can mention:</p> Sequence Result <code>\\a</code> Sends a sonar beep <code>\\b</code> Back <code>\\n</code> Adds a line break <code>\\t</code> Adds a horizontal tab <code>\\v</code> Adds a vertical tab"},{"location":"books/admin_guide/03-commands/#date-command","title":"<code>date</code> command","text":"<p>The <code>date</code> command displays the date and time. The command has the following syntax:</p> <pre><code>date [-d yyyyMMdd] [format]\n</code></pre> <p>Examples:</p> <pre><code>$ date\nMon May 24 16:46:53 CEST 2021\n$ date -d 20210517 +%j\n137\n</code></pre> <p>In this last example, the <code>-d</code> option displays a given date. The <code>+%j</code> option formats this date to show only the day of the year.</p> <p>Warning</p> <p>The format of a date can change depending on the value of the language defined in the environment variable <code>$LANG</code>.</p> <p>The date display can follow the following formats:</p> Option Format <code>+%A</code> Locale's full weekday name (e.g., Sunday) <code>+%B</code> Locale's full month name (e.g., January) <code>+%c</code> Locale's date and time (e.g., Thu Mar  3 23:05:25 2005) <code>+%d</code> Day of month (e.g., 01) <code>+%F</code> Date in <code>YYYY-MM-DD</code> format <code>+%G</code> Year <code>+%H</code> Hour (00..23) <code>+%j</code> Day of the year (001..366) <code>+%m</code> Month number (01..12) <code>+%M</code> Minute  (00..59) <code>+%R</code> Time in <code>hh:mm</code> format <code>+%s</code> Seconds since January 1, 1970 <code>+%S</code> Second (00..60) <code>+%T</code> Time in <code>hh:mm:ss</code> format <code>+%u</code> Day of the week (<code>1</code> for Monday) <code>+%V</code> Week number (<code>+%V</code>) <code>+%x</code> Date in format <code>DD/MM/YYYY</code> <p>The <code>date</code> command also allows you to change the system date and time. In this case, the <code>-s</code> option will be used.</p> <pre><code>[root]# date -s \"2021-05-24 10:19\"\n</code></pre> <p>The format to be used following the <code>-s</code> option is this:</p> <pre><code>date -s \"yyyy-MM-dd hh:mm[:ss]\"\n</code></pre>"},{"location":"books/admin_guide/03-commands/#id-who-and-whoami-commands","title":"<code>id</code>, <code>who</code> and <code>whoami</code> commands","text":"<p>The <code>id</code> command is used to display information about users and groups. By default, no user parameter is added, and the information of the currently logged in user and group is displayed\u3002</p> <pre><code>$ id rockstar\nuid=1000(rockstar) gid=1000(rockstar) groups=1000(rockstar),10(wheel)\n</code></pre> <p>The <code>-g</code>, <code>-G</code>, <code>-n</code> and <code>-u</code> options display the main group GID, subgroup GIDs, names instead of numeric identifiers, and the user's UID respectively.</p> <p>The <code>whoami</code> command displays the login of the current user.</p> <p>The <code>who</code> command alone displays the names of logged in users:</p> <pre><code>$ who\nrockstar tty1   2021-05-24 10:30\nroot     pts/0  2021-05-24 10:31\n</code></pre> <p>Since Linux is multi-user, it is possible that multiple sessions are open on the same station, either physically or over the network. It is interesting to know which users are logged in, if only to communicate with them by sending messages.</p> <ul> <li>tty: represents a terminal.</li> <li>pts/: represents a virtual console in a graphical environment with the number after representing the instance of the virtual console (0, 1, 2...)</li> </ul> <p>The <code>-r</code> option also displays the runlevel (see chapter \"startup\").</p>"},{"location":"books/admin_guide/03-commands/#file-tree","title":"File Tree","text":"<p>In Linux, the file tree is an inverted tree, called a single hierarchical tree, whose root is the directory <code>/</code>.</p> <p>The current directory is the directory where the user is located.</p> <p>The connection directory is the working directory associated with the user. The login directories are, by default, stored in the <code>/home</code> directory.</p> <p>When the user logs in, the current directory is the login directory.</p> <p>An absolute path references a file from the root by traversing the entire tree to the file level:</p> <ul> <li><code>/home/groupA/alice/file</code></li> </ul> <p>The relative path references that same file by traversing the entire tree from the current directory:</p> <ul> <li><code>../alice/file</code></li> </ul> <p>In the above example, the \"<code>..</code>\" refers to the parent directory of the current directory.</p> <p>A directory, even if it is empty, will necessarily contain at least two references:</p> <ul> <li><code>.</code>: reference to itself.</li> <li><code>..</code>: reference to the parent directory of the current directory.</li> </ul> <p>A relative path can thus start with <code>./</code> or <code>../</code>. When the relative path refers to a subdirectory or file in the current directory, then the <code>./</code> is often omitted. Mentioning the first <code>./</code> in the tree will only really be required to run an executable file.</p> <p>Errors in paths can cause many problems: creating folders or files in the wrong places, unintentional deletions, etc. It is therefore strongly recommended to use auto-completion when entering paths.</p> <p></p> <p>In the above example, we are looking to give the location of the file <code>myfile</code> from the directory of bob.</p> <ul> <li>By an absolute path, the current directory does not matter. We start at the root, and work our way down to the directories <code>home</code>, <code>groupA</code>, <code>alice</code> and finally the file <code>myfile</code>: <code>/home/groupA/alice/myfile</code>.</li> <li>By a relative path, our starting point being the current directory <code>bob</code>, we go up one level through <code>..</code> (i.e., into the <code>groupA</code> directory), then down into the alice directory, and finally the <code>myfile</code> file: <code>../alice/myfile</code>.</li> </ul>"},{"location":"books/admin_guide/03-commands/#pwd-command","title":"<code>pwd</code> command","text":"<p>The <code>pwd</code> (Print Working Directory) command displays the absolute path of the current directory.</p> <pre><code>$ pwd\n/home/rockstar\n</code></pre> <p>To use a relative path to reference a file or directory, or use the <code>cd</code> command to move to another directory, you must know its location in the file tree.</p> <p>Depending on the type of shell and the different parameters of its configuration file, the terminal prompt (also known as the command prompt) will display the absolute or relative path of the current directory.</p>"},{"location":"books/admin_guide/03-commands/#cd-command","title":"<code>cd</code> command","text":"<p>The <code>cd</code> (Change Directory) command allows you to change the current directory -- in other words, to move through the tree.</p> <pre><code>$ cd /tmp\n$ pwd\n/tmp\n$ cd ../\n$ pwd\n/\n$ cd\n$ pwd\n/home/rockstar\n</code></pre> <p>As you can see in the last example above, the command <code>cd</code> with no arguments moves the current directory to the <code>home directory</code>.</p>"},{"location":"books/admin_guide/03-commands/#ls-command","title":"<code>ls</code> command","text":"<p>The <code>ls</code> command displays the contents of a directory.</p> <pre><code>ls [-a] [-i] [-l] [directory1] [directory2] [\u2026]\n</code></pre> <p>Example:</p> <pre><code>$ ls /home\n.    ..    rockstar\n</code></pre> <p>The main options of the <code>ls</code> command are:</p> Option Information <code>-a</code> Displays all files, even hidden ones. Hidden files in Linux are those beginning with <code>.</code>. <code>-i</code> Displays inode numbers. <code>-l</code> Use a long listing format, that is, each line displays long format information for a file or directory. <p>The <code>ls</code> command, however, has a lot of options (see <code>man</code>):</p> Option Information <code>-d</code> Displays information about a directory instead of listing its contents. <code>-g</code> Like -l option, but do not list owner. <code>-h</code> Displays file sizes in the most appropriate format (byte, kilobyte, megabyte, gigabyte, ...). <code>h</code> stands for Human Readable. Needs to be used with -l option. <code>-s</code> Displays the allocated size of each file, in blocks. In the GNU/Linux operating system, \"block\" is the smallest unit of storage in the file system, one block equals 4096Byte. <code>-A</code> Displays all files in the directory except <code>.</code> and <code>..</code> <code>-R</code> Displays the contents of subdirectories recursively. <code>-F</code> Displays the type of files. Prints a <code>/</code> for a directory, <code>*</code> for executables, <code>@</code> for a symbolic link, and nothing for a text file. <code>-X</code> Sorts files according to their extensions. <ul> <li>Description of columns generated by running the <code>ls -lia</code> command:</li> </ul> <pre><code>$ ls -lia /home\n78489 drwx------ 4 rockstar rockstar 4096 25 oct. 08:10 rockstar\n</code></pre> Value Information <code>78489</code> Inode Number. <code>drwx------</code> File type (<code>d</code>) and rights (<code>rwx------</code>). <code>4</code> Number of subdirectories (<code>.</code> and <code>..</code> included). For a file, it represents the number of hard links, and 1 represents itself. <code>rockstar</code> User ownership. <code>rockstar</code> Group ownership. <code>4096</code> For files, it shows the size of the file. For directories, it shows the fixed value of 4096 bytes occupied by the file naming. To calculate the total size of a directory, use <code>du -sh rockstar/</code> <code>25 oct. 08:10</code> Last modified date. <code>rockstar</code> The name of the file (or directory). <p>Note</p> <p>Aliases are frequently positioned in common distributions.</p> <p>This is the case of the alias <code>ll</code>:</p> <pre><code>alias ll='ls -l --color=auto'\n</code></pre> <p>The <code>ls</code> command has many options. Here are some advanced examples of uses:</p> <ul> <li>List the files in <code>/etc</code> in order of last modification:</li> </ul> <pre><code>$ ls -ltr /etc\ntotal 1332\n-rw-r--r--.  1 root root    662 29 may   2021 logrotate.conf\n-rw-r--r--.  1 root root    272 17 may.   2021 mailcap\n-rw-------.  1 root root    122 12 may.  2021 securetty\n...\n-rw-r--r--.  2 root root     85 18 may.  17:04 resolv.conf\n-rw-r--r--.  1 root root     44 18 may.  17:04 adjtime\n-rw-r--r--.  1 root root    283 18 may.  17:05 mtab\n</code></pre> <ul> <li>List <code>/var</code> files larger than 1 megabyte but less than 1 gigabyte. The example here uses advanced <code>grep</code> commands with regular expressions. Novices don't have to struggle too much, there will be a special tutorial to introduce these regular expressions in the future.</li> </ul> <pre><code>$ ls -lhR /var/ | grep ^\\- | grep -E \"[1-9]*\\.[0-9]*M\" \n...\n-rw-r--r--. 1 apache apache 1.2M 10 may.  13:02 XB RiyazBdIt.ttf\n-rw-r--r--. 1 apache apache 1.2M 10 may.  13:02 XB RiyazBd.ttf\n-rw-r--r--. 1 apache apache 1.1M 10 may.  13:02 XB RiyazIt.ttf\n...\n</code></pre> <p>Of course, we highly recommend that you use the <code>find</code> command.</p> <pre><code>$ find /var -size +1M -a -size -1024M  -a -type f  -exec ls -lh {} \\;\n</code></pre> <ul> <li>Show the rights on a folder:</li> </ul> <p>To find out the rights to a folder, in our example <code>/etc</code>, the following command would not be appropriate:</p> <pre><code>$ ls -l /etc\ntotal 1332\n-rw-r--r--.  1 root root     44 18 nov.  17:04 adjtime\n-rw-r--r--.  1 root root   1512 12 janv.  2010 aliases\n-rw-r--r--.  1 root root  12288 17 nov.  17:41 aliases.db\ndrwxr-xr-x.  2 root root   4096 17 nov.  17:48 alternatives\n...\n</code></pre> <p>The above command will display the contents of the folder (inside) by default. For the folder itself, you can use the <code>-d</code> option.</p> <pre><code>$ ls -ld /etc\ndrwxr-xr-x. 69 root root 4096 18 nov.  17:05 /etc\n</code></pre> <ul> <li>Sort by file size, largest first:</li> </ul> <pre><code>$ ls -lhS\n</code></pre> <ul> <li>time/date format with <code>-l</code>:</li> </ul> <pre><code>$ ls -l --time-style=\"+%Y-%m-%d %m-%d %H:%M\" /\ntotal 12378\ndr-xr-xr-x. 2 root root 4096 2014-11-23 11-23 03:13 bin\ndr-xr-xr-x. 5 root root 1024 2014-11-23 11-23 05:29 boot\n</code></pre> <ul> <li>Add the trailing slash to the end of folders:</li> </ul> <p>By default, the <code>ls</code> command does not display the last slash of a folder. In some cases, like for scripts for example, it is useful to display them:</p> <pre><code>$ ls -dF /etc\n/etc/\n</code></pre> <ul> <li>Hide some extensions:</li> </ul> <pre><code>$ ls /etc --hide=*.conf\n</code></pre>"},{"location":"books/admin_guide/03-commands/#mkdir-command","title":"<code>mkdir</code> command","text":"<p>The <code>mkdir</code> command creates a directory or directory tree.</p> <pre><code>mkdir [-p] directory [directory] [...]\n</code></pre> <p>Example:</p> <pre><code>$ mkdir /home/rockstar/work\n</code></pre> <p>The \"rockstar\" directory must exist to create the \"work\" directory.</p> <p>Otherwise, the <code>-p</code> option should be used. The <code>-p</code> option creates the parent directories if they do not exist.</p> <p>Danger</p> <p>It is not recommended to use Linux command names as directory or file names.</p>"},{"location":"books/admin_guide/03-commands/#touch-command","title":"<code>touch</code> command","text":"<p>The <code>touch</code> command changes the timestamp of a file or creates an empty file if the file does not exist.</p> <pre><code>touch [-t date] file\n</code></pre> <p>Example:</p> <pre><code>$ touch /home/rockstar/myfile\n</code></pre> Option Information <code>-t date</code> Changes the date of last modification of the file with the specified date. <p>Date format: <code>[AAAA]MMJJhhmm[ss]</code></p> <p>Tip</p> <p>The <code>touch</code> command is primarily used to create an empty file, but it can be useful for incremental or differential backups for example. Indeed, the only effect of executing a <code>touch</code> on a file will be to force it to be saved during the next backup.</p>"},{"location":"books/admin_guide/03-commands/#rmdir-command","title":"<code>rmdir</code> command","text":"<p>The <code>rmdir</code> command deletes an empty directory.</p> <p>Example:</p> <pre><code>$ rmdir /home/rockstar/work\n</code></pre> Option Information <code>-p</code> Removes the parent directory or directories provided if they are empty. <p>Tip</p> <p>To delete both a non-empty directory and its contents, use the <code>rm</code> command.</p>"},{"location":"books/admin_guide/03-commands/#rm-command","title":"<code>rm</code> command","text":"<p>The <code>rm</code> command deletes a file or directory.</p> <pre><code>rm [-f] [-r] file [file] [...]\n</code></pre> <p>Danger</p> <p>Any deletion of a file or directory is final.</p> Options Information <code>-f</code> Do not ask whether to delete. <code>-i</code> Ask whether to delete. <code>-r</code> Delete a directory and recursively delete its subdirectories. <p>Note</p> <p>The <code>rm</code> command itself does not ask for confirmation when deleting files. However, with a Red Hat/Rocky distribution, <code>rm</code> does ask for confirmation of deletion because the <code>rm</code> command is an <code>alias</code> of the <code>rm -i</code> command. Don't be surprised if on another distribution, like Debian for example, you don't get a confirmation request.</p> <p>Deleting a folder with the <code>rm</code> command, whether the folder is empty or not, will require the <code>-r</code> option to be added.</p> <p>The end of the options is signaled to the shell by a double dash <code>--</code>.</p> <p>In the example:</p> <pre><code>$ &gt;-hard-hard # To create an empty file called -hard-hard\nhard-hard\n[CTRL+C] To interrupt the creation of the file\n$ rm -f -- -hard-hard\n</code></pre> <p>The hard-hard file name starts with a <code>-</code>. Without the use of the <code>--</code> the shell would have interpreted the <code>-d</code> in <code>-hard-hard</code> as an option.</p>"},{"location":"books/admin_guide/03-commands/#mv-command","title":"<code>mv</code> command","text":"<p>The <code>mv</code> command moves and renames a file.</p> <pre><code>mv file [file ...] destination\n</code></pre> <p>Examples:</p> <pre><code>$ mv /home/rockstar/file1 /home/rockstar/file2\n$ mv /home/rockstar/file1 /home/rockstar/file2 /tmp\n</code></pre> Options Information <code>-f</code> Don't ask for confirmation if overwriting the destination file. <code>-i</code> Request confirmation if overwriting destination file (default). <p>A few concrete cases will help you understand the difficulties that can arise:</p> <pre><code>$ mv /home/rockstar/file1 /home/rockstar/file2\n</code></pre> <p>Renames <code>file1</code> to <code>file2</code>. If <code>file2</code> already exists, replace the contents of the file with <code>file1</code>.</p> <pre><code>$ mv /home/rockstar/file1 /home/rockstar/file2 /tmp\n</code></pre> <p>Moves <code>file1</code> and <code>file2</code> into the <code>/tmp</code> directory.</p> <pre><code>$ mv file1 /repexist/file2\n</code></pre> <p>Moves <code>file1</code> into <code>repexist</code> and renames it <code>file2</code>.</p> <pre><code>$ mv file1 file2\n</code></pre> <p><code>file1</code> is renamed to <code>file2</code>.</p> <pre><code>$ mv file1 /repexist\n</code></pre> <p>If the destination directory exists, <code>file1</code> is moved to <code>/repexist</code>.</p> <pre><code>$ mv file1 /wrongrep\n</code></pre> <p>If the destination directory does not exist, <code>file1</code> is renamed to <code>wrongrep</code> in the root directory.</p>"},{"location":"books/admin_guide/03-commands/#cp-command","title":"<code>cp</code> command","text":"<p>The <code>cp</code> command copies a file.</p> <pre><code>cp file [file ...] destination\n</code></pre> <p>Example:</p> <pre><code>$ cp -r /home/rockstar /tmp\n</code></pre> Options Information <code>-i</code> Request confirmation if overwriting (default). <code>-f</code> Do not ask for confirmation if overwriting the destination file. <code>-p</code> Keeps the owner, permissions and timestamp of the copied file. <code>-r</code> Copies a directory with its files and subdirectories. <code>-s</code> Creates a symbolic link rather than copying. <pre><code>cp file1 /repexist/file2\n</code></pre> <p><code>file1</code> is copied to <code>/repexist</code> under the name <code>file2</code>.</p> <pre><code>$ cp file1 file2\n</code></pre> <p><code>file1</code> is copied as <code>file2</code> to this directory.</p> <pre><code>$ cp file1 /repexist\n</code></pre> <p>If the destination directory exists, <code>file1</code> is copied to <code>/repexist</code>.</p> <pre><code>$ cp file1 /wrongrep\n</code></pre> <p>If the destination directory does not exist, <code>file1</code> is copied under the name <code>wrongrep</code> to the root directory.</p>"},{"location":"books/admin_guide/03-commands/#visualization","title":"Visualization","text":""},{"location":"books/admin_guide/03-commands/#file-command","title":"<code>file</code> command","text":"<p>The <code>file</code> command displays the type of a file.</p> <pre><code>file file1 [files]\n</code></pre> <p>Example:</p> <pre><code>$ file /etc/passwd /etc\n/etc/passwd:    ASCII text\n/etc:        directory\n</code></pre>"},{"location":"books/admin_guide/03-commands/#more-command","title":"<code>more</code> command","text":"<p>The <code>more</code> command displays the contents of one or more files screen by screen.</p> <pre><code>more file1 [files]\n</code></pre> <p>Example:</p> <pre><code>$ more /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n...\n</code></pre> <p>Using the ENTER key, the move is line by line. Using the SPACE key, the move is page by page. <code>/text</code> allows you to search for the occurrence in the file.</p>"},{"location":"books/admin_guide/03-commands/#less-command","title":"<code>less</code> command","text":"<p>The <code>less</code> command displays the contents of one or more files. The <code>less</code> command is interactive and has its own commands for use.</p> <pre><code>less file1 [files]\n</code></pre> <p>The commands specific to <code>less</code> are:</p> Command Action h Help. \u2191\u2193\u2192\u2190 Move up, down a line, or to the right or left. Enter Move down one line. Space Move down one page. PgUp and PgDn Move up or down one page. gg and G Move to the first and last pages <code>/text</code> Search for text. q Quit the <code>less</code> command."},{"location":"books/admin_guide/03-commands/#cat-command","title":"<code>cat</code> command","text":"<p>The <code>cat</code> command concatenates the contents of multiple files and displays the result on the standard output.</p> <pre><code>cat file1 [files]\n</code></pre> <p>Example 1 - Displaying the contents of a file to the standard output:</p> <pre><code>$ cat /etc/passwd\n</code></pre> <p>Example 2 - Displaying the contents of multiple files to standard output:</p> <pre><code>$ cat /etc/passwd /etc/group\n</code></pre> <p>Example 3 - Combining the contents of multiple files into one file using output redirection:</p> <pre><code>$ cat /etc/passwd /etc/group &gt; usersAndGroups.txt\n</code></pre> <p>Example 4 - Displaying the line numbering:</p> <pre><code>$ cat -n /etc/profile\n     1    # /etc/profile: system-wide .profile file for the Bourne shell (sh(1))\n     2    # and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).\n     3\n     4    if [ \"`id -u`\" -eq 0 ]; then\n     5      PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n     6    else\n\u2026\n</code></pre> <p>Example 5 - Shows the numbering of non-empty lines:</p> <pre><code>$ cat -b /etc/profile\n     1    # /etc/profile: system-wide .profile file for the Bourne shell (sh(1))\n     2    # and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).\n\n     3    if [ \"`id -u`\" -eq 0 ]; then\n     4      PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n     5    else\n\u2026\n</code></pre>"},{"location":"books/admin_guide/03-commands/#tac-command","title":"<code>tac</code> command","text":"<p>The <code>tac</code> command does almost the opposite of the <code>cat</code> command. It displays the contents of a file starting from the end (which is particularly interesting for reading logs!).</p> <p>Example: Display a log file by displaying the last line first:</p> <pre><code>[root]# tac /var/log/messages | less\n</code></pre>"},{"location":"books/admin_guide/03-commands/#head-command","title":"<code>head</code> command","text":"<p>The <code>head</code> command displays the beginning of a file.</p> <pre><code>head [-n x] file\n</code></pre> Option Description <code>-n x</code> Display the first <code>x</code> lines of the file <p>By default (without the <code>-n</code> option), the <code>head</code> command will display the first 10 lines of the file.</p>"},{"location":"books/admin_guide/03-commands/#tail-command","title":"<code>tail</code> command","text":"<p>The <code>tail</code> command displays the end of a file.</p> <pre><code>tail [-f] [-n x] file\n</code></pre> Option Description <code>-n x</code> Displays the last <code>x</code> lines of the file <code>-f</code> Displays changes to the file in real time <p>Example:</p> <pre><code>tail -n 3 /etc/passwd\nsshd:x:74:74:Privilege-separeted sshd:/var/empty /sshd:/sbin/nologin\ntcpdump::x:72:72::/:/sbin/nologin\nuser1:x:500:500:grp1:/home/user1:/bin/bash\n</code></pre> <p>With the <code>-f</code> option, the change information of the file will always be output unless the user exits the monitoring state with CTRL + C. This option is very frequently used to track log files (the logs) in real time.</p> <p>Without the <code>-n</code> option, the <code>tail</code> command displays the last 10 lines of the file.</p>"},{"location":"books/admin_guide/03-commands/#sort-command","title":"<code>sort</code> command","text":"<p>The <code>sort</code> command sorts the lines of a file.</p> <p>It allows you to order the result of a command or the content of a file in a given order, numerically, alphabetically, by size (KB, MB, GB) or in reverse order.</p> <pre><code>sort [-k] [-n] [-u] [-o file] [-t] file\n</code></pre> <p>Example:</p> <pre><code>$ sort -k 3,4 -t \":\" -n /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nadm:x:3:4:adm:/var/adm/:/sbin/nologin\n</code></pre> Option Description <code>-k</code> Specify the columns to be separated. You can specify multiple columns. <code>-n</code> Requests a numeric sort. <code>-o file</code> Saves the sort to the specified file. <code>-t</code> Specify a delimiter, which requires that the contents of the corresponding file must be regularly delimited column contents, otherwise they cannot be sorted properly. <code>-r</code> Reverse the order of the result. Used in conjunction with the <code>-n</code> option to sort in order from largest to smallest. <code>-u</code> Remove duplicates after sorting. Equivalent to <code>sort file | uniq</code>. <p>The <code>sort</code> command sorts the file only on the screen. The file is not modified by the sorting. To save the sort, use the <code>-o</code> option or an output redirection <code>&gt;</code>.</p> <p>By default, the numbers are sorted according to their character. Thus, \"110\" will be before \"20\", which will itself be before \"3\". The <code>-n</code> option must be specified so that the numeric character blocks are sorted by their value.</p> <p>The <code>sort</code> command reverses the order of the results, with the <code>-r</code> option:</p> <pre><code>$ sort -k 3 -t \":\" -n -r /etc/passwd\nnobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin\nsystemd-coredump:x:999:997:systemd Core Dumper:/:/sbin/nologin\npolkitd:x:998:996:User for polkitd:/:/sbin/nologin\n</code></pre> <p>In this example, the <code>sort</code> command will sort the contents of the <code>/etc/passwd</code> file this time from largest uid (user identifier) to smallest.</p> <p>Some advanced examples of using the <code>sort</code> command:</p> <ul> <li>Shuffling values</li> </ul> <p>The <code>sort</code> command also allows you to shuffle values with the <code>-R</code> option:</p> <pre><code>$ sort -R /etc/passwd\n</code></pre> <ul> <li>Sorting IP addresses</li> </ul> <p>A system administrator is quickly confronted with the processing of IP addresses from the logs of his services such as SMTP, VSFTP or Apache. These addresses are typically extracted with the <code>cut</code> command.</p> <p>Here is an example with the file <code>dns-client.txt</code>:</p> <pre><code>192.168.1.10\n192.168.1.200\n5.1.150.146\n208.128.150.98\n208.128.150.99\n</code></pre> <pre><code>$ sort -nr dns-client.txt\n208.128.150.99\n208.128.150.98\n192.168.1.200\n192.168.1.10\n5.1.150.146\n</code></pre> <ul> <li>Sorting file by removing duplicates</li> </ul> <p>The <code>sort</code> command knows how to remove the duplicates from the file output using <code>-u</code> as option.</p> <p>Here is an example with the file <code>colours.txt</code>:</p> <p><pre><code>Red\nGreen\nBlue\nRed\nPink\n</code></pre> <pre><code>$ sort -u colours.txt\nBlue\nGreen\nPink\nRed\n</code></pre></p> <ul> <li>Sorting file by sizes</li> </ul> <p>The <code>sort</code> command knows how to recognize file sizes, from commands like <code>ls</code> with the <code>-h</code> option.</p> <p>Here is an example with the file <code>size.txt</code>:</p> <pre><code>1.7G\n18M\n69K\n2.4M\n1.2M\n4.2G\n6M\n124M\n12.4M\n4G\n</code></pre> <pre><code>$ sort -hr size.txt\n4.2G\n4G\n1.7G\n124M\n18M\n12.4M\n6M\n2.4M\n1.2M\n69K\n</code></pre>"},{"location":"books/admin_guide/03-commands/#wc-command","title":"<code>wc</code> command","text":"<p>The <code>wc</code> command counts the number of lines, words and/or bytes in a file.</p> <pre><code>wc [-l] [-m] [-w] file [files]\n</code></pre> Option Description <code>-c</code> Count the number of bytes. <code>-m</code> Count the number of characters. <code>-l</code> Counts the number of lines. <code>-w</code> Counts the number of words."},{"location":"books/admin_guide/03-commands/#search","title":"Search","text":""},{"location":"books/admin_guide/03-commands/#find-command","title":"<code>find</code> command","text":"<p>The <code>find</code> command searches for files or directories location.</p> <pre><code>find directory [-name name] [-type type] [-user login] [-date date]\n</code></pre> <p>Since there are so many options to the <code>find</code> command, it is best to refer to the <code>man</code>.</p> <p>If the search directory is not specified, the <code>find</code> command will search from the current directory.</p> Option Description <code>-perm permissions</code> Search for files by their permissions. <code>-size size</code> Search for files by size."},{"location":"books/admin_guide/03-commands/#-exec-option-of-the-find-command","title":"<code>-exec</code> option of the <code>find</code> command","text":"<p>It is possible to use the <code>-exec</code> option of the <code>find</code> command to execute a command on each result line:</p> <pre><code>$ find /tmp -name *.txt -exec rm -f {} \\;\n</code></pre> <p>The previous command searches for all files in the <code>/tmp</code> directory named <code>*.txt</code> and deletes them.</p> <p>Understand the <code>-exec</code> option</p> <p>In the example above, the <code>find</code> command will construct a string representing the command to be executed.</p> <p>If the <code>find</code> command finds three files named <code>log1.txt</code>, <code>log2.txt</code>, and <code>log3.txt</code>, then the <code>find</code> command will construct the string by replacing in the string <code>rm -f {} \\;</code> the braces with one of the results of the search, and do this as many times as there are results.</p> <p>This will give us:</p> <pre><code>rm -f /tmp/log1.txt ; rm -f /tmp/log2.txt ; rm -f /tmp/log3.txt ;\n</code></pre> <p>The <code>;</code> character is a special shell character that must be protected by a <code>\\</code> to prevent it from being interpreted too early by the <code>find</code> command (and not in the <code>-exec</code>).</p> <p>Tip</p> <p><code>$ find /tmp -name *.txt -delete</code> does the same thing.</p>"},{"location":"books/admin_guide/03-commands/#whereis-command","title":"<code>whereis</code> command","text":"<p>The <code>whereis</code> command searches for files related to a command.</p> <pre><code>whereis [-b] [-m] [-s] command\n</code></pre> <p>Example:</p> <pre><code>$ whereis -b ls\nls: /bin/ls\n</code></pre> Option Description <code>-b</code> Searches only the binary file. <code>-m</code> Searches only for man pages. <code>-s</code> Searches only for source files."},{"location":"books/admin_guide/03-commands/#grep-command","title":"<code>grep</code> command","text":"<p>The <code>grep</code> command searches for a string in a file.</p> <pre><code>grep [-w] [-i] [-v] \"string\" file\n</code></pre> <p>Example:</p> <pre><code>$ grep -w \"root:\" /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n</code></pre> Option Description <code>-i</code> Ignores the case of the searched string. <code>-v</code> Excludes lines containing the string. <code>-w</code> Searches for the exact word. <p>The <code>grep</code> command returns the complete line containing the string you are looking for. * The <code>^</code> special character is used to search for a string at the beginning of a line. * The special character <code>$</code> searches for a string at the end of a line.</p> <pre><code>$ grep -w \"^root\" /etc/passwd\n</code></pre> <p>Note</p> <p>This command is very powerful and it is highly recommended to consult its manual. It has many derivatives.</p> <p>It is possible to search for a string in a file tree with the <code>-R</code> option.</p> <pre><code>grep -R \"Virtual\" /etc/httpd\n</code></pre>"},{"location":"books/admin_guide/03-commands/#meta-characters-wildcards","title":"Meta-characters (wildcards)","text":"<p>Meta-characters replace one or more characters (or even an absence of characters) during a search. These meta-characters are also known as wildcards.</p> <p>They can be combined.</p> <p>The <code>*</code> character replaces a string composed of any characters. The <code>*</code> character can also represent an absence of character.</p> <pre><code>$ find /home -name \"test*\"\n/home/rockstar/test\n/home/rockstar/test1\n/home/rockstar/test11\n/home/rockstar/tests\n/home/rockstar/test362\n</code></pre> <p>Meta-characters allow more complex searches by replacing all or part of a word. Simply replace the unknowns with these special characters.</p> <p>The character <code>?</code> replaces a single character, whatever it is.</p> <pre><code>$ find /home -name \"test?\"\n/home/rockstar/test1\n/home/rockstar/tests\n</code></pre> <p>The square brackets <code>[</code> and <code>]</code> are used to specify the values that a single character can take.</p> <pre><code>$ find /home -name \"test[123]*\"\n/home/rockstar/test1\n/home/rockstar/test11\n/home/rockstar/test362\n</code></pre> <p>Note</p> <p>Always surround words containing meta-characters with <code>\"</code> to prevent them from being replaced by the names of files that meet the criteria.</p> <p>Warning</p> <p>Do not confuse shell meta-characters with regular expression meta-characters. The <code>grep</code> command uses regular expression meta-characters.</p>"},{"location":"books/admin_guide/03-commands/#redirects-and-pipes","title":"Redirects and pipes","text":""},{"location":"books/admin_guide/03-commands/#standard-input-and-output","title":"Standard input and output","text":"<p>On UNIX and Linux systems, there are three standard streams. They allow programs, via the <code>stdio.h</code> library, to input or output information.</p> <p>These streams are called X channel or X file descriptor.</p> <p>By default:</p> <ul> <li>the keyboard is the input device for channel 0, called stdin ;</li> <li>the screen is the output device for channels 1 and 2, called stdout and stderr.</li> </ul> <p></p> <p>stderr receives the error streams returned by a command. The other streams are directed to stdout.</p> <p>These streams point to peripheral files, but since everything is a file in UNIX/Linux, I/O streams can easily be diverted to other files. This principle is the strength of the shell.</p>"},{"location":"books/admin_guide/03-commands/#input-redirection","title":"Input redirection","text":"<p>It is possible to redirect the input stream from another file with the character <code>&lt;</code> or <code>&lt;&lt;</code>. The command will read the file instead of the keyboard:</p> <pre><code>$ ftp -in serverftp &lt;&lt; ftp-commands.txt\n</code></pre> <p>Note</p> <p>Only commands that require keyboard input will be able to handle input redirection.</p> <p>Input redirection can also be used to simulate user interactivity. The command will read the input stream until it encounters the defined keyword after the input redirection.</p> <p>This feature is used to script interactive commands:</p> <pre><code>$ ftp -in serverftp &lt;&lt; END\nuser alice password\nput file\nbye\nEND\n</code></pre> <p>The keyword <code>END</code> can be replaced by any word.</p> <pre><code>$ ftp -in serverftp &lt;&lt; STOP\nuser alice password\nput file\nbye\nSTOP\n</code></pre> <p>The shell exits the <code>ftp</code> command when it receives a line containing only the keyword.</p> <p>Warning</p> <p>The ending keyword, here <code>END</code> or <code>STOP</code>, must be the only word on the line and must be at the beginning of the line.</p> <p>The standard input redirection is rarely used because most commands accept a filename as an argument.</p> <p>The command <code>wc</code> could be used like this:</p> <pre><code>$ wc -l .bash_profile\n27 .bash_profile # the number of lines is followed by the file name\n$ wc -l &lt; .bash_profile\n27 # returns only the number of lines\n</code></pre>"},{"location":"books/admin_guide/03-commands/#output-redirection","title":"Output redirection","text":"<p>Standard output can be redirected to other files using the <code>&gt;</code> or <code>&gt;&gt;</code> characters.</p> <p>The simple <code>&gt;</code> redirection overwrites the contents of the output file:</p> <pre><code>$ date +%F &gt; date_file\n</code></pre> <p>When the <code>&gt;&gt;</code> character is used, it indicates that the output result of the command is appended to the file content.</p> <pre><code>$ date +%F &gt;&gt; date_file\n</code></pre> <p>In both cases, the file is automatically created when it does not exist.</p> <p>The standard error output can also be redirected to another file. This time it will be necessary to specify the channel number (which can be omitted for channels 0 and 1):</p> <pre><code>$ ls -R / 2&gt; errors_file\n$ ls -R / 2&gt;&gt; errors_file\n</code></pre>"},{"location":"books/admin_guide/03-commands/#examples-of-redirection","title":"Examples of redirection","text":"<p>Redirection of 2 outputs to 2 files:</p> <pre><code>$ ls -R / &gt;&gt; ok_file 2&gt;&gt; nok_file\n</code></pre> <p>Redirection of the 2 outputs to a single file:</p> <pre><code>$ ls -R / &gt;&gt; log_file 2&gt;&amp;1\n</code></pre> <p>Redirection of stderr to a \"bottomless pit\" (<code>/dev/null</code>):</p> <pre><code>$ ls -R / 2&gt;&gt; /dev/null\n</code></pre> <p>When both output streams are redirected, no information is displayed on the screen. To use both the output redirection and to keep the display, you will have to use the command <code>tee</code>.</p>"},{"location":"books/admin_guide/03-commands/#pipes","title":"Pipes","text":"<p>A pipe is a mechanism allowing you to link the standard output of a first command to the standard input of a second command.</p> <p>This communication is uni directional and is done with the <code>|</code> symbol. The pipe symbol <code>|</code> is obtained by pressing the  SHIFT + | simultaneously.</p> <p></p> <p>All data sent by the control on the left of the pipe through the standard output channel is sent to the standard input channel of the control on the right.</p> <p>The commands particularly used after a pipe are filters.</p> <ul> <li>Examples:</li> </ul> <p>Display only the beginning:</p> <pre><code>$ ls -lia / | head\n</code></pre> <p>Display only the end:</p> <pre><code>$ ls -lia / | tail\n</code></pre> <p>Sort the result:</p> <pre><code>$ ls -lia / | sort\n</code></pre> <p>Count the number of words / characters:</p> <pre><code>$ ls -lia / | wc\n</code></pre> <p>Search for a string in the result:</p> <pre><code>$ ls -lia / | grep fichier\n</code></pre>"},{"location":"books/admin_guide/03-commands/#special-points","title":"Special Points","text":""},{"location":"books/admin_guide/03-commands/#tee-command","title":"<code>tee</code> command","text":"<p>The <code>tee</code> command is used to redirect the standard output of a command to a file while maintaining the screen display.</p> <p>It is combined with the <code>|</code> pipe to receive as input the output of the command to be redirected:</p> <pre><code>$ ls -lia / | tee fic\n$ cat fic\n</code></pre> <p>The <code>-a</code> option adds to the file instead of overwriting it.</p>"},{"location":"books/admin_guide/03-commands/#alias-and-unalias-commands","title":"<code>alias</code> and <code>unalias</code> commands","text":"<p>Using alias is a way to ask the shell to remember a particular command with its options and give it a name.</p> <p>For example:</p> <pre><code>$ ll\n</code></pre> <p>will replace the command:</p> <pre><code>$ ls -l\n</code></pre> <p>The <code>alias</code> command lists the aliases for the current session. Aliases are set by default on Linux distributions. Here, the aliases for a Rocky server:</p> <pre><code>$ alias\nalias l.='ls -d .* --color=auto'\nalias ll='ls -l --color=auto'\nalias ls='ls --color=auto'\nalias vi='vim'\nalias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'\n</code></pre> <p>The aliases are only defined temporarily, for the time of the user session.</p> <p>For permanent use, they must be created in the:</p> <ul> <li><code>.bashrc</code> file in the user's login directory;</li> <li><code>/etc/bashrc</code> file for all users.</li> </ul> <p>Warning</p> <p>Special care must be taken when using aliases which can be potentially dangerous! For example, an alias set up without the administrator's knowledge:</p> <pre><code>alias cd='rm -Rf'\n</code></pre> <p>The <code>unalias</code> command allows you to delete aliases.</p> <p>To delete a single alias:</p> <pre><code>$ unalias ll\n</code></pre> <p>To delete all aliases:</p> <pre><code>$ unalias -a\n</code></pre> <p>To disable an alias temporarily, the combination is <code>\\&lt;alias name&gt;</code>.</p> <p>For example if we do:</p> <pre><code>$ type ls\n</code></pre> <p>it might return the following:</p> <pre><code>ls is an alias to \u00ab ls -rt \u00bb\n</code></pre> <p>Now that this is known, we can see the results of using the alias or disabling it one time with the <code>\\</code> by executing the following:</p> <pre><code>$ ls file*   # order by time\nfile3.txt  file2.txt  file1.txt\n$ \\ls file*  # order by name\nfile1.txt  file2.txt  file3.txt\n</code></pre>"},{"location":"books/admin_guide/03-commands/#aliases-and-useful-functions","title":"Aliases and Useful Functions","text":"<ul> <li><code>grep</code> alias.</li> </ul> <p>Colorize the result of the <code>grep</code> command: <code>alias grep='grep --color=auto'</code></p> <ul> <li><code>mcd</code> function</li> </ul> <p>It is common to create a folder and then move around in it: <code>mcd() { mkdir -p \"$1\"; cd \"$1\"; }</code></p> <ul> <li><code>cls</code> function</li> </ul> <p>Move to a folder and list its contents: <code>cls() { cd \"$1\"; ls; }</code></p> <ul> <li><code>backup</code> function</li> </ul> <p>Create a backup copy of a file: <code>backup() { cp \"$1\"{,.bak}; }</code></p> <ul> <li><code>extract</code> function</li> </ul> <p>Extract any type of archive:</p> <pre><code>extract () {\n  if [ -f $1 ] ; then\n    case $1 in\n      *.tar.bz2) tar xjf $1 ;;\n      *.tar.gz) tar xzf $1 ;;\n      *.bz2) bunzip2 $1 ;;\n      *.rar) unrar e $1 ;;\n      *.gz) gunzip $1 ;;\n      *.tar) tar xf $1 ;;\n      *.tbz2) tar xjf $1 ;;\n      *.tgz) tar xzf $1 ;;\n      *.zip) unzip $1 ;;\n      *.Z) uncompress $1 ;;\n      *.7z) 7z x $1 ;;\n      *)\n        echo \"'$1' cannot be extracted via extract()\" ;;\n    esac\n  else\n    echo \"'$1' is not a valid file\"\n  fi\n}\n</code></pre> <ul> <li>If <code>alias cmount</code> returns the following: <code>alias cmount=\"mount | column -t\"</code></li> </ul> <p>Then we can use <code>cmount</code> to show all of the system mounts in columns like this: <code>[root]# cmount</code></p> <p>which would return our mounted filesystem in the following format:</p> <pre><code>/dev/simfs  on  /                                          type  simfs        (rw,relatime,usrquota,grpquota)\nproc        on  /proc                                      type  proc         (rw,relatime)\nsysfs       on  /sys                                       type  sysfs        (rw,relatime)\nnone        on  /dev                                       type  devtmpfs     (rw,relatime,mode=755)\nnone        on  /dev/pts                                   type  devpts       (rw,relatime,mode=600,ptmxmode=000)\nnone        on  /dev/shm                                   type  tmpfs        (rw,relatime)\nnone        on  /proc/sys/fs/binfmt_misc                   type  binfmt_misc  (rw,relatime)\n</code></pre>"},{"location":"books/admin_guide/03-commands/#the-character","title":"The character <code>;</code>","text":"<p>The <code>;</code> character strings the commands.</p> <p>The commands will all run sequentially in the order of input once the user presses ENTER.</p> <pre><code>$ ls /; cd /home; ls -lia; cd /\n</code></pre>"},{"location":"books/admin_guide/03-commands/#check-your-knowledge","title":"Check your Knowledge","text":"<p> What defines a user under Linux? (7 answers)</p> <p> What characterizes a long option for a command?</p> <p> Which commands allow you to search for help on a command?</p> <ul> <li> <code>google</code> </li> <li> <code>chuck --norris</code> </li> <li> <code>info</code> </li> <li> <code>apropos</code> </li> <li> <code>whatis</code> </li> </ul> <p> Which command allows you to view a user's history?</p> <p> Which command allows you to search for text in a file?</p> <ul> <li> <code>find</code> </li> <li> <code>grep</code> </li> </ul> <p> Which command allows you to search for a file?</p> <ul> <li> <code>find</code> </li> <li> <code>grep</code> </li> </ul> <p> Which command redirects the error stream of a command to a new <code>errors.log</code> file?</p> <ul> <li> <code>ls -R / 2&gt; errors.log</code> </li> <li> <code>ls -R / 2&gt;&gt; errors.log</code> </li> <li> <code>ls -R / 2&gt; errors.log 2&gt;&amp;1</code> </li> </ul>"},{"location":"books/learning_ansible/00-toc/","title":"Learning Ansible with Rocky","text":"<p>Ansible is a simple, yet powerful, automation engine for Linux. This tutorial will guide you through the concepts of using Ansible to automate your IT tasks in a way that is (hopefully) fun and informative. Using the exercises throughout these chapters, will help you gain a comfort level with Ansible in real-world applications.</p>"},{"location":"guides/","title":"Linux Guides","text":"<p>Welcome to the Guides section of the Linux documentation. You will find many \"how-to\" documents and more here. These documents are changing all the time. Longer document groups are in Books, educational instructions are in Labs.</p>"},{"location":"guides/advanced-commands/","title":"Advanced Commands for Linux users","text":"<p>Advanced commands provide greater customization and controls in more specialized situations once you become familiar with basic commands.</p> <p>Objectives: In this chapter, future Linux administrators will learn:</p> <p> some useful commands not covered in the previous chapter.   some advanced commands.</p> <p> user commands, Linux</p> <p>Knowledge:  Complexity:  </p> <p>Reading time: 20 minutes</p>"},{"location":"guides/advanced-commands/#uniq-command","title":"<code>uniq</code> command","text":"<p>The <code>uniq</code> command is a very powerful command, used with the <code>sort</code> command, especially for log file analysis. It allows you to sort and display entries by removing duplicates.</p> <p>To illustrate how the <code>uniq</code> command works, let's use a <code>firstnames.txt</code> file containing a list of first names:</p> <pre><code>antoine\nxavier\nsteven\npatrick\nxavier\nantoine\nantoine\nsteven\n</code></pre> <p>Note</p> <p><code>uniq</code> requires the input file to be sorted before running because it only compares consecutive lines.</p> <p>With no argument, the <code>uniq</code> command will not display identical lines that follow each other in the <code>firstnames.txt</code> file:</p> <pre><code>$ sort firstnames.txt | uniq\nantoine\npatrick\nsteven\nxavier\n</code></pre> <p>To display only the rows that appear only once, use the <code>-u</code> option:</p> <pre><code>$ sort firstnames.txt | uniq -u\npatrick\n</code></pre> <p>Conversely, to display only the lines that appear at least twice in the file, use the <code>-d</code> option:</p> <pre><code>$ sort firstnames.txt | uniq -d\nantoine\nsteven\nxavier\n</code></pre> <p>To simply delete lines that appear only once, use the <code>-D</code> option:</p> <pre><code>$ sort firstnames.txt | uniq -D\nantoine\nantoine\nantoine\nsteven\nsteven\nxavier\nxavier\n</code></pre> <p>Finally, to count the number of occurrences of each line, use the <code>-c</code> option:</p> <pre><code>$ sort firstnames.txt | uniq -c\n      3 antoine\n      1 patrick\n      2 steven\n      2 xavier\n</code></pre> <pre><code>$ sort firstnames.txt | uniq -cd\n      3 antoine\n      2 steven\n      2 xavier\n</code></pre>"},{"location":"guides/advanced-commands/#xargs-commands","title":"<code>xargs</code> commands","text":"<p>The <code>xargs</code> command allows the construction and execution of command lines from standard input.</p> <p>The <code>xargs</code> command reads whitespace or linefeed delimited arguments from standard input, and executes the command (<code>/bin/echo</code> by default) one or more times using the initial arguments followed by the arguments read from standard input.</p> <p>A first and simplest example would be the following:</p> <pre><code>$ xargs\nuse\nof\nxargs\n&lt;CTRL+D&gt;\nuse of xargs\n</code></pre> <p>The <code>xargs</code> command waits for an input from the standard stdin input. Three lines are entered. The end of the user input is specified to <code>xargs</code> by the keystroke sequence CTRL+D. <code>xargs</code> then executes the default command <code>echo</code> followed by the three arguments corresponding to the user input, namely:</p> <pre><code>$ echo \"use\" \"of\" \"xargs\"\nuse of xargs\n</code></pre> <p>It is possible to specify a command to be run by <code>xargs</code>.</p> <p>In the following example, <code>xargs</code> will run the command <code>ls -ld</code> on the set of folders specified in the standard input:</p> <pre><code>$ xargs ls -ld\n/home\n/tmp\n/root\n&lt;CTRL+D&gt;\ndrwxr-xr-x. 9 root root 4096  5 avril 11:10 /home\ndr-xr-x---. 2 root root 4096  5 avril 15:52 /root\ndrwxrwxrwt. 3 root root 4096  6 avril 10:25 /tmp\n</code></pre> <p>In practice, the <code>xargs</code> command executed the <code>ls -ld /home /tmp /root</code> command.</p> <p>What happens if the command to be executed does not accept multiple arguments, such as with the <code>find</code> command?</p> <pre><code>$ xargs find /var/log -name\n*.old\n*.log\nfind: paths must precede expression: *.log\n</code></pre> <p>The <code>xargs</code> command attempted to execute the <code>find</code> command with multiple arguments behind the <code>-name</code> option, which caused <code>find</code> to generate an error:</p> <pre><code>$ find /var/log -name \"*.old\" \"*.log\"\nfind: paths must precede expression: *.log\n</code></pre> <p>In this case, the <code>xargs</code> command must be forced to execute the <code>find</code> command several times (once per line entered as standard input). The <code>-L</code> option followed by an integer allows you to specify the maximum number of entries to be processed with the command at one time:</p> <pre><code>$ xargs -L 1 find /var/log -name\n*.old\n/var/log/dmesg.old\n*.log\n/var/log/boot.log\n/var/log/anaconda.yum.log\n/var/log/anaconda.storage.log\n/var/log/anaconda.log\n/var/log/yum.log\n/var/log/audit/audit.log\n/var/log/anaconda.ifcfg.log\n/var/log/dracut.log\n/var/log/anaconda.program.log\n&lt;CTRL+D&gt;\n</code></pre> <p>To specify both arguments on the same line, use the <code>-n 1</code> option:</p> <pre><code>$ xargs -n 1 find /var/log -name\n*.old *.log\n/var/log/dmesg.old\n/var/log/boot.log\n/var/log/anaconda.yum.log\n/var/log/anaconda.storage.log\n/var/log/anaconda.log\n/var/log/yum.log\n/var/log/audit/audit.log\n/var/log/anaconda.ifcfg.log\n/var/log/dracut.log\n/var/log/anaconda.program.log\n&lt;CTRL+D&gt;\n</code></pre> <p>Case study of a backup with a <code>tar</code> based on a search:</p> <pre><code>$ find /var/log/ -name \"*.log\" -mtime -1 | xargs tar cvfP /root/log.tar\n$ tar tvfP /root/log.tar\n-rw-r--r-- root/root      1720 2017-04-05 15:43 /var/log/boot.log\n-rw-r--r-- root/root    499270 2017-04-06 11:01 /var/log/audit/audit.log\n</code></pre> <p>The special feature of the <code>xargs</code> command is that it places the input argument at the end of the called command. This works very well with the above example since the files passed in will form the list of files to be added to the archive.</p> <p>Using the example of the <code>cp</code> command, to copy a list of files in a directory, this list of files will be added at the end of the command... but what the <code>cp</code> command expects at the end of the command is the destination. To do this,  use the <code>-I</code> option to put the input arguments somewhere else than at the end of the line.</p> <pre><code>$ find /var/log -type f -name \"*.log\" | xargs -I % cp % /root/backup\n</code></pre> <p>The <code>-I</code> option allows you to specify a character (the <code>%</code> character in the above example) where the input files to <code>xargs</code> will be placed.</p>"},{"location":"guides/advanced-commands/#yum-utils-package","title":"<code>yum-utils</code> package","text":"<p>The <code>yum-utils</code> package is a collection of utilities, built for <code>yum</code> by various authors, which make it easier and more powerful to use.</p> <p>Note</p> <p>While <code>yum</code> has been replaced by <code>dnf</code> in Rocky Linux 8, the package name has remained <code>yum-utils</code>, although it can be installed as <code>dnf-utils</code> as well. These are classic YUM utilities implemented as CLI shims on top of DNF to maintain backwards compatibility with <code>yum-3</code>.</p> <p>Here are some examples of these utilities:</p> <ul> <li><code>repoquery</code> command</li> </ul> <p>The <code>repoquery</code> command is used to query the packages in the repository.</p> <p>Examples of use:</p> <ul> <li> <p>Display the dependencies of a package (it can be a software package that has been installed or not installed), equivalent to <code>dnf deplist &lt;package-name&gt;</code> <pre><code>repoquery --requires &lt;package-name&gt;\n</code></pre></p> </li> <li> <p>Display the files provided by an installed package (does not work for packages that are not installed), equivalent to <code>rpm -ql &lt;package-name&gt;</code></p> <pre><code>$ repoquery -l yum-utils\n/etc/bash_completion.d\n/etc/bash_completion.d/yum-utils.bash\n/usr/bin/debuginfo-install\n/usr/bin/find-repos-of-install\n/usr/bin/needs-restarting\n/usr/bin/package-cleanup\n/usr/bin/repo-graph\n/usr/bin/repo-rss\n/usr/bin/repoclosure\n/usr/bin/repodiff\n/usr/bin/repomanage\n/usr/bin/repoquery\n/usr/bin/reposync\n/usr/bin/repotrack\n/usr/bin/show-changed-rco\n/usr/bin/show-installed\n/usr/bin/verifytree\n/usr/bin/yum-builddep\n/usr/bin/yum-config-manager\n/usr/bin/yum-debug-dump\n/usr/bin/yum-debug-restore\n/usr/bin/yum-groups-manager\n/usr/bin/yumdownloader\n\u2026\n</code></pre> </li> <li> <p><code>yumdownloader</code> command:</p> </li> </ul> <p>The <code>yumdownloader</code> command downloads RPM packages from the repositories.  Equivalent to <code>dnf download --downloadonly --downloaddir ./  package-name</code></p> <p>Note</p> <p>This command is very useful to quickly build a local repository of a few rpms!</p> <p>Example: <code>yumdownloader</code> will download the samba rpm package and all its dependencies:</p> <pre><code>$ yumdownloader --destdir /var/tmp --resolve samba\nor\n$ dnf download --downloadonly --downloaddir /var/tmp  --resolve  samba\n</code></pre> Options Comments <code>--destdir</code> The downloaded packages will be stored in the specified folder. <code>--resolve</code> Also downloads the package dependencies."},{"location":"guides/advanced-commands/#psmisc-packages","title":"<code>psmisc</code> packages","text":"<p>The <code>psmisc</code> package contains utilities for managing system processes:</p> <ul> <li><code>pstree</code>: the <code>pstree</code> command displays the current processes on the system in a tree-like structure.</li> <li><code>killall</code>: the <code>killall</code> command sends a kill signal to all processes identified by name.</li> <li><code>fuser</code>: the <code>fuser</code> command identifies the <code>PID</code> of processes that use the specified files or file systems.</li> </ul> <p>Examples:</p> <pre><code>$ pstree\nsystemd\u2500\u252c\u2500NetworkManager\u2500\u2500\u25002*[{NetworkManager}]\n        \u251c\u2500agetty\n        \u251c\u2500auditd\u2500\u2500\u2500{auditd}\n        \u251c\u2500crond\n        \u251c\u2500dbus-daemon\u2500\u2500\u2500{dbus-daemon}\n        \u251c\u2500firewalld\u2500\u2500\u2500{firewalld}\n        \u251c\u2500lvmetad\n        \u251c\u2500master\u2500\u252c\u2500pickup\n        \u2502        \u2514\u2500qmgr\n        \u251c\u2500polkitd\u2500\u2500\u25005*[{polkitd}]\n        \u251c\u2500rsyslogd\u2500\u2500\u25002*[{rsyslogd}]\n        \u251c\u2500sshd\u2500\u2500\u2500sshd\u2500\u2500\u2500bash\u2500\u2500\u2500pstree\n        \u251c\u2500systemd-journal\n        \u251c\u2500systemd-logind\n        \u251c\u2500systemd-udevd\n        \u2514\u2500tuned\u2500\u2500\u25004*[{tuned}]\n</code></pre> <pre><code># killall httpd\n</code></pre> <p>Kill processes (option <code>-k</code>) that access the <code>/etc/httpd/conf/httpd.conf</code> file:</p> <pre><code># fuser -k /etc/httpd/conf/httpd.conf\n</code></pre>"},{"location":"guides/advanced-commands/#watch-command","title":"<code>watch</code> command","text":"<p>The <code>watch</code> command regularly executes a command and displays the result in the terminal in full screen.</p> <p>The <code>-n</code> option allows you to specify the number of seconds between each execution of the command.</p> <p>Note</p> <p>To exit the <code>watch</code> command, you must type the keys: CTRL+C to kill the process.</p> <p>Examples:</p> <ul> <li>Display the end of the <code>/etc/passwd</code> file every 5 seconds:</li> </ul> <pre><code>$ watch -n 5 tail -n 3 /etc/passwd\n</code></pre> <p>Result:</p> <pre><code>Every 5.0s: tail -n 3 /etc/passwd                                                                                                                                rockstar.rockylinux.lan: Thu Jul  1 15:43:59 2021\n\nsssd:x:996:993:User for sssd:/:/sbin/nologin\nchrony:x:995:992::/var/lib/chrony:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\n</code></pre> <ul> <li>Monitoring the number of files in a folder:</li> </ul> <pre><code>$ watch -n 1 'ls -l | wc -l'\n</code></pre> <ul> <li>Display a clock:</li> </ul> <pre><code>$ watch -t -n 1 date\n</code></pre>"},{"location":"guides/alma-installation/","title":"AlmaLinux Installation Guide","text":""},{"location":"guides/alma-installation/#last-updated-2023-02-09","title":"last updated: 2023-02-09","text":""},{"location":"guides/alma-installation/#almalinux-installation-guide-isos","title":"AlmaLinux installation guide (ISOs)","text":"<p>These guide steps describe how to download AlmaLinux ISO, create a USB stick, and install AlmaLinux OS using it.</p>"},{"location":"guides/alma-installation/#requirements","title":"Requirements","text":"<ul> <li>System requirements:<ul> <li>Disk space: 10GB minimum, 20GB recommended</li> <li>Minimum 1.5 GB RAM</li> </ul> </li> </ul> <p>Tip</p> <p>More about requirements: Red Hat Enterprise Linux Technology Capabilities and Limits.</p> <ul> <li>A USB flash drive of size 8GB as a minimum, 12GB or more recommended</li> </ul>"},{"location":"guides/alma-installation/#download-almalinux-iso","title":"Download AlmaLinux ISO","text":"<p>AlmaLinux supports both firmware interfaces: BIOS and UEFI. </p> <p>AlmaLinux supports four architectures:</p> <ul> <li>Intel/AMD (x86_64)</li> <li>ARM64 (aarch64)</li> <li>IBM PowerPC (ppc64le)</li> <li>IBM Z (s390x)</li> </ul> <p>AlmaLinux has 3 types of ISOs for each supported architecture:</p> <ul> <li><code>boot</code> - a single network installation CD image that downloads packages over the Internet.</li> <li><code>minimal</code> - a minimal self-containing DVD image that makes offline installation possible.</li> <li><code>dvd</code>  - a full installation DVD image that contains mostly all AlmaLinux packages. </li> </ul> <p>Tip</p> <p>There are also latest and update ISO images. Latest provides the latest minor version of the selected major version, like AlmaLinux-9-latest. Update files are ISOs that were rebuilt including some updates.</p> <p>There are a few ways to download AlmaLinux ISO:</p> <ul> <li>Download AlmaLinux ISO from the mirror. Select the nearest to your geographic area mirror from the list. You need the version/isos/arch/ directory to download the suitable ISO.</li> <li> <p>Download from the Public Package Repository:</p> <ul> <li>AlmaLinux 8</li> <li>AlmaLinux 9</li> <li>Lower and beta versions can be found in the Vault</li> </ul> </li> <li> <p>Run the <code>curl</code> command in the command line:</p> </li> </ul> <p>Warning</p> <p>This command example is for downloading the DVD ISO of AlmaLinux 9.1. AlmaLinux ISOs are named using the following convention:</p> <p>AlmaLinux-major version.minor version-architecture-ISO type.iso</p> <p>Change the version, architecture and type to the ones you need. </p> <pre><code>$ curl -O https://repo.almalinux.org/almalinux/9/isos/x86_64/AlmaLinux-9.1-x86_64-dvd.iso\n</code></pre> <p>Tip</p> <p><code>curl</code> is built-in into current versions of Linux, macOS and Windows.</p>"},{"location":"guides/alma-installation/#iso-verification","title":"ISO verification","text":""},{"location":"guides/alma-installation/#linux","title":"Linux","text":"<p>Download and import the AlmaLinux public key:</p> <pre><code>$ curl -O https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux-9\n$ gpg --import RPM-GPG-KEY-AlmaLinux-9\n</code></pre> <p>Verify the downloaded ISO image checksum:</p> <pre><code># download a checksums list\n$ curl -O https://repo.almalinux.org/almalinux/9/isos/x86_64/CHECKSUM\n\n# verify the checksums list, we are looking for a Good signature\n$ gpg --verify CHECKSUM\ngpg: Signature made Tue 13 Dec 2022 14:09:50 CET\ngpg:                using RSA key BF18AC2876178908D6E71267D36CB86CB86B3716\ngpg: Good signature from \"AlmaLinux OS 9 &lt;packager@almalinux.org&gt;\" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: BF18 AC28 7617 8908 D6E7  1267 D36C B86C B86B 3716\n# calculate the downloaded ISO SHA256 checksum\n$ sha256sum AlmaLinux-9.1-x86_64-dvd.iso\n2a44e3f8a012c132da19b9aae2bf949e20b116f0a2a7ac3eca111972f4ac952f  AlmaLinux-9.1-x86_64-dvd.iso\n\n# compare it with the expected checksum, it should be the same\n$ cat CHECKSUM | grep -E 'SHA256.*AlmaLinux-9.1-x86_64-dvd.iso'\nSHA256 (AlmaLinux-9.1-x86_64-dvd.iso) = 2a44e3f8a012c132da19b9aae2bf949e20b116f0a2a7ac3eca111972f4ac952f\n</code></pre>"},{"location":"guides/alma-installation/#macos","title":"macOS","text":"<pre><code># calculate the downloaded ISO SHA256 checksum\n$ shasum -a 256 AlmaLinux-9.1-x86_64-dvd.iso\n2a44e3f8a012c132da19b9aae2bf949e20b116f0a2a7ac3eca111972f4ac952f  AlmaLinux-9.1-x86_64-dvd.iso\n\n# download the CHECKSUM file\ncurl -O https://repo.almalinux.org/almalinux/9/isos/x86_64/CHECKSUM\n\n# compare it with the expected checksum, it should be the same\n$ cat CHECKSUM | grep -E 'SHA256.*AlmaLinux-9.1-x86_64-dvd.iso'\nSHA256 (AlmaLinux-9.1-x86_64-dvd.iso) = 2a44e3f8a012c132da19b9aae2bf949e20b116f0a2a7ac3eca111972f4ac952f\n</code></pre>"},{"location":"guides/alma-installation/#windows","title":"Windows","text":"<pre><code>C:\\&gt; certUtil -hashfile C:\\AlmaLinux-9.1-x86_64-dvd.iso SHA256\nSHA256 hash of AlmaLinux-9.1-x86_64-dvd.iso:\n2a44e3f8a012c132da19b9aae2bf949e20b116f0a2a7ac3eca111972f4ac952f\nCertUtil: -hashfile command completed successfully.\n\n# download the CHECKSUM file\nC:\\&gt; curl -O https://repo.almalinux.org/almalinux/9/isos/x86_64/CHECKSUM\n\n# compare it with the expected checksum, it should be the same\nC:\\&gt; findstr /i /r /c:\"SHA256.*AlmaLinux-9.1-x86_64-dvd.iso\" CHECKSUM\nSHA256 (AlmaLinux-9.1-x86_64-dvd.iso) = 2a44e3f8a012c132da19b9aae2bf949e20b116f0a2a7ac3eca111972f4ac952f\n</code></pre>"},{"location":"guides/alma-installation/#write-an-image-on-a-usb","title":"Write an image on a USB","text":"<p>Use the following steps and commands depending on OS you are using to write an image on a USB.</p>"},{"location":"guides/alma-installation/#linux_1","title":"Linux","text":"<p>Use the <code>dd</code> command for any Linux OS. </p> <p>Insert your target USB and locate it. There are different ways to do it, but here are some of them:</p> <ul> <li> <p><code>sudo fdisk -l</code>  - this command shows you the connected block storage devices, including the USB devices. </p> </li> <li> <p><code>lsblk</code> - this command gives you all the available block storage devices, including the USB block storage devices.</p> </li> <li> <p><code>sudo blkid</code> - this command gives you the same information as <code>lsblk</code>, but you have to run it as root. </p> </li> </ul> <p>You need to look for /dev/sda or /dev/sdb or /dev/sdc, which is your target USB.</p> <p>After you found out the location of your target USB, navigate to the location of your source ISO. Run the dd command to copy files from ISO to USB: </p> <pre><code>sudo dd if=./AlmaLinux-9.1-x86_64-dvd.iso of=/dev/sdX status=progress\n</code></pre> <ul> <li><code>dd</code>: Start the dd command to write the DVD/CD iso image.</li> <li><code>if=AlmaLinux-9.1-x86_64-dvd.iso</code>: path to the input file.</li> <li><code>of=/dev/sdX</code>: path to destination USB disk/stick (you need to replace 'X').</li> <li><code>status=progress</code>: display a progress bar while writing the image to the USB stick.</li> </ul> <p>Warning</p> <p>This example is for AlmaLinux 9.1. Replace the version with the one you need to work with other AlmaLinux images.</p>"},{"location":"guides/alma-installation/#windows_1","title":"Windows","text":"<p>For Windows OS there is a helpful free and open-source application - Rufus. </p> <p>Open the application, choose your target USB, and ISO you need to burn, and press <code>start</code>.</p>"},{"location":"guides/alma-installation/#macos_1","title":"macOS","text":"<p>The cross-platform tool balenaEtcher is used to write images on macOS. It is simple too. Open balenaEtcher, choose the image and the USB, and press Flash.</p> <p>You can also use <code>dd</code> form CLI:</p> <pre><code>sudo dd if=./AlmaLinux-9.1-x86_64-dvd.iso of=/dev/diskXXX status=progress\n</code></pre> <p>Tip</p> <p>Look at the Linux example above for detailed command elements description for the <code>dd</code> command.</p> <p>Tip</p> <p>To determine the <code>XXX</code> (on our machine it was <code>disk2s1</code>) open the <code>Disk Utility</code> app. Choose your USB drive in the <code>External</code> section and check the disk name in the <code>Device</code> field:</p> <p></p> <p>Now you have AlmaLinux ready on a USB stick.</p>"},{"location":"guides/alma-installation/#installation","title":"Installation","text":"<ul> <li>Before starting the installation, you might need to define which system's mode you are booting and installing - UEFI or BIOS. </li> <li>Insert and boot the USB stick. You'll see the AlmaLinux welcome menu:</li> </ul> <ul> <li>Automatically, the recommended option Test this media &amp; install AlmaLinux 9.1 is highlighted. Choosing this option will run the installation media check to verify that it's usable and that the installation won't be aborted in the process. After the media check completes successfully, the installer screen will pop up automatically.</li> </ul> <p>Tip</p> <p>You can choose the first option Install AlmaLinux 9.1. In this case, you will only see some boot messages before the installer will pop up. The installation media check won't be performed.</p> <ul> <li>When the installer boots, the first thing you need to do, is to choose a language that will be used during the installation process.</li> </ul> <p> Choose the language you'd like and press the Continue button.</p> <ul> <li>Next, the Installation Summary window will appear. It contains sections that you can configure:</li> </ul> <p></p> <p>Warning</p> <p>Sections that are marked with red color are necessary to be customized to begin the installation.</p> <ul> <li> <p>LOCALIZATION section:</p> <ul> <li>Keyboard - you may choose and specify the system's keyboard layouts here. By default, there are an English layout and a language chosen during the previous step.</li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>Language Support - the default supported language is the language you chose for the installation process. You can add support for additional languages if you need it.</li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>Time &amp; Date - this option allows you to select the timezone you need for your machine. You can choose the location from the Region/City lists or select if from the map. There is the Network Time option that allows the system to automatically set the time when this option is enabled. This option can be set to ON or OFF by default. It depends on your installation source.</li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> </li> <li> <p>SOFTWARE - this section allows you to add the installation source and additional repositories if needed.</p> <ul> <li>Installation Source - the installation source is to be specified here. When using an ISO image for the installation using, the installation source will be automatically specified as Local media.</li> </ul> </li> </ul> <p>Warning</p> <p>If you are using the <code>BOOT</code> ISO image to perform the installation, you will need to provide the <code>&lt;version&gt;/BaseOS/x86_64/kickstart/</code> repository from the selected mirror as the Installation Source if the installer will not be able to find the closest mirror for some reason.</p> <p>There are no extra Installation Sources required if you decided to go with either the minimal or DVD ISO images.  </p> <p>When you've finished with the changes, click on the <code>Done</code> button.</p> <ul> <li> <p>Software Selection - this section contains two fields:</p> <ul> <li>Base Environment - this field will be defined automatically according to the ISO type you are using for the installation.</li> <li>Additional Software for the Selected Environment - you can choose additional software to be installed. The list of available additional software depends on the chosen variant in the Base Environment field.</li> </ul> </li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>SYSTEM - this section allows you to customize the hardware of the system to you your needs like creating drive partitions, enabling Encryption, KDUMP, specifying the Network and choosing a security profile:<ul> <li>Installation destination - you will see available disks for the system installation as Local Standard Disks. You can click on the disk you need. If your system has only one disk, it'll be automatically chosen. By default, Storage Configuration will be marked as Automatic.</li> </ul> </li> </ul> <p>Tip</p> <p>If you want to create disk partitions by yourself, choose the Custom option here. </p> <p></p> <p>Tip</p> <p>If you want to encrypt your data, select this option in the Encryption section. You'll be asked to type a passphrase after clicking on the Done button.</p> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>KDUMP - by default, kdump will be marked as enabled with automatic memory reservation.</li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>Network &amp; Host Name - all correctly detected networks will be listed in the left field. It'll be also automatically connected. You can add a network device and configure the chosen network in this section.</li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li> <p>Security Profile - no profile is chosen by default, as applying a security policy is not necessary. The applied security policy will be installed in the system using the compliance policies defined by SCAP. You can choose one of the available security profiles:</p> <ul> <li>ANSSI-BP-028 (enhanced)</li> <li>ANSSI-BP-028 (high)</li> <li>ANSSI-BP-028 (intermediary)</li> <li>ANSSI-BP-028 (minimal)</li> <li>[DRAFT] CIS AlmaLinux 9 Benchmark for Level 2 - Server</li> <li>[DRAFT] CIS AlmaLinux 9 Benchmark for Level 1 - Server</li> <li>[DRAFT] CIS AlmaLinux 9 Benchmark for Level 1 - Workstation</li> <li>[DRAFT] CIS AlmaLinux 9 Benchmark for Level 2 - Workstation</li> <li>[DRAFT] Unclassified Information in Non-federal Information Systems and Organizations (NIST 800-171)</li> <li>Australian Cyber Security Centre (ACSC) Essential Eight</li> <li>Health Insurance Portability and Accountability Act (HIPAA)</li> <li>Australian Cyber Security Centre (ACSC) ISM Official</li> <li>[DRAFT] Protection Profile for General Purpose Operating Systems</li> <li>PCI-DSS v3.2.1 Control Baseline for Red Hat Enterprise Linux 9</li> <li>[DRAFT] DISA STIG for Red Hat Enterprise Linux 9</li> <li>[DRAFT] DISA STIG with GUI for Red Hat Enterprise Linux 9</li> </ul> </li> </ul> <p></p> <p>Tip</p> <p>If you are interested in more details about Security Profiles, check the OpenSCAP Guide for AlmaLinux 8 and OpenSCAP Guide for AlmaLinux 9.</p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>USER SETTINGS - in this section, you are able to create a password for the root user account and create user accounts.<ul> <li>Root Password - as the root user is the most privileged account, you must set a strong password for it to protect this account. Type the password in the Root Password text field and type it once more in the Confirm text field to confirm the password.</li> </ul> </li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>User Creation - this window allows you to create administrative and non-administrative users. To create a user fill in the Full Name and User Name fields, set and confirm the password, and enable the Make this user administrator field if needed. The Require the password to use this account option is enabled by default. You can leave it enabled or click on the checkbox to remove the check to disable this option.</li> </ul> <p></p> <p>When you've finished with the changes, click on the Done button.</p> <ul> <li>When you are finished with the customization, click on the Begin Installation button to start the installation process.</li> </ul> <p></p> <p>You will see the process running and its progress. Also, different task messages will appear.</p> <p>Tip</p> <p>If you don't want to proceed, you can safely quit the process by pressing the Quit button or resetting the machine.</p> <ul> <li>Wait for the installation process to complete successfully and click on the Reboot button to restart the system.</li> </ul> <p></p> <ul> <li>When the system reboots, log in and enjoy your AlmaLinux system.</li> </ul>"},{"location":"guides/alma-installation/#live-media","title":"Live Media","text":"<p>AlmaLinux also provides Live Media images with different desktop environment options:</p> <ul> <li>GNOME-Mini</li> <li>GNOME</li> <li>KDE</li> <li>XFCE</li> <li>MATE</li> </ul> <p>Using Live Media You can try AlmaLinux OS before installing. You can find more information on the Live Media wiki page.</p> <p>Trademark</p> <p>Red Hat, Red Hat Enterprise Linux are trademarks or registered trademarks of Red Hat, Inc. or its subsidiaries in the United States and other countries.</p> <p>Linux is the registered trademark of Linus Torvalds in the U.S. and other countries. </p> <p>macOS is the registered trademark of Apple Inc. in the U.S. and other countries.</p> <p>Windows is the registered trademark of Microsoft Corporation in the United States and other countries.</p>"},{"location":"guides/custom-linux-kernel/","title":"Overview","text":"<p>In this guide, we\u2019ll walk through the process of acquiring a kernel source tree, configuring it, compiling it, and, finally, installing and booting the kernel.</p> <p>Kernel rebuilds are not recommended nor supported for Rocky Linux. Before attempting to build a custom kernel, please consider the following:</p> <ul> <li>Is the functionality you need available by installing a kernel module from elrepo?</li> <li>Is the functionality you need available as a separate module from the kernel itself?</li> <li>Rocky Linux and most other EL derivatives were designed to function as a complete environment. Replacing critical components can affect how the system acts.</li> <li>Most users no longer need to build their own kernel. You may simply need a kernel module/driver or perhaps build your own kernel module (kmod/dkms)</li> </ul> <p>As a final warning: If you break the kernel, you are responsible for fixing resulting issues on your system.</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#the-kernel","title":"The Kernel","text":"<p>Most often, when people say Linux, they are usually referring to a \"Linux distribution\" \u2014for example, Rocky Linux and Debian are types of Linux distribution. A distribution comprises everything necessary to get Linux to exist as a functional operating system. Distributions make use of code from various open-source projects that are independent of Linux.</p> <p>Linux is The kernel. The kernel literally sits right at the heart of the [operating system] matter.</p> <p>The only thing more fundamental than the kernel is the system hardware itself. Although the kernel is a small part of a complete Linux distribution, it is by far the most critical element. If the kernel fails or crashes, the rest of the system goes with it.</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#the-kernel-source-code","title":"The Kernel Source Code","text":"<p>The Rocky Linux distribution has the source code for the specific kernel version it supports available in one form or another. These could be in the form of a compiled binary (.src.rpm), a source RPM (.srpm), or the like.</p> <p>If you need to download a different (possibly newer) version than the one your specific Rocky Linux distro provides, the first place to look for the source code is at the official kernel web site:</p> <p>www.kernel.org</p> <p>This site maintains a listing of web sites mirroring the kernel source, as well as tons of other open-source software, distributions and general-purpose utilities.</p> <p>The list of mirrors is maintained at:</p> <p>mirrors.kernel.org</p> <p>Tip</p> <p>The majority of the downloading, configuring and compiling of the Linux kernel done in the following sections can/should be done as an unprivileged user. However, the final steps that require actual installation or altering of system files and binaries need to be done with elevated privileges.</p> <p>We are able to do most of the work as an unprivileged user because we will be using a special kernel build option, which allows us to specify a custom working or output directory. Specifically, we\u2019ll use the <code>O=~/build/kernel</code> option for all applicable invocations of make.</p> <p>Where <code>~/build/kernel</code> is equivalent to <code>/home/$USER/build/kernel</code> or  <code>$HOME/build/kernel</code></p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#kernel-versions-and-naming-conventions","title":"Kernel versions and naming conventions","text":"<p>The web site listing of kernels available will contain folders for v1.0, v2.5, v2.6, v3.0, v3.x, v4.x, v5.x, v6.x and so forth. Before you follow your natural inclination to get the latest version, make sure you understand how the Linux kernel versioning system works.</p> <p>The current convention is to name and number major new kernel releases as \u201cLinux 5.x\u201d (also called the vanilla or mainline kernels). Thus, the first of this series will be Linux version 5.0 (same as 5.0.0), the next will be Linux version 5.1 (same as 5.1.0), followed by Linux version 5.2, and so on.</p> <p>Any minor changes or updates within each major release version will be reflected by increments to the third digit. These are commonly referred to as stable point releases. Thus, the next stable point release for the 5.0.0 series kernel will be Linux version 5.0.1, followed by version 5.0.2, and so forth. Another way of stating this is to say, for example, that Linux version 5.0.4 is the fourth stable release based on the Linux 5.0.0 series.</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#installing-prerequisite-tools-and-libraries","title":"Installing prerequisite tools and libraries","text":"<p>A common source of failure encountered during the kernel build process may be caused by not having all the requisite software available for compiling and building the mainline Linux Kernel.  The missing tools and libraries can be installed using the DNF package manager on a Rocky Linux distro. We\u2019ll take care of this in this section.</p> <ol> <li> <p>On a Rocky Linux distro, you can quickly get most of the necessary development tools installed by running this command:</p> <pre><code>&gt; sudo dnf -y groupinstall 'C Development Tools and Libraries'\n</code></pre> <p>If you get 'Module or Group 'C Development Tools and Libraries' is not available.' error the below command is equivalent to above:</p> <pre><code>&gt; sudo dnf -y groupinstall 'Development Tools'\n</code></pre> </li> <li> <p>Some other libraries, header files, and applications can also be obtained by installing the following packages. Type:</p> <pre><code>&gt; sudo dnf -y install \\\nncurses-devel openssl-devel elfutils-libelf-devel python3\n</code></pre> </li> <li> <p>Next, we need other utilities only available in some supported 3rd party repositories. One of such repositories is the Powertools repo. Let\u2019s enable that repo on our Rocky system. Type:</p> <pre><code>&gt; sudo dnf config-manager --set-enabled powertools\n</code></pre> </li> <li> <p>Finally, let\u2019s install one of the needed packages from the Powertool repo. Type:</p> <pre><code>&gt; sudo  dnf -y install dwarves\n</code></pre> </li> </ol> <p>That\u2019s it for the prerequisite packages needed for actual Kernel building!</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#downloading-and-unpacking-the-linux-kernel","title":"Downloading and unpacking the Linux Kernel","text":"<p>The version of the kernel that we are going to build in the following section is version 6.5.7, which is available at:</p> <p>www.kernel.org/pub/linux/kernel/v6.x/linux-6.5.7.tar.xz</p> <p>Let\u2019s begin the process.</p> <ol> <li> <p>First, download the kernel source into your current working directory using the following curl command. Type:</p> <pre><code>curl -L -o linux-6.5.7.tar.xz \\\nhttps://www.kernel.org/pub/linux/kernel/v6.x/linux-6.5.7.tar.xz\n</code></pre> </li> <li> <p>The kernel source that you will download from the Internet is a file that has been compressed and tarred. Therefore, you need to decompress and untar the source file to use the source. </p> <p>Make sure you are in the directory that download the Kernel tarball into. Use the tar command to unpack and decompress the file, by running:</p> <pre><code>tar xvJf linux-5.*.tar.xz\n</code></pre> </li> </ol>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#building-the-kernel","title":"Building the Kernel","text":"<p>In this section, we\u2019re going to review the process of configuring and building a kernel. This is in contrast to macOS or Windows-based operating systems, which come preconfigured and therefore contain support for many features you may or may not want.</p> <p>The Linux design philosophy allows the individual to decide on the important parts of the kernel. This individualized design has the important benefit of letting you thin down the feature list so that Linux can run as efficiently as possible.</p> <p>This is also one of the reasons why it is possible to customize Linux to run in various hardware setups, from low-end systems, to embedded systems, to high-end systems.</p> <p>Two main steps are required in building a kernel:</p> <ul> <li>configuring</li> <li>compiling</li> </ul> <p>The first step in building the kernel is configuring its features. Usually, your desired feature list will be based on whatever hardware you need to support. This, of course, means that you\u2019ll need a list of that hardware.</p> <p>On a system that is already running Linux, you can run commands like \u2013 lspci, lshw and so on to help show detailed information about the exact hardware setup on your system. On  RPM-based distros these utilities are provided by the pciutils.rpm and lshw.rpm packages.</p> <p>Having a better understanding of what constitutes your underlying hardware can help you better determine what you need in your custom kernel. You\u2019re ready to start configuring the kernel.</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#sanitizing-the-build-environment","title":"Sanitizing the build environment","text":"<p>We can begin the actual configuration with a rough idea of the types of hardware and features that our new kernel needs to support. But first, some background information.</p> <p>The Linux kernel source tree contains several files named Makefile (a makefile is simply a text file with directives and it also describes the relationships among the files in a program).</p> <p>These makefiles help to glue together the thousands of other files that make up the kernel source. What is more important to us here is that the makefiles also contain targets. The targets are the commands, or directives, that are executed by the make program.</p> <p>warning: Avoid Needless Kernel Upgrades</p> <p>Bear in mind that if you have a working system that is stable and well behaved, there is little reason to upgrade the kernel unless one of these conditions holds for you:</p> <ul> <li>A security or bug fix affects your system and must be applied</li> <li>You need a specific new feature in a stable release</li> </ul> <p>In the case of a security fix, decide whether the risk really affects you\u2014for example, if the security issue is found in a device driver that you don\u2019t use, then there may be no reason to upgrade. In the case of a bug fix release, read carefully through the release notes and decide if the bugs really affect you\u2014if you have a stable system, upgrading the kernel with patches you never use may be pointless.</p> <p>On production systems, the kernel shouldn\u2019t simply be upgraded just to have \u201cthe latest kernel\u201d; you should have a truly compelling reason to upgrade.</p> <p>The Makefile in the root of the kernel source tree contains specific targets that can be used in prepping the kernel build environment, configuring the kernel, compiling the kernel, installing the kernel, and so on. Some of the targets are discussed in more detail here:</p> <ul> <li>make mrproper\u2003This target cleans up the build environment of any stale files and dependencies that might have been left over from a previous kernel build. All previous kernel configurations will be cleaned (deleted) from the build environment.</li> <li>make clean\u2003This target does not do as thorough a job as the mrproper target. It deletes only most generated files. It does not delete the kernel configuration file (.config).</li> <li>make menuconfig\u2003This target invokes a text-based editor interface with menus, option lists, and text-based dialog boxes for configuring the kernel.</li> <li>make xconfig\u2003This is a GUI based kernel configuration tool/target that relies on the Qt graphical development libraries. These libraries are used by KDE/Plasma-based applications.</li> <li>make gconfig\u2003This is also a GUI  based kernel configuration tool/target, but it relies on the GTK+  toolkit. This GTK toolkit is heavily used in the GNOME desktop world.</li> <li>make olddefconfig\u2003This target uses the existing .config file in the current working directory, updates the dependencies, and automatically sets new symbols to their default values.</li> <li>make help\u2003This target will show you all the other possible make targets and also serves as a quick online help system.</li> </ul> <p>We will use only one of the targets to configure the kernel in this section. In particular, we will use the make menuconfig command. The menuconfig kernel config editor is a simple and popular text-based configuration utility that consists of menus, radio button lists, and dialogs.  </p> <p>It has a simple and clean interface that can be easily navigated with your keyboard and is almost intuitive to use.</p> <p>We need to change (cd) into the kernel source directory, after which we can begin the kernel configuration. But before beginning the actual kernel configuration, you should clean (prepare) the kernel build environment by using the make mrproper command:</p> <pre><code>&gt; cd linux-5.*\n&gt; make  O=~/build/kernel mrproper\n</code></pre>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#kernel-configuration","title":"Kernel Configuration","text":"<p>Next, we will step through the process of configuring a Linux 5.* series kernel. To explore some of the innards of this process, we will enable the support of a specific feature that we\u2019ll pretend is a MUST have feature on the system. Once you understand how this works, you can apply the same procedure to add support for any new kernel feature you want. Specifically, we\u2019ll enable support for the NTFS file system into our custom kernel.</p> <p>Most modern Linux distros ship with a kernel configuration file for the running kernel available on the local file system as a compressed or regular file. On our sample Rocky system, this file resides in the /boot directory and is usually named something like config-*.</p> <p>The configuration file contains a list of the options and features that were enabled for the particular kernel it represents. A config file similar to this one is what we aim to create through the process of configuring the kernel. The only difference between the file we\u2019ll create and the ready-made one is that we will add further minor customization to ours.</p> <p>Tip</p> <p>Using a known, preexisting config file as a framework for creating our own custom file helps ensure that we don\u2019t waste too much time duplicating the efforts that other people have already put into finding what works and what doesn\u2019t work!</p> <p>The following steps cover how to configure the kernel. We will be using a text-based kernel configuration utility, which will allow you to follow along in your terminal regardless of whether you are using a GUI desktop environment or not.</p> <ol> <li> <p>To begin, we\u2019ll copy over and rename the preexisting config file from the /boot directory into our kernel build environment:     <pre><code>&gt; cp /boot/config-`uname -r` ~/build/kernel/.config\n</code></pre>     We use <code>uname -r</code> here to help us obtain the configuration file for the running kernel. The uname -r command prints the running kernel\u2019s release. Using it helps ensure that we are getting the exact version we want, just in case other versions are present.</p> <p>Note</p> <p>The Linux kernel configuration editor starts explicitly looking for and generates a file named .config (pronounced \u201cdot config\u201d) at the root of the kernel source tree. This file is hidden.</p> </li> <li> <p>Launch the graphical kernel configuration utility:</p> <pre><code>&gt; make O=~/build/kernel menuconfig\n</code></pre> <p>A screen similar to this will appear:</p> </li> </ol> <p></p> <pre><code>The kernel configuration screen that appears is divided into roughly three areas.\nThe top part shows various helpful information, keyboard shortcuts, and legends that can help you navigate the application.\nThe main body of the screen shows an expandable tree-structured list of the overall configurable kernel options. You can further drill down into items with arrows in the parent to view and/or configure sub-menu (or child) items. And finally, the bottom of the screen displays the actual actions/options that the user can choose.\n</code></pre> <ol> <li> <p>Next, we\u2019ll add support for NTFS into our custom kernel for demonstration purposes.</p> <p>While at the main configuration screen, use your arrow keys to navigate to and highlight the File systems item. With File systems selected, press enter to view the sub-menu or child items for File systems.</p> <p>In the File Systems section, use your arrow keys to navigate to DOS/FAT/NT Filesystems. Press enter to see the child items for DOS/FAT/NT Filesystems.</p> </li> <li> <p>In the DOS/FAT/NT Filesystems section, navigate to NTFS file system support.</p> <p>Type M (uppercase) to enable modules to support for the NTFS file system.</p> <p>Use the arrow keys to navigate down to NTFS debugging support (NEW) and then press y to include it.</p> <p>Use the arrow keys to navigate down to NTFS write support and then press y to include it. When you are done, the letter M or an asterisk symbol (*) should appear beside each option, like the ones shown here:</p> <p></p> <p>Tip</p> <p>For each of the configurable options, in the kernel configuration utility, empty angle parentheses, &lt;&gt;, indicates that the feature in question is disabled. The letter M in angle parentheses, , indicates that the feature is to be compiled as a module. <p>And the asterisk symbol in angle parentheses, &lt;*&gt;, indicates that support for the feature will be directly built into the kernel. You can usually toggle through all the possible options using the spacebar on your keyboard.</p> <li> <p>Navigate back to the parent File Systems screen by pressing the esc key twice on your keyboard in the DOS/FAT/NT Filesystems screen. Return to the main kernel configuration screen by pressing esc twice again on your keyboard.</p> </li> <li> <p>Finally, save your changes to the .config file in the root of your kernel source tree and exit the kernel configuration application after saving the file by pressing esc twice again on your keyboard.</p> </li> <li> <p>A dialog box will appear prompting you to save your new configuration. Make sure that Yes is selected and then press enter.</p> </li> <li> <p>After the kernel configuration utility exits, you will be thrown back to your shell\u2014inside the kernel source tree. You are almost ready to build your kernel!</p> </li> <li> <p>We need to complete a few more customizations on our Rocky distro. Type:</p> <pre><code>sed -ri '/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=\"\"/g' ~/build/kernel/.config\n</code></pre> <p>Tip</p> <p>To view the results of some of the changes you made using the menuconfig tool, use the grep utility to view the .config file that you saved directly. For example, to view the effect of the NTFS file system support that we enabled previously, type the following: <pre><code>&gt; grep NTFS ~/build/kernel/.config\nCONFIG_NTFS_FS=m\nCONFIG_NTFS_DEBUG=y\nCONFIG_NTFS_RW=y\n</code></pre></p> <p>A Quick Note on Kernel Modules</p> <p>Loadable module support is a Linux kernel feature that allows kernel modules' dynamic loading (or removal).    </p> <p>Kernel modules are pieces of compiled code that can be dynamically inserted into the running kernel, rather than being permanently built into the kernel. Features not often used can thus be enabled, but they won\u2019t occupy any room in memory when they aren\u2019t being used.</p> <p>Thankfully, the Linux kernel can automatically determine what to load and when. Naturally, not every feature is eligible to be compiled as a module. The kernel must know a few things before it can load and unload modules, such as how to access the hard disk and parse through the file system where the loadable modules are stored. Some kernel modules are also commonly referred to as drivers.</p> </li>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#compiling-the-kernel","title":"Compiling the Kernel","text":"<p>In the preceding section, we walked through the process of creating a configuration file for the custom kernel that we want to build. In this section, we will perform the actual build of the kernel. But before doing this, we will add one simpler customization to the entire process.</p> <p>The final customization will be to add an extra piece of information used in the final name of our kernel. This will help us be able to differentiate this kernel from any other kernel with the same version number. We will add the tag \u201ccustom\u201d to the kernel version information. This can be done by editing the main Makefile and appending the tag that we want to the EXTRAVERSION variable.</p> <p>The compilation stage of the kernel-building process is by far the easiest, but it also takes the most time. All that is needed at this point is simply to execute the make command, which will then automatically generate and take care of any dependency issues, compile the kernel itself, and compile any features (or drivers) that were enabled as loadable modules.</p> <p>Because of the amount of code that needs to be compiled, be prepared to wait a few minutes, at the very least, depending on your system's processing power. Let\u2019s dig into the specific steps required to compile your new kernel.</p> <ol> <li> <p>First, we\u2019ll add an extra piece to the identification string for the kernel we are about to build. While still in the root of the kernel source tree, we\u2019ll use the sed utility edit the Makefile in place. The variable we want to change is close to the top of the file. We want to change the line in the file that looks like this:</p> <pre><code>EXTRAVERSION =\n</code></pre> <p>To this:</p> <pre><code>EXTRAVERSION = -custom\n</code></pre> <p>Use the following <code>sed</code> command to make the change. Type:</p> <pre><code>sed  -i 's/^EXTRAVERSION.*/EXTRAVERSION = -custom/'  Makefile\n</code></pre> <p>Of course, you can also use any text editor that you are comfortable with to make the change. Just remember to save your changes to the file!</p> </li> <li> <p>Pass the kernelversion target to the make command to view the full version of the kernel that you just customized:</p> <pre><code>&gt; make O=~/build/kernel kernelversion\n</code></pre> <p>Tip</p> <p>You can take advantage of all that extra processing power (CPUs, cores and so on) on most modern systems and greatly speed up CPU-intensive operations like compiling the kernel. To do this, you can pass a parameter to the make command that specifies the number of jobs to run simultaneously. The specified number of jobs are then distributed and executed simultaneously on each CPU core. The syntax for the command is:</p> <pre><code>```\n&gt; make -j N\n```\nwhere N is the number of jobs to run simultaneously. For example, if you have a octa (8) core\u2013capable CPU, you can type:\n\n```\n&gt; make -j 8\n```\n</code></pre> </li> <li> <p>The only command that is needed here to compile the kernel is the make command:</p> <pre><code>&gt; make  O=~/build/kernel\nmake[1]: Entering directory '/home/super/build/kernel'\nSYNC    include/config/auto.conf.cmd\nGEN     Makefile\nHOSTCC  scripts/kconfig/conf.o\nHOSTLD  scripts/kconfig/conf\nGEN     Makefile\n...&lt;OUTPUT TRUNCATED&gt;\u2026\nLD [M]  sound/usb/usx2y/snd-usb-usx2y.ko\nLD [M]  sound/x86/snd-hdmi-lpe-audio.ko\nLD [M]  sound/xen/snd_xen_front.ko\nLD [M]  virt/lib/irqbypass.ko\nmake[1]: Leaving directory '/home/super/build/kernel'\n</code></pre> </li> <li> <p>The end product of this command (that is, the kernel) is sitting pretty and waiting in the path:</p> <pre><code>~/build/kernel/arch/x86/boot/bzImage\n</code></pre> </li> <li> <p>We need to install the modules because we compiled portions of the kernel as modules (for example, the NTFS module). Type the following:</p> <pre><code>&gt; sudo make O=~/build/kernel modules_install\n</code></pre> <p>On our Rocky system, this command will install all the compiled kernel modules into the /lib/modules/ directory. In this example, this path will translate to  /lib/modules/6.5.7-custom/. This is the path from which the kernel will load all loadable modules, as needed. <p>Tip</p> <p>The footprint (size) of the kernel modules installed via \u201cmake modules_install\u201d can end up getting pretty large because the modules include debugging symbols. As a result, you could easily end up with a <code>/lib/modules/6.5.7-custom/</code> directory that is close to  5GB in size!</p> <p>For this guide we avoid this large size by including the INSTALL_MOD_STRIP=1 option in our make modules_install invocation. You can reduce the total size by orders of magnitude (For example - less than 200 MB!!) by stripping away these debugging symbols.  </p> <p>This can be done by including the <code>INSTALL_MOD_STRIP=1</code> option to the <code>make modules_install</code> command.</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#installing-the-kernel","title":"Installing the Kernel","text":"<p>Assuming you have a PC and are working out of the <code>~/build/kernel/</code> directory, the compiled kernel that was created in the previous exercise will be located in this path - <code>&lt;kernel-build-dir&gt;/arch/x86/boot/bzImage</code> or, to be precise, in our example  <code>~/build/kernel/arch/x86/boot/bzImage</code>.</p> <p>The corresponding map file for this will be located at ~/build/kernel/System.map. You\u2019ll need both files for the install phase.</p> <p>The System.map file is useful when the kernel is misbehaving and generating \u201cOops\u201d messages. An \u201cOops\u201d is generated on some kernel errors because of kernel bugs or faulty hardware.</p> <p>This error is akin to the Blue Screen of Death (BSOD) in Microsoft Windows. These messages include a lot of detail about the system's current state, including several hexadecimal numbers.</p> <p>System.map gives Linux a chance to turn those hexadecimal numbers into readable names, making debugging easier. Although this is mostly for the benefit of developers, it can be handy when you\u2019re reporting a problem.</p> <p>Let\u2019s go through the steps required to install the new kernel image.</p> <ol> <li> <p>While in the root of your kernel build directory, copy and rename the bzImage file into the /boot directory:</p> <pre><code>&gt; sudo cp ~/build/kernel/arch/x86/boot/bzImage  \\\n/boot/vmlinuz-&lt;kernel-version&gt;\n</code></pre> <p>Here, kernel-version is the version number of the kernel. For the sample kernel we are using in this guide, the filename would be vmlinuz-6.5.7-custom. So here\u2019s the exact command for this example:</p> <pre><code>&gt; sudo cp ~/build/kernel/arch/x86/boot/bzImage  \\\n/boot/vmlinuz-6.5.7-custom\n</code></pre> <p>Note</p> <p>The decision to name the kernel image vmlinuz-6.5.7-custom is somewhat arbitrary. It\u2019s convenient, because kernel images are commonly referred to as vmlinuz, and the suffix of the version number is useful when you have multiple kernels available or kernels that provide specific functionality (For example  vmlinuz-6.50.0-ws).</p> </li> <li> <p>Now that the kernel image is in place, copy over and rename the corresponding System.map file into the /boot directory using the same naming convention:</p> <pre><code>&gt; sudo cp -v  ~/build/kernel/System.map \\\n/boot/System.map-6.5.7-custom\n</code></pre> </li> <li> <p>With the kernel in place, the System.map file in place, and the modules in place, we are now ready for the final step. The syntax for the command needed is:</p> <pre><code>&gt; kernel-install add   &lt;kernel-version&gt;  &lt;kernel-image&gt;\n</code></pre> <p>Here,  is the version number (and name) of the kernel. And  is the path to the newly compiled kernel image. <p>For our example, type:</p> <pre><code>&gt; sudo kernel-install \\\nadd  6.5.7-custom /boot/vmlinuz-6.5.7-custom\n</code></pre> <p>The kernel-install command used here is a nifty little shell script. It might not be available in every Linux distribution, but it is available in newer Fedora, RHEL, CentOS distros. This tool automates a lot of the final manual things we\u2019d ordinarily have to do to set up the system to boot the new kernel we just built.</p> <p>In particular, the tool does the following:</p> <ul> <li>It creates the appropriate initial RAM file system image (the initramfs image\u2014that is, the /boot/initramfs-.img file). To do this manually on systems where kernel-install is not available, use the mkinitramfs command. <li>It runs the depmod command (which creates a list of module dependencies).</li> <li>It updates the boot loader configuration.</li> <p>For systems running the newer versions of GRUB2, the file will be <code>/boot/grub2/grub.cfg</code>. For EFI based systems /boot/efi//fedora/grub.cfg is also updated. <p>And for systems running the legacy versions of GRUB, this will be the /boot/grub/grub.conf or /boot/grub/menu.lst file. And for very new distros that have implemented the new Boot Loader Specification (BLS) a new boot loader entry will be added to the /boot/loader/entries/ directory, or any directory pointed to by the variable named \"blsdir\".</p> <p>On our demo EFI based Rocky server running GRUB 2 using BLS, a new boot entry is created in the boot loader file located here: <code>/boot/loader/entries/6fa25ca775f64accb0d3e53f0e4e6e92-6.5.7-custom.conf</code></p> <pre><code>&gt; sudo cat  /boot/loader/entries/6fa25ca775f64accb0d3e53f0e4e6e92-6.5.7-custom.conf\ntitle Rocky Linux (6.5.7-custom) 8.5 (Green Obsidian)\nversion 6.5.7-custom\nlinux /vmlinuz-6.5.7-custom\ninitrd /initramfs-6.5.7-custom.img $tuned_initrd\noptions $kernelopts $tuned_params\nid rocky-20220212013135-6.5.7-custom\ngrub_users $grub_users\ngrub_arg --unrestricted\ngrub_class kernel\n</code></pre> <p>Note</p> <p>Most distros, have several grub2-* utilities readily available that can be used for performing various GRUB2 and boot loader housekeeping tasks. For example, you can use the grub2-set-default command to change or set the default kernel to be booted at system startup.</p>","tags":["custom kernel","kernel"]},{"location":"guides/custom-linux-kernel/#booting-the-custom-kernel","title":"Booting the custom Kernel","text":"<p>The next stage is to test the kernel to ensure the system can boot with it.</p> <ol> <li> <p>Assuming you did everything the exact way that the doctor prescribed and that everything worked out exactly as the doctor said it would, you can safely reboot the system and select the new kernel from the boot loader menu during system bootup:</p> <pre><code>&gt;  sudo reboot\n</code></pre> </li> <li> <p>After the system boots up, you can use the uname command to find out the name of the current kernel:</p> <pre><code>&gt;  uname -r\n6.5.7-custom\n</code></pre> </li> <li> <p>You will recall that one of the features that we added to our new kernel is the ability to support the NTFS file system. Make sure that the new kernel does indeed have support for NTFS by displaying information about the NTFS module:</p> <pre><code>[rockstar ~]$ modinfo ntfs\nfilename:       /lib/modules/6.5.7-custom/kernel/fs/ntfs/ntfs.ko\nlicense:        GPL\nversion:        2.1.32\ndescription:    NTFS 1.2/3.x driver - Copyright \u2026..\n...OUTPUT TRUNCATED...\n</code></pre> </li> </ol> <p>And that\u2019s it!</p>","tags":["custom kernel","kernel"]},{"location":"guides/glpi-install/","title":"How To Install GLPI on Ubuntu 22.04","text":"<p>GLPI is a powerful open source IT service management (ITSM) software tool designed to help you plan and easily manage your IT operations. GLPI allows you to solve problems more efficiently. Its segmentation feature makes it easy to split entities based on their respective administrative policies and allowed expenditure. It has been argued that GLPI support management of large IT infrastructures with millions of assets.</p>"},{"location":"guides/glpi-install/#features-of-glpi","title":"Features of GLPI","text":"<ul> <li>Inventory Management \u2013 For computers, computers, peripherals, network printers e.t.c.</li> <li>Item lifecycle management</li> <li>Incidents, requests, problems and changes management</li> <li>Data Center Infrastructure Management (DCIM)</li> <li>Licenses management (ITIL compliant)</li> <li>Management of warranty and financial information (purchase order, warranty and extension, damping)</li> <li>Management of contracts, contacts, documents related to inventory items</li> <li>Knowledge base and Frequently-Asked Questions (FAQ)</li> <li>Asset reservation</li> </ul> <p>All features of GLPI are available on the project website.</p>"},{"location":"guides/glpi-install/#prerequisites","title":"Prerequisites","text":"<p>GLPI is a Web application that will need:</p> <ul> <li>a webserver;</li> <li>PHP;</li> <li>a database.</li> </ul>"},{"location":"guides/glpi-install/#web-server","title":"Web server","text":"<p>GLPI requires a web server that supports PHP, like:</p> <ul> <li>Apache 2 (or more recent);</li> <li>Nginx;</li> <li>lighttpd;</li> <li>Microsoft IIS.</li> </ul>"},{"location":"guides/glpi-install/#installing-glpi-on-ubuntu-2204","title":"Installing GLPI on Ubuntu 22.04","text":"<p>We will cover the steps of installing GLPI on Ubuntu LTS in the remaining sections. Before you can follow this guide along, you need to have a fresh installation of Ubuntu and user account with sudo privileges.</p>"},{"location":"guides/glpi-install/#step-1-update-ubuntu","title":"Step 1: Update Ubuntu","text":"<p>As usual, ensure your packages list is up to date.</p> <pre><code>sudo apt update\n</code></pre> <p>You can also upgrade installed packages by running the following command.</p> <pre><code>sudo apt -y upgrade\n</code></pre>"},{"location":"guides/glpi-install/#step-2-install-mariadb-database-server","title":"Step 2: Install MariaDB database server","text":"<p>GLPI requires a relational database to store its data. Let\u2019s install MariaDB on Ubuntu Linux system by running the following commands:</p> <pre><code>sudo apt update\nsudo apt install mariadb-server\nsudo mysql_secure_installation\n</code></pre> <p>Create a database and user for GLPI.</p> <pre><code>sudo mysql -u root -p\n\nCREATE DATABASE glpi;\nCREATE USER 'glpi'@'localhost' IDENTIFIED BY 'StrongDBPassword';\nGRANT ALL PRIVILEGES ON glpi.* TO 'glpi'@'localhost';\nFLUSH PRIVILEGES;\nEXIT;\n</code></pre>"},{"location":"guides/glpi-install/#step-3-install-php-and-apache","title":"Step 3: Install PHP and Apache","text":"<p>We need to have Apache web server and PHP installed for GLPI to run and be accessed from a web interface.</p> <pre><code>sudo apt -y install php php-{curl,zip,bz2,gd,imagick,intl,apcu,memcache,imap,mysql,cas,ldap,tidy,pear,xmlrpc,pspell,mbstring,json,iconv,xml,gd,xsl}\n</code></pre> <p>Then install Apache and its PHP module.</p> <pre><code>sudo apt -y install apache2 libapache2-mod-php\n</code></pre> <p>Add the httpOnly flag to the cookie:</p> <pre><code>sudo nano /etc/php/*/apache2/php.ini\nsession.cookie_httponly = on\n</code></pre>"},{"location":"guides/glpi-install/#step-4-download-and-install-glpi","title":"Step 4: Download and Install GLPI","text":"<p>Download the latest stable release of GLPI. It follows a semantic versioning scheme, on 3 digits, where the first one is the major release, the second the minor and the third the fix release.</p> <p>Check for the latest stable release on the Downloads page. As of this wirting, this is 10.0.10.</p> <pre><code>sudo apt-get -y install wget curl\nVER=$(curl -s https://api.github.com/repos/glpi-project/glpi/releases/latest|grep tag_name|cut -d '\"' -f 4)\nwget https://github.com/glpi-project/glpi/releases/download/$VER/glpi-$VER.tgz\n</code></pre> <p>Uncompress the downloaded the archive:</p> <pre><code>tar xvf glpi-$VER.tgz\n</code></pre> <p>Move the created glpi folder to the /var/www/html directory.</p> <pre><code>sudo mv glpi /var/www/html/\n</code></pre> <p>Give Apache user ownership of the directory:</p> <pre><code>sudo chown -R www-data:www-data /var/www/html/\n</code></pre>"},{"location":"guides/glpi-install/#step-5-configure-hosts-file","title":"Step 5: Configure Hosts File","text":"<p>Edit the local hosts file to associate your domain with the server's IP address.</p> <pre><code>sudo nano /etc/hosts\n</code></pre> <p>Add a line like this, replacing your_server_ip with the actual IP address and example.com with your domain.</p> <pre><code>your_server_ip   glpi.example.com glpi\n</code></pre> <p>Save and exit the text editor.</p>"},{"location":"guides/glpi-install/#step-6-configure-virtual-host","title":"Step 6: Configure Virtual Host","text":""},{"location":"guides/glpi-install/#apache-configuration","title":"Apache configuration","text":"<p>Here is a virtual host configuration example for Apache 2 web server.</p> <p>Warning</p> <p>The following configuration is only suitable for GLPI version 10.0.7 or later.</p> <pre><code>&lt;VirtualHost *:80&gt;\n    ServerName glpi.localhost\n\n    DocumentRoot /var/www/glpi/public\n\n    # If you want to place GLPI in a subfolder of your site (e.g. your virtual host is serving multiple applications),\n    # you can use an Alias directive. If you do this, the DocumentRoot directive MUST NOT target the GLPI directory itself.\n    # Alias \"/glpi\" \"/var/www/glpi/public\"\n\n    &lt;Directory /var/www/glpi/public&gt;\n        Require all granted\n\n        RewriteEngine On\n\n        # Redirect all requests to GLPI router, unless file exists.\n        RewriteCond %{REQUEST_FILENAME} !-f\n        RewriteRule ^(.*)$ index.php [QSA,L]\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre> <p>Note</p> <p>If you cannot change the Apache configuration (e.g. you are using a shared hosting), you can use a .htaccess file.</p> <pre><code># /var/www/glpi/.htaccess\nRewriteBase /\nRewriteEngine On\nRewriteCond %{REQUEST_URI} !^/public\nRewriteRule ^(.*)$ public/index.php [QSA,L]\n</code></pre> <p>Create a new virtual host configuration file for your domain using a text editor (like Nano or Vim).</p> <pre><code>sudo nano /etc/apache2/sites-available/glpi.example.com.conf\n</code></pre> <p>Add the following content, replacing example.com with your domain.</p> <pre><code>&lt;VirtualHost *:80&gt;\n    ServerName glpi.example.com\n\n    DocumentRoot /var/www/html/glpi/public\n\n    # If you want to place GLPI in a subfolder of your site (e.g. your virtual host is serving multiple applications),\n    # you can use an Alias directive. If you do this, the DocumentRoot directive MUST NOT target the GLPI directory itself.\n    # Alias \"/glpi\" \"/var/www/html/glpi/public\"\n\n    &lt;Directory /var/www/html/glpi/public&gt;\n        Require all granted\n\n        RewriteEngine On\n\n        # Redirect all requests to GLPI router, unless file exists.\n        RewriteCond %{REQUEST_FILENAME} !-f\n        RewriteRule ^(.*)$ index.php [QSA,L]\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre> <p>Save and exit the text editor.</p> <p>Enable the virtual host configuration.</p> <pre><code>sudo a2ensite glpi.example.com.conf\n</code></pre> <p>Then disable the default configuration file.</p> <pre><code>sudo a2dissite 000-default.conf\n</code></pre> <p>Rewrite configuration, restart and then test Apache.</p> <pre><code>sudo a2enmod rewrite\n</code></pre> <pre><code>sudo systemctl restart apache2\n</code></pre> <pre><code>sudo apache2ctl configtest\n</code></pre>"},{"location":"guides/glpi-install/#step-7-finish-glpi-installation","title":"Step 7: Finish GLPI installation","text":"<p>Visit your server IP or hostname URL on /glpi. If it is your local machine, you can use: http://Server_IP/glpi or just http://Server_IP if you are setup Virtual Host in Apache.</p> <p>On the first page, Select your language.</p> <p></p> <p>Accept License terms and click Continue.</p> <p></p> <p>Choose Install for a completely new installation of GLPI.</p> <p></p> <p>Confirm that the Checks for the compatibility of your environment with the execution of GLPI is successful.</p> <p></p> <p>Configure Database connection</p> <p></p> <p>Select glpi database to initialize.</p> <p></p> <p>Finish the other setup steps to start using GLPI.</p> <p></p> <p>You should get the login page.</p> <p></p> <p>Default logins / passwords are:</p> <ul> <li>glpi/glpi for the administrator account</li> <li>tech/tech for the technician account</li> <li>normal/normal for the normal account</li> <li>post-only/postonly for the postonly account</li> </ul> <p>On first login, you\u2019re asked to change the password. Please set new password before configuring GLPI. This is done under Administration &gt; Users.</p> <p></p> <p>This marks the end of installing GLPI on Ubuntu 22.04. The next sections are about adding assets and other IT Management stuff for your infrastructure/environment. For this, please refer to the official GLPI documentation</p>"},{"location":"guides/linux-basic/","title":"Linux Command-line Basics","text":""},{"location":"guides/linux-basic/#basics-of-basics","title":"Basics of Basics","text":""},{"location":"guides/linux-basic/#navigate-around-the-file-system","title":"Navigate around the file system","text":"<ul> <li><code>ls</code> list files</li> <li><code>ls -l</code> list files with details</li> <li><code>ls -la</code> list all files with details including hidden files</li> <li><code>cd</code> change directory</li> <li><code>cd ..</code> move out / up current directory by one layer</li> <li><code>cd ~</code> change to home Directory</li> <li><code>pwd</code> print current working directory</li> </ul>"},{"location":"guides/linux-basic/#createmodify-files-and-folders","title":"Create/Modify files and folders","text":"<ul> <li><code>touch &lt;filename&gt;</code> create a new file</li> <li><code>mkdir &lt;dirname&gt;</code> make a new directory (folder)</li> <li><code>rm &lt;filename(s)&gt;</code> remove file(s)</li> <li><code>rmdir &lt;dirname(s)&gt;</code> remove empty directory(s)</li> <li><code>rm -rf &lt;dirname(s)&gt;</code> remove directory(s) recursively</li> <li><code>cp</code> copy files(s)</li> <li><code>mv &lt;filename&gt; &lt;new filename&gt;</code> rename a file</li> <li><code>mv &lt;filename(s)&gt; &lt;target path&gt;</code> move file(s) to target path</li> <li><code>nano &lt;filename&gt;</code> launch nano text editor to edit file content</li> </ul>"},{"location":"guides/linux-basic/#check-system-information","title":"Check system information","text":"<ul> <li><code>lsb_release -a</code> check ubuntu version</li> <li><code>echo</code> print function</li> <li><code>sudo reboot</code> reboot</li> <li><code>sudo shutdown -h now</code> shutdown now</li> <li><code>ifconfig</code></li> <li><code>iwconfig</code></li> <li><code>ping &lt;domain name or ip address&gt;</code></li> <li><code>top</code> show processes; use <code>q</code> to quit</li> <li><code>uname -a</code> check machine info</li> <li><code>lsusb</code> list usb</li> <li><code>lspci</code> list pci</li> </ul>"},{"location":"guides/linux-basic/#user-permissions","title":"User &amp; Permissions","text":""},{"location":"guides/linux-basic/#user-and-groups","title":"User and groups","text":"<p>Create a new user with home directory</p> <pre><code>sudo useradd -m username\n</code></pre> <p>List all users</p> <pre><code>less /etc/passwd\n# or\nusers\n</code></pre> <p>List all groups</p> <pre><code>less /etc/group\n# or\ngroups\n</code></pre> <p>List all groups that a specific user belongs to</p> <pre><code>groups USER\n# or\nid USER\n</code></pre> <p>List all users in a specific group</p> <pre><code>getent group GROUP\n</code></pre> <p>Add a user to a group</p> <pre><code>usermod -aG GROUP USER\n</code></pre> <ul> <li>New group will be one of the user's secondary groups</li> </ul> <p>Change a user's primary group</p> <pre><code>usermod -g GROUP USER\n</code></pre>"},{"location":"guides/linux-basic/#user-password","title":"User password","text":"<p>Change the current user's password</p> <pre><code>passwd\n</code></pre> <p>Change any user's password with sudo privileges</p> <pre><code>sudo passwd USER\n</code></pre>"},{"location":"guides/linux-basic/#switch-user","title":"Switch user","text":"<ul> <li><code>sudo -i</code> becoming root user (require current user password)</li> <li><code>su -</code> become root user (require root password)</li> <li><code>su [username]</code> switch to user</li> </ul> <p>Ref: Difference between sudo -i and su -</p>"},{"location":"guides/linux-basic/#file-permissions","title":"File Permissions","text":"<p>UNIX System Permissions</p> <p>Example: <pre><code>drwx------   5 markhuang  staff   160B Jan 13 11:13 .ssh\nlrwxr-xr-x   1 markhuang  staff    40B Jan  8 17:41 .tmux.conf -&gt; ./dotfiles/tmux/tmux.conf\n-rw-------   1 markhuang  staff   797B Jan  9 16:39 .viminfo\n</code></pre></p> <ul> <li>First char: <code>d</code>/<code>l</code>/<code>-</code> stands for <code>dir</code>/<code>link</code>/<code>file</code></li> <li>following 3 chars: <code>r</code>/<code>-</code> + <code>w</code>/<code>-</code> + <code>x</code>/<code>-</code> represent <code>Read</code>,<code>Write</code>,<code>Execute</code> permission for owner user.</li> <li>following 3 chars: <code>r</code>/<code>-</code> + <code>w</code>/<code>-</code> + <code>x</code>/<code>-</code> represent <code>Read</code>,<code>Write</code>,<code>Execute</code> permission for owner group.</li> <li>following 3 chars: <code>r</code>/<code>-</code> + <code>w</code>/<code>-</code> + <code>x</code>/<code>-</code> represent <code>Read</code>,<code>Write</code>,<code>Execute</code> permission for other user.</li> </ul> <p>Change owner for all files inside a folder</p> <pre><code>sudo chown USER[:GROUP] FILE(s)\n\n# e.g. Change the owner and group of example.txt to user jack and group jack\nsudo chown jack:jack example.txt\n</code></pre> <p>Change user permission of a file</p> <pre><code>chmod NEW_PERMISSIONS FILE\n\n# e.g. Add execution permission for owner to example.sh\nchmod u+x example.sh\n# e.g. Add execution permission for owner and group to example.sh\nchmod ug+x example.sh\n# e.g. Remove execution permission for everyone to example.sh\nchmod a-x example.sh\n# e.g. Add read permission for everyone to example.sh\nchmod a+r example.sh\n# e.g. Change the permissions of example.sh to `rwxrwxrwx`\nchmod 777 example.sh\n</code></pre> <ul> <li><code>u</code>: permission for owner user</li> <li><code>g</code>: permission for owner group</li> <li><code>o</code>: permission for other user</li> <li><code>a</code>: permission for all</li> <li><code>ugo</code>: permission for all</li> <li><code>+</code>: add permission</li> <li><code>-</code>: remove permission</li> <li><code>777</code>: permission equivalent to <code>rwxrwxrwx</code></li> <li><code>644</code>: permission equivalent to <code>rw-r--r--</code></li> </ul>"},{"location":"guides/linux-basic/#disk","title":"Disk","text":""},{"location":"guides/linux-basic/#check-disk-utilization","title":"Check disk utilization","text":"<pre><code>df -h\n</code></pre> <ul> <li><code>-h</code> for \"Human-readable\" output</li> </ul> <p>Example:</p> <pre><code>df -x tmpfs -x squashfs -x devtmpfs -x vfat -hT\n</code></pre> <ul> <li><code>-x</code> or <code>--exclude-type</code> for excluding certain file systems Type</li> <li><code>-T</code> for printing file system type</li> </ul>"},{"location":"guides/linux-basic/#check-filefolder-size","title":"Check file/folder size","text":"<p><pre><code>du -sh {dir}\n</code></pre> Example:</p> <pre><code>du -sh ./*\n</code></pre> <ul> <li><code>-s</code> for \"specified\" file/dir only</li> <li><code>-h</code> for \"Human-readable\" output</li> </ul>"},{"location":"guides/linux-basic/#working-with-files-and-folders","title":"Working with Files and Folders","text":"<ul> <li><code>mkdir new_folder_name</code> make directory (create a new folder)</li> <li><code>rmdir some_folder</code> remove a empty folder</li> <li><code>rm -rf some_folder</code> remove a folder and everything inside</li> </ul> <p>More about removing directories: How to Remove (Delete) Directory in Linux</p> <ul> <li><code>touch example.txt</code> create a new file</li> <li><code>nano example.txt</code> edit a file using the nano text editor</li> <li><code>vim example.txt</code> edit a file using the vim text editor</li> <li><code>cat example.txt</code> print out file content</li> <li><code>rm example.txt</code> remove a file (delete a file)</li> </ul> <p>move a file <pre><code>mv [current path to file] [new path to file]\nmv example.txt ~/Desktop/example.txt\n</code></pre></p> <p>rename a file <pre><code>mv [current file name] [new file name]\nmv example.txt example_renamed.txt\n</code></pre></p> <p>copy a file <pre><code>cp [current path to file] [new path to file]\ncp example.txt example_copy.txt\n</code></pre></p>"},{"location":"guides/linux-basic/#copy-files-between-machines","title":"Copy files between machines","text":"<p><code>scp</code> also supports autocompletion for remote files and directories if you have existing SSH connection to the remote machine.</p> <p>secure copy to remote machine</p> <pre><code>scp [local file] [remote user]@[remote address]:[remote path]\n\nscp example.json root@178.128.22.33:/home/root/example\n</code></pre> <p>secure copy from remote machine</p> <pre><code>scp [remote user]@[remote address]:[remote file] [local path]\n\nscp root@178.128.22.33:/home/root/example.json .\n</code></pre> <p>When copying a good number of files</p> <ul> <li>Consider using a simpler encryption algorithm</li> <li>Consider using <code>rsync</code> instead of <code>scp</code></li> <li>Consider using <code>parallel-scp</code> and <code>parallel-rsync</code></li> </ul>"},{"location":"guides/linux-commands/","title":"Commands for Linux Users","text":"<p>In this chapter you will learn Linux commands and how to use them.</p> <p>Objectives: In this chapter, future Linux administrators will learn how to:</p> <p> Move within the system tree.  Create a text file, display its contents and modify it.  Use the most useful Linux commands.</p> <p> user commands, linux</p> <p>Knowledge:  Complexity: </p> <p>Reading time: 40 minutes</p>"},{"location":"guides/linux-commands/#generalities","title":"Generalities","text":"<p>Current Linux systems have graphical utilities dedicated to the work of an administrator. However, it is important to be able to use the interface in command line mode for several reasons:</p> <ul> <li>The majority of system commands are common to all Linux distributions, which is not the case for graphical tools.</li> <li>It can happen that the system does not start correctly but that a backup command interpreter remains accessible.</li> <li>Remote administration is done on the command line with an SSH terminal.</li> <li>In order to preserve server resources, the graphical interface is either not installed or launched on demand.</li> <li>Administration is done by scripts.</li> </ul> <p>Learning these commands allows the administrator to connect to a Linux terminal, to manage its resources and files, to identify the station, the terminal, and the connected users, etc.</p>"},{"location":"guides/linux-commands/#the-users","title":"The users","text":"<p>The user of a Linux system will be defined in the <code>/etc/passwd</code> file, by:</p> <ul> <li>A login name, more commonly called \"login\", containing no spaces.</li> <li>A numeric identifier: UID (User Identifier).</li> <li>A group identifier: GID (Group Identifier).</li> <li>A command interpreter, e.g., a shell, which can be different from one user to another.</li> <li>A connection directory, e.g., the home directory.</li> </ul> <p>In other files the user will be defined by:</p> <ul> <li>A password, which is encrypted before being stored (<code>/etc/shadow</code>).</li> <li>A command prompt, or prompt login, which is symbolized by a <code>#</code> for administrators and a <code>$</code> for other users (<code>/etc/profile</code>).</li> </ul> <p>Depending on the security policy implemented on the system, the password will require a certain number of characters and meet certain complexity requirements.</p> <p>Among the existing command interpreters, the Bourne-Again Shell (<code>/bin/bash</code>) is the one most frequently used. It is assigned by default to new users. For various reasons, advanced Linux users can choose alternative shells such as the Korn Shell (<code>ksh</code>), the C Shell (<code>csh</code>), etc.</p> <p>The user's login directory is by convention stored in the <code>/home</code> directory of the workstation. It will contain the user's personal data and the configuration files of his applications. By default, at login, the login directory is selected as the current directory.</p> <p>A workstation-type installation (with graphical interface) starts this interface on terminal 1. Linux being multi-user, it is possible to connect several users several times, on different physical terminals (TTY) or virtual terminals (PTS). Virtual terminals are available within a graphical environment. A user switches from one physical terminal to another using Alt + Fx from the command line or using CTRL + Alt + Fx.</p>"},{"location":"guides/linux-commands/#the-shell","title":"The shell","text":"<p>Once the user is connected to a console, the shell displays the command prompt. It then behaves like an infinite loop, repeating the same pattern with each statement entered:</p> <ul> <li>Displays the command prompt.</li> <li>Reads the command.</li> <li>Analyzes the syntax.</li> <li>Substitutes special characters.</li> <li>Executes the command.</li> <li>Displays the command prompt.</li> <li>Etc.</li> </ul> <p>The key sequence CTRL + C is used to interrupt a running command.</p> <p>The use of a command generally follows this sequence:</p> <pre><code>command [option(s)] [argument(s)]\n</code></pre> <p>The name of the command is often lower case.</p> <p>A space separates each item.</p> <p>Short options begin with a dash (<code>-l</code>), while long options begin with two dashes (<code>--list</code>). A double dash (<code>--</code>) indicates the end of the option list.</p> <p>It is possible to group some short options together:</p> <pre><code>$ ls -l -i -a\n</code></pre> <p>is equivalent to:</p> <pre><code>$ ls -lia\n</code></pre> <p>There can be several arguments after an option:</p> <pre><code>$ ls -lia /etc /home /var\n</code></pre> <p>In the literature, the term \"option\" is equivalent to the term \"parameter,\" which is more commonly used in programming. The optional side of an option or argument is symbolized by enclosing it in square brackets <code>[</code> and <code>]</code>. When more than one option is possible, a vertical bar called a \"pipe\" separates them <code>[a|e|i]</code>.</p>"},{"location":"guides/linux-commands/#general-commands","title":"General commands","text":""},{"location":"guides/linux-commands/#apropos-whatis-and-man-commands","title":"<code>apropos</code>, <code>whatis</code> and <code>man</code> commands","text":"<p>It is impossible for an administrator at any level to know all the commands and options in detail. A manual is usually available for all installed commands.</p>"},{"location":"guides/linux-commands/#apropos-command","title":"<code>apropos</code> command","text":"<p>The command <code>apropos</code> allows you to search by keyword within these manual pages:</p> Options Description <code>-s</code>, <code>--sections list</code> or <code>--section list</code> Limited to manual sections. <code>-a</code> or <code>--and</code> Displays only the item matching all the provided keywords. <p>Example:</p> <pre><code>$ apropos clear\nclear (1)            - clear the terminal screen\nclear_console (1)    - clear the console\nclearenv (3)         - clear the environment\nclearerr (3)         - check and reset stream status\nclearerr_unlocked (3) - nonlocking stdio functions\nfeclearexcept (3)    - floating-point rounding and exception handling\nfwup_clear_status (3) - library to support management of system firmware updates\nklogctl (3)          - read and/or clear kernel message ring buffer; set console_loglevel\nsgt-samegame (6)     - block-clearing puzzle\nsyslog (2)           - read and/or clear kernel message ring buffer; set console_loglevel\ntimerclear (3)       - timeval operations\nXClearArea (3)       - clear area or window\nXClearWindow (3)     - clear area or window\nXSelectionClearEvent (3) - SelectionClear event structure\n</code></pre> <p>To find the command that will allow changing the password of an account:</p> <pre><code>$ apropos --exact password  -a change\nchage (1)            - change user password expiry information\npasswd (1)           - change user password\n</code></pre>"},{"location":"guides/linux-commands/#whatis-command","title":"<code>whatis</code> command","text":"<p>The <code>whatis</code> command displays the description of the command passed as argument:</p> <pre><code>whatis clear\n</code></pre> <p>Example:</p> <pre><code>$ whatis clear\nclear (1)            - clear the terminal screen\n</code></pre>"},{"location":"guides/linux-commands/#man-command","title":"<code>man</code> command","text":"<p>Once found by <code>apropos</code> or <code>whatis</code>, the manual is read by <code>man</code> (\"Man is your friend\"). This set of manuals is divided into 8 sections, grouping information by topic, the default section being 1:</p> <ol> <li>Executable programs or commands.</li> <li>System calls (functions given by the kernel).</li> <li>Library calls (functions given by the library).</li> <li>Special files (usually found in /dev).</li> <li>File Formats and conventions (configuration files such as etc/passwd).</li> <li>Games (such as character-based applications).</li> <li>Miscellaneous (e.g. man (7)).</li> <li>System administration commands (usually only for root).</li> <li>Kernel routines (non-standard).</li> </ol> <p>Information about each section can be accessed by typing <code>man x intro</code>, where <code>x</code> is the section number.</p> <p>The command:</p> <pre><code>man passwd\n</code></pre> <p>will tell the administrator about the passwd command, its options, etc. While a:</p> <pre><code>$ man 5 passwd\n</code></pre> <p>will inform him about the files related to the command.</p> <p>Navigate through the manual with the arrows \u2191 and \u2193. Exit the manual by pressing the q key.</p>"},{"location":"guides/linux-commands/#shutdown-command","title":"<code>shutdown</code> command","text":"<p>The <code>shutdown</code> command allows you to electronically shut down a Linux server, either immediately or after a certain period of time.</p> <pre><code>shutdown [-h] [-r] time [message]\n</code></pre> <p>Specify the shutdown time in the format <code>hh:mm</code> for a precise time, or <code>+mm</code> for a delay in minutes.</p> <p>To force an immediate stop, use the word <code>now</code> in place of the time. In this case, the optional message is not sent to other users of the system.</p> <p>Examples:</p> <pre><code>[root]# shutdown -h 0:30 \"Server shutdown at 0:30\"\n[root]# shutdown -r +5\n</code></pre> <p>Options:</p> Options Remarks <code>-h</code> Shuts down the system electronically. <code>-r</code> Restarts the system."},{"location":"guides/linux-commands/#history-command","title":"<code>history</code> command","text":"<p>The <code>history</code> command displays the history of commands that have been entered by the user.</p> <p>The commands are stored in the <code>.bash_history</code> file in the user's login directory.</p> <p>Example of a history command</p> <pre><code>$ history\n147 man ls\n148 man history\n</code></pre> Options Comments <code>-w</code> Writes the current history to the history file. <code>-c</code> Deletes the history of the current session (but not the contents of the <code>.bash_history</code> file). <ul> <li>Manipulating history:</li> </ul> <p>To manipulate the history, the following commands entered from the command prompt will:</p> Keys Function !! Recalls the last command placed. !n Recalls the command by its number in the list. !string Recalls the most recent command beginning with the string. \u2191 Navigates through your history working backward in time from the most recent command. \u2193 Navigates through your history working forward in time."},{"location":"guides/linux-commands/#auto-complete","title":"Auto-complete","text":"<p>Auto-completion is a great help.</p> <ul> <li>Completes commands, entered paths, or file names.</li> <li>Press the TAB key to complete the entry in the case of a single solution.</li> <li>In the case of multiple solutions, press TAB a second time to see options.</li> </ul> <p>If double-pressing the TAB key presents no options, then there is no solution to the current completion.</p>"},{"location":"guides/linux-commands/#display-and-identification","title":"Display and Identification","text":""},{"location":"guides/linux-commands/#clear-command","title":"<code>clear</code> command","text":"<p>The <code>clear</code> command clears the contents of the terminal screen. More accurately, it shifts the display so that the command prompt is at the top of the screen on the first line.</p> <p>On a physical terminal, the display will be permanently hidden, whereas in a graphical interface, a scrollbar will allow you to go back in the history of the virtual terminal.</p> <p>Tip</p> <p>CTRL + L will have the same effect as the <code>clear</code> command</p>"},{"location":"guides/linux-commands/#echo-command","title":"<code>echo</code> command","text":"<p>The <code>echo</code> command is used to display a string of characters.</p> <p>This command is most commonly used in administration scripts to inform the user during execution.</p> <p>The <code>-n</code> option indicates no newline output string (by default, newline output string).</p> <pre><code>shell &gt; echo -n \"123\";echo \"456\"\n123456\n\nshell &gt; echo \"123\";echo \"456\"\n123\n456\n</code></pre> <p>For various reasons, the script developer may need to use special sequences (starting with a <code>\\</code> character). In this case, the <code>-e</code> option will be stipulated, allowing interpretation of the sequences.</p> <p>Among the frequently used sequences, we can mention:</p> Sequence Result <code>\\a</code> Sends a sonar beep <code>\\b</code> Back <code>\\n</code> Adds a line break <code>\\t</code> Adds a horizontal tab <code>\\v</code> Adds a vertical tab"},{"location":"guides/linux-commands/#date-command","title":"<code>date</code> command","text":"<p>The <code>date</code> command displays the date and time. The command has the following syntax:</p> <pre><code>date [-d yyyyMMdd] [format]\n</code></pre> <p>Examples:</p> <pre><code>$ date\nMon May 24 16:46:53 CEST 2021\n$ date -d 20210517 +%j\n137\n</code></pre> <p>In this last example, the <code>-d</code> option displays a given date. The <code>+%j</code> option formats this date to show only the day of the year.</p> <p>Warning</p> <p>The format of a date can change depending on the value of the language defined in the environment variable <code>$LANG</code>.</p> <p>The date display can follow the following formats:</p> Option Format <code>+%A</code> Locale's full weekday name (e.g., Sunday) <code>+%B</code> Locale's full month name (e.g., January) <code>+%c</code> Locale's date and time (e.g., Thu Mar  3 23:05:25 2005) <code>+%d</code> Day of month (e.g., 01) <code>+%F</code> Date in <code>YYYY-MM-DD</code> format <code>+%G</code> Year <code>+%H</code> Hour (00..23) <code>+%j</code> Day of the year (001..366) <code>+%m</code> Month number (01..12) <code>+%M</code> Minute  (00..59) <code>+%R</code> Time in <code>hh:mm</code> format <code>+%s</code> Seconds since January 1, 1970 <code>+%S</code> Second (00..60) <code>+%T</code> Time in <code>hh:mm:ss</code> format <code>+%u</code> Day of the week (<code>1</code> for Monday) <code>+%V</code> Week number (<code>+%V</code>) <code>+%x</code> Date in format <code>DD/MM/YYYY</code> <p>The <code>date</code> command also allows you to change the system date and time. In this case, the <code>-s</code> option will be used.</p> <pre><code>[root]# date -s \"2021-05-24 10:19\"\n</code></pre> <p>The format to be used following the <code>-s</code> option is this:</p> <pre><code>date -s \"yyyy-MM-dd hh:mm[:ss]\"\n</code></pre>"},{"location":"guides/linux-commands/#id-who-and-whoami-commands","title":"<code>id</code>, <code>who</code> and <code>whoami</code> commands","text":"<p>The <code>id</code> command is used to display information about users and groups. By default, no user parameter is added, and the information of the currently logged in user and group is displayed\u3002</p> <pre><code>$ id rockstar\nuid=1000(rockstar) gid=1000(rockstar) groups=1000(rockstar),10(wheel)\n</code></pre> <p>The <code>-g</code>, <code>-G</code>, <code>-n</code> and <code>-u</code> options display the main group GID, subgroup GIDs, names instead of numeric identifiers, and the user's UID respectively.</p> <p>The <code>whoami</code> command displays the login of the current user.</p> <p>The <code>who</code> command alone displays the names of logged in users:</p> <pre><code>$ who\nrockstar tty1   2021-05-24 10:30\nroot     pts/0  2021-05-24 10:31\n</code></pre> <p>Since Linux is multi-user, it is possible that multiple sessions are open on the same station, either physically or over the network. It is interesting to know which users are logged in, if only to communicate with them by sending messages.</p> <ul> <li>tty: represents a terminal.</li> <li>pts/: represents a virtual console in a graphical environment with the number after representing the instance of the virtual console (0, 1, 2...)</li> </ul> <p>The <code>-r</code> option also displays the runlevel (see chapter \"startup\").</p>"},{"location":"guides/linux-commands/#file-tree","title":"File Tree","text":"<p>In Linux, the file tree is an inverted tree, called a single hierarchical tree, whose root is the directory <code>/</code>.</p> <p>The current directory is the directory where the user is located.</p> <p>The connection directory is the working directory associated with the user. The login directories are, by default, stored in the <code>/home</code> directory.</p> <p>When the user logs in, the current directory is the login directory.</p> <p>An absolute path references a file from the root by traversing the entire tree to the file level:</p> <ul> <li><code>/home/groupA/alice/file</code></li> </ul> <p>The relative path references that same file by traversing the entire tree from the current directory:</p> <ul> <li><code>../alice/file</code></li> </ul> <p>In the above example, the \"<code>..</code>\" refers to the parent directory of the current directory.</p> <p>A directory, even if it is empty, will necessarily contain at least two references:</p> <ul> <li><code>.</code>: reference to itself.</li> <li><code>..</code>: reference to the parent directory of the current directory.</li> </ul> <p>A relative path can thus start with <code>./</code> or <code>../</code>. When the relative path refers to a subdirectory or file in the current directory, then the <code>./</code> is often omitted. Mentioning the first <code>./</code> in the tree will only really be required to run an executable file.</p> <p>Errors in paths can cause many problems: creating folders or files in the wrong places, unintentional deletions, etc. It is therefore strongly recommended to use auto-completion when entering paths.</p> <p></p> <p>In the above example, we are looking to give the location of the file <code>myfile</code> from the directory of bob.</p> <ul> <li>By an absolute path, the current directory does not matter. We start at the root, and work our way down to the directories <code>home</code>, <code>groupA</code>, <code>alice</code> and finally the file <code>myfile</code>: <code>/home/groupA/alice/myfile</code>.</li> <li>By a relative path, our starting point being the current directory <code>bob</code>, we go up one level through <code>..</code> (i.e., into the <code>groupA</code> directory), then down into the alice directory, and finally the <code>myfile</code> file: <code>../alice/myfile</code>.</li> </ul>"},{"location":"guides/linux-commands/#pwd-command","title":"<code>pwd</code> command","text":"<p>The <code>pwd</code> (Print Working Directory) command displays the absolute path of the current directory.</p> <pre><code>$ pwd\n/home/rockstar\n</code></pre> <p>To use a relative path to reference a file or directory, or use the <code>cd</code> command to move to another directory, you must know its location in the file tree.</p> <p>Depending on the type of shell and the different parameters of its configuration file, the terminal prompt (also known as the command prompt) will display the absolute or relative path of the current directory.</p>"},{"location":"guides/linux-commands/#cd-command","title":"<code>cd</code> command","text":"<p>The <code>cd</code> (Change Directory) command allows you to change the current directory -- in other words, to move through the tree.</p> <pre><code>$ cd /tmp\n$ pwd\n/tmp\n$ cd ../\n$ pwd\n/\n$ cd\n$ pwd\n/home/rockstar\n</code></pre> <p>As you can see in the last example above, the command <code>cd</code> with no arguments moves the current directory to the <code>home directory</code>.</p>"},{"location":"guides/linux-commands/#ls-command","title":"<code>ls</code> command","text":"<p>The <code>ls</code> command displays the contents of a directory.</p> <pre><code>ls [-a] [-i] [-l] [directory1] [directory2] [\u2026]\n</code></pre> <p>Example:</p> <pre><code>$ ls /home\n.    ..    rockstar\n</code></pre> <p>The main options of the <code>ls</code> command are:</p> Option Information <code>-a</code> Displays all files, even hidden ones. Hidden files in Linux are those beginning with <code>.</code>. <code>-i</code> Displays inode numbers. <code>-l</code> Use a long listing format, that is, each line displays long format information for a file or directory. <p>The <code>ls</code> command, however, has a lot of options (see <code>man</code>):</p> Option Information <code>-d</code> Displays information about a directory instead of listing its contents. <code>-g</code> Like -l option, but do not list owner. <code>-h</code> Displays file sizes in the most appropriate format (byte, kilobyte, megabyte, gigabyte, ...). <code>h</code> stands for Human Readable. Needs to be used with -l option. <code>-s</code> Displays the allocated size of each file, in blocks. In the GNU/Linux operating system, \"block\" is the smallest unit of storage in the file system, one block equals 4096Byte. <code>-A</code> Displays all files in the directory except <code>.</code> and <code>..</code> <code>-R</code> Displays the contents of subdirectories recursively. <code>-F</code> Displays the type of files. Prints a <code>/</code> for a directory, <code>*</code> for executables, <code>@</code> for a symbolic link, and nothing for a text file. <code>-X</code> Sorts files according to their extensions. <ul> <li>Description of columns generated by running the <code>ls -lia</code> command:</li> </ul> <pre><code>$ ls -lia /home\n78489 drwx------ 4 rockstar rockstar 4096 25 oct. 08:10 rockstar\n</code></pre> Value Information <code>78489</code> Inode Number. <code>drwx------</code> File type (<code>d</code>) and rights (<code>rwx------</code>). <code>4</code> Number of subdirectories (<code>.</code> and <code>..</code> included). For a file, it represents the number of hard links, and 1 represents itself. <code>rockstar</code> User ownership. <code>rockstar</code> Group ownership. <code>4096</code> For files, it shows the size of the file. For directories, it shows the fixed value of 4096 bytes occupied by the file naming. To calculate the total size of a directory, use <code>du -sh rockstar/</code> <code>25 oct. 08:10</code> Last modified date. <code>rockstar</code> The name of the file (or directory). <p>Note</p> <p>Aliases are frequently positioned in common distributions.</p> <p>This is the case of the alias <code>ll</code>:</p> <pre><code>alias ll='ls -l --color=auto'\n</code></pre> <p>The <code>ls</code> command has many options. Here are some advanced examples of uses:</p> <ul> <li>List the files in <code>/etc</code> in order of last modification:</li> </ul> <pre><code>$ ls -ltr /etc\ntotal 1332\n-rw-r--r--.  1 root root    662 29 may   2021 logrotate.conf\n-rw-r--r--.  1 root root    272 17 may.   2021 mailcap\n-rw-------.  1 root root    122 12 may.  2021 securetty\n...\n-rw-r--r--.  2 root root     85 18 may.  17:04 resolv.conf\n-rw-r--r--.  1 root root     44 18 may.  17:04 adjtime\n-rw-r--r--.  1 root root    283 18 may.  17:05 mtab\n</code></pre> <ul> <li>List <code>/var</code> files larger than 1 megabyte but less than 1 gigabyte. The example here uses advanced <code>grep</code> commands with regular expressions. Novices don't have to struggle too much, there will be a special tutorial to introduce these regular expressions in the future.</li> </ul> <pre><code>$ ls -lhR /var/ | grep ^\\- | grep -E \"[1-9]*\\.[0-9]*M\" \n...\n-rw-r--r--. 1 apache apache 1.2M 10 may.  13:02 XB RiyazBdIt.ttf\n-rw-r--r--. 1 apache apache 1.2M 10 may.  13:02 XB RiyazBd.ttf\n-rw-r--r--. 1 apache apache 1.1M 10 may.  13:02 XB RiyazIt.ttf\n...\n</code></pre> <p>Of course, we highly recommend that you use the <code>find</code> command.</p> <pre><code>$ find /var -size +1M -a -size -1024M  -a -type f  -exec ls -lh {} \\;\n</code></pre> <ul> <li>Show the rights on a folder:</li> </ul> <p>To find out the rights to a folder, in our example <code>/etc</code>, the following command would not be appropriate:</p> <pre><code>$ ls -l /etc\ntotal 1332\n-rw-r--r--.  1 root root     44 18 nov.  17:04 adjtime\n-rw-r--r--.  1 root root   1512 12 janv.  2010 aliases\n-rw-r--r--.  1 root root  12288 17 nov.  17:41 aliases.db\ndrwxr-xr-x.  2 root root   4096 17 nov.  17:48 alternatives\n...\n</code></pre> <p>The above command will display the contents of the folder (inside) by default. For the folder itself, you can use the <code>-d</code> option.</p> <pre><code>$ ls -ld /etc\ndrwxr-xr-x. 69 root root 4096 18 nov.  17:05 /etc\n</code></pre> <ul> <li>Sort by file size, largest first:</li> </ul> <pre><code>$ ls -lhS\n</code></pre> <ul> <li>time/date format with <code>-l</code>:</li> </ul> <pre><code>$ ls -l --time-style=\"+%Y-%m-%d %m-%d %H:%M\" /\ntotal 12378\ndr-xr-xr-x. 2 root root 4096 2014-11-23 11-23 03:13 bin\ndr-xr-xr-x. 5 root root 1024 2014-11-23 11-23 05:29 boot\n</code></pre> <ul> <li>Add the trailing slash to the end of folders:</li> </ul> <p>By default, the <code>ls</code> command does not display the last slash of a folder. In some cases, like for scripts for example, it is useful to display them:</p> <pre><code>$ ls -dF /etc\n/etc/\n</code></pre> <ul> <li>Hide some extensions:</li> </ul> <pre><code>$ ls /etc --hide=*.conf\n</code></pre>"},{"location":"guides/linux-commands/#mkdir-command","title":"<code>mkdir</code> command","text":"<p>The <code>mkdir</code> command creates a directory or directory tree.</p> <pre><code>mkdir [-p] directory [directory] [...]\n</code></pre> <p>Example:</p> <pre><code>$ mkdir /home/rockstar/work\n</code></pre> <p>The \"rockstar\" directory must exist to create the \"work\" directory.</p> <p>Otherwise, the <code>-p</code> option should be used. The <code>-p</code> option creates the parent directories if they do not exist.</p> <p>Danger</p> <p>It is not recommended to use Linux command names as directory or file names.</p>"},{"location":"guides/linux-commands/#touch-command","title":"<code>touch</code> command","text":"<p>The <code>touch</code> command changes the timestamp of a file or creates an empty file if the file does not exist.</p> <pre><code>touch [-t date] file\n</code></pre> <p>Example:</p> <pre><code>$ touch /home/rockstar/myfile\n</code></pre> Option Information <code>-t date</code> Changes the date of last modification of the file with the specified date. <p>Date format: <code>[AAAA]MMJJhhmm[ss]</code></p> <p>Tip</p> <p>The <code>touch</code> command is primarily used to create an empty file, but it can be useful for incremental or differential backups for example. Indeed, the only effect of executing a <code>touch</code> on a file will be to force it to be saved during the next backup.</p>"},{"location":"guides/linux-commands/#rmdir-command","title":"<code>rmdir</code> command","text":"<p>The <code>rmdir</code> command deletes an empty directory.</p> <p>Example:</p> <pre><code>$ rmdir /home/rockstar/work\n</code></pre> Option Information <code>-p</code> Removes the parent directory or directories provided if they are empty. <p>Tip</p> <p>To delete both a non-empty directory and its contents, use the <code>rm</code> command.</p>"},{"location":"guides/linux-commands/#rm-command","title":"<code>rm</code> command","text":"<p>The <code>rm</code> command deletes a file or directory.</p> <pre><code>rm [-f] [-r] file [file] [...]\n</code></pre> <p>Danger</p> <p>Any deletion of a file or directory is final.</p> Options Information <code>-f</code> Do not ask whether to delete. <code>-i</code> Ask whether to delete. <code>-r</code> Delete a directory and recursively delete its subdirectories. <p>Note</p> <p>The <code>rm</code> command itself does not ask for confirmation when deleting files. However, with a Red Hat/Rocky distribution, <code>rm</code> does ask for confirmation of deletion because the <code>rm</code> command is an <code>alias</code> of the <code>rm -i</code> command. Don't be surprised if on another distribution, like Debian for example, you don't get a confirmation request.</p> <p>Deleting a folder with the <code>rm</code> command, whether the folder is empty or not, will require the <code>-r</code> option to be added.</p> <p>The end of the options is signaled to the shell by a double dash <code>--</code>.</p> <p>In the example:</p> <pre><code>$ &gt;-hard-hard # To create an empty file called -hard-hard\nhard-hard\n[CTRL+C] To interrupt the creation of the file\n$ rm -f -- -hard-hard\n</code></pre> <p>The hard-hard file name starts with a <code>-</code>. Without the use of the <code>--</code> the shell would have interpreted the <code>-d</code> in <code>-hard-hard</code> as an option.</p>"},{"location":"guides/linux-commands/#mv-command","title":"<code>mv</code> command","text":"<p>The <code>mv</code> command moves and renames a file.</p> <pre><code>mv file [file ...] destination\n</code></pre> <p>Examples:</p> <pre><code>$ mv /home/rockstar/file1 /home/rockstar/file2\n$ mv /home/rockstar/file1 /home/rockstar/file2 /tmp\n</code></pre> Options Information <code>-f</code> Don't ask for confirmation if overwriting the destination file. <code>-i</code> Request confirmation if overwriting destination file (default). <p>A few concrete cases will help you understand the difficulties that can arise:</p> <pre><code>$ mv /home/rockstar/file1 /home/rockstar/file2\n</code></pre> <p>Renames <code>file1</code> to <code>file2</code>. If <code>file2</code> already exists, replace the contents of the file with <code>file1</code>.</p> <pre><code>$ mv /home/rockstar/file1 /home/rockstar/file2 /tmp\n</code></pre> <p>Moves <code>file1</code> and <code>file2</code> into the <code>/tmp</code> directory.</p> <pre><code>$ mv file1 /repexist/file2\n</code></pre> <p>Moves <code>file1</code> into <code>repexist</code> and renames it <code>file2</code>.</p> <pre><code>$ mv file1 file2\n</code></pre> <p><code>file1</code> is renamed to <code>file2</code>.</p> <pre><code>$ mv file1 /repexist\n</code></pre> <p>If the destination directory exists, <code>file1</code> is moved to <code>/repexist</code>.</p> <pre><code>$ mv file1 /wrongrep\n</code></pre> <p>If the destination directory does not exist, <code>file1</code> is renamed to <code>wrongrep</code> in the root directory.</p>"},{"location":"guides/linux-commands/#cp-command","title":"<code>cp</code> command","text":"<p>The <code>cp</code> command copies a file.</p> <pre><code>cp file [file ...] destination\n</code></pre> <p>Example:</p> <pre><code>$ cp -r /home/rockstar /tmp\n</code></pre> Options Information <code>-i</code> Request confirmation if overwriting (default). <code>-f</code> Do not ask for confirmation if overwriting the destination file. <code>-p</code> Keeps the owner, permissions and timestamp of the copied file. <code>-r</code> Copies a directory with its files and subdirectories. <code>-s</code> Creates a symbolic link rather than copying. <pre><code>cp file1 /repexist/file2\n</code></pre> <p><code>file1</code> is copied to <code>/repexist</code> under the name <code>file2</code>.</p> <pre><code>$ cp file1 file2\n</code></pre> <p><code>file1</code> is copied as <code>file2</code> to this directory.</p> <pre><code>$ cp file1 /repexist\n</code></pre> <p>If the destination directory exists, <code>file1</code> is copied to <code>/repexist</code>.</p> <pre><code>$ cp file1 /wrongrep\n</code></pre> <p>If the destination directory does not exist, <code>file1</code> is copied under the name <code>wrongrep</code> to the root directory.</p>"},{"location":"guides/linux-commands/#visualization","title":"Visualization","text":""},{"location":"guides/linux-commands/#file-command","title":"<code>file</code> command","text":"<p>The <code>file</code> command displays the type of a file.</p> <pre><code>file file1 [files]\n</code></pre> <p>Example:</p> <pre><code>$ file /etc/passwd /etc\n/etc/passwd:    ASCII text\n/etc:        directory\n</code></pre>"},{"location":"guides/linux-commands/#more-command","title":"<code>more</code> command","text":"<p>The <code>more</code> command displays the contents of one or more files screen by screen.</p> <pre><code>more file1 [files]\n</code></pre> <p>Example:</p> <pre><code>$ more /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n...\n</code></pre> <p>Using the ENTER key, the move is line by line. Using the SPACE key, the move is page by page. <code>/text</code> allows you to search for the occurrence in the file.</p>"},{"location":"guides/linux-commands/#less-command","title":"<code>less</code> command","text":"<p>The <code>less</code> command displays the contents of one or more files. The <code>less</code> command is interactive and has its own commands for use.</p> <pre><code>less file1 [files]\n</code></pre> <p>The commands specific to <code>less</code> are:</p> Command Action h Help. \u2191\u2193\u2192\u2190 Move up, down a line, or to the right or left. Enter Move down one line. Space Move down one page. PgUp and PgDn Move up or down one page. gg and G Move to the first and last pages <code>/text</code> Search for text. q Quit the <code>less</code> command."},{"location":"guides/linux-commands/#cat-command","title":"<code>cat</code> command","text":"<p>The <code>cat</code> command concatenates the contents of multiple files and displays the result on the standard output.</p> <pre><code>cat file1 [files]\n</code></pre> <p>Example 1 - Displaying the contents of a file to the standard output:</p> <pre><code>$ cat /etc/passwd\n</code></pre> <p>Example 2 - Displaying the contents of multiple files to standard output:</p> <pre><code>$ cat /etc/passwd /etc/group\n</code></pre> <p>Example 3 - Combining the contents of multiple files into one file using output redirection:</p> <pre><code>$ cat /etc/passwd /etc/group &gt; usersAndGroups.txt\n</code></pre> <p>Example 4 - Displaying the line numbering:</p> <pre><code>$ cat -n /etc/profile\n     1    # /etc/profile: system-wide .profile file for the Bourne shell (sh(1))\n     2    # and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).\n     3\n     4    if [ \"`id -u`\" -eq 0 ]; then\n     5      PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n     6    else\n\u2026\n</code></pre> <p>Example 5 - Shows the numbering of non-empty lines:</p> <pre><code>$ cat -b /etc/profile\n     1    # /etc/profile: system-wide .profile file for the Bourne shell (sh(1))\n     2    # and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).\n\n     3    if [ \"`id -u`\" -eq 0 ]; then\n     4      PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n     5    else\n\u2026\n</code></pre>"},{"location":"guides/linux-commands/#tac-command","title":"<code>tac</code> command","text":"<p>The <code>tac</code> command does almost the opposite of the <code>cat</code> command. It displays the contents of a file starting from the end (which is particularly interesting for reading logs!).</p> <p>Example: Display a log file by displaying the last line first:</p> <pre><code>[root]# tac /var/log/messages | less\n</code></pre>"},{"location":"guides/linux-commands/#head-command","title":"<code>head</code> command","text":"<p>The <code>head</code> command displays the beginning of a file.</p> <pre><code>head [-n x] file\n</code></pre> Option Description <code>-n x</code> Display the first <code>x</code> lines of the file <p>By default (without the <code>-n</code> option), the <code>head</code> command will display the first 10 lines of the file.</p>"},{"location":"guides/linux-commands/#tail-command","title":"<code>tail</code> command","text":"<p>The <code>tail</code> command displays the end of a file.</p> <pre><code>tail [-f] [-n x] file\n</code></pre> Option Description <code>-n x</code> Displays the last <code>x</code> lines of the file <code>-f</code> Displays changes to the file in real time <p>Example:</p> <pre><code>tail -n 3 /etc/passwd\nsshd:x:74:74:Privilege-separeted sshd:/var/empty /sshd:/sbin/nologin\ntcpdump::x:72:72::/:/sbin/nologin\nuser1:x:500:500:grp1:/home/user1:/bin/bash\n</code></pre> <p>With the <code>-f</code> option, the change information of the file will always be output unless the user exits the monitoring state with CTRL + C. This option is very frequently used to track log files (the logs) in real time.</p> <p>Without the <code>-n</code> option, the <code>tail</code> command displays the last 10 lines of the file.</p>"},{"location":"guides/linux-commands/#sort-command","title":"<code>sort</code> command","text":"<p>The <code>sort</code> command sorts the lines of a file.</p> <p>It allows you to order the result of a command or the content of a file in a given order, numerically, alphabetically, by size (KB, MB, GB) or in reverse order.</p> <pre><code>sort [-k] [-n] [-u] [-o file] [-t] file\n</code></pre> <p>Example:</p> <pre><code>$ sort -k 3,4 -t \":\" -n /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nadm:x:3:4:adm:/var/adm/:/sbin/nologin\n</code></pre> Option Description <code>-k</code> Specify the columns to be separated. You can specify multiple columns. <code>-n</code> Requests a numeric sort. <code>-o file</code> Saves the sort to the specified file. <code>-t</code> Specify a delimiter, which requires that the contents of the corresponding file must be regularly delimited column contents, otherwise they cannot be sorted properly. <code>-r</code> Reverse the order of the result. Used in conjunction with the <code>-n</code> option to sort in order from largest to smallest. <code>-u</code> Remove duplicates after sorting. Equivalent to <code>sort file | uniq</code>. <p>The <code>sort</code> command sorts the file only on the screen. The file is not modified by the sorting. To save the sort, use the <code>-o</code> option or an output redirection <code>&gt;</code>.</p> <p>By default, the numbers are sorted according to their character. Thus, \"110\" will be before \"20\", which will itself be before \"3\". The <code>-n</code> option must be specified so that the numeric character blocks are sorted by their value.</p> <p>The <code>sort</code> command reverses the order of the results, with the <code>-r</code> option:</p> <pre><code>$ sort -k 3 -t \":\" -n -r /etc/passwd\nnobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin\nsystemd-coredump:x:999:997:systemd Core Dumper:/:/sbin/nologin\npolkitd:x:998:996:User for polkitd:/:/sbin/nologin\n</code></pre> <p>In this example, the <code>sort</code> command will sort the contents of the <code>/etc/passwd</code> file this time from largest uid (user identifier) to smallest.</p> <p>Some advanced examples of using the <code>sort</code> command:</p> <ul> <li>Shuffling values</li> </ul> <p>The <code>sort</code> command also allows you to shuffle values with the <code>-R</code> option:</p> <pre><code>$ sort -R /etc/passwd\n</code></pre> <ul> <li>Sorting IP addresses</li> </ul> <p>A system administrator is quickly confronted with the processing of IP addresses from the logs of his services such as SMTP, VSFTP or Apache. These addresses are typically extracted with the <code>cut</code> command.</p> <p>Here is an example with the file <code>dns-client.txt</code>:</p> <pre><code>192.168.1.10\n192.168.1.200\n5.1.150.146\n208.128.150.98\n208.128.150.99\n</code></pre> <pre><code>$ sort -nr dns-client.txt\n208.128.150.99\n208.128.150.98\n192.168.1.200\n192.168.1.10\n5.1.150.146\n</code></pre> <ul> <li>Sorting file by removing duplicates</li> </ul> <p>The <code>sort</code> command knows how to remove the duplicates from the file output using <code>-u</code> as option.</p> <p>Here is an example with the file <code>colours.txt</code>:</p> <p><pre><code>Red\nGreen\nBlue\nRed\nPink\n</code></pre> <pre><code>$ sort -u colours.txt\nBlue\nGreen\nPink\nRed\n</code></pre></p> <ul> <li>Sorting file by sizes</li> </ul> <p>The <code>sort</code> command knows how to recognize file sizes, from commands like <code>ls</code> with the <code>-h</code> option.</p> <p>Here is an example with the file <code>size.txt</code>:</p> <pre><code>1.7G\n18M\n69K\n2.4M\n1.2M\n4.2G\n6M\n124M\n12.4M\n4G\n</code></pre> <pre><code>$ sort -hr size.txt\n4.2G\n4G\n1.7G\n124M\n18M\n12.4M\n6M\n2.4M\n1.2M\n69K\n</code></pre>"},{"location":"guides/linux-commands/#wc-command","title":"<code>wc</code> command","text":"<p>The <code>wc</code> command counts the number of lines, words and/or bytes in a file.</p> <pre><code>wc [-l] [-m] [-w] file [files]\n</code></pre> Option Description <code>-c</code> Count the number of bytes. <code>-m</code> Count the number of characters. <code>-l</code> Counts the number of lines. <code>-w</code> Counts the number of words."},{"location":"guides/linux-commands/#search","title":"Search","text":""},{"location":"guides/linux-commands/#find-command","title":"<code>find</code> command","text":"<p>The <code>find</code> command searches for files or directories location.</p> <pre><code>find directory [-name name] [-type type] [-user login] [-date date]\n</code></pre> <p>Since there are so many options to the <code>find</code> command, it is best to refer to the <code>man</code>.</p> <p>If the search directory is not specified, the <code>find</code> command will search from the current directory.</p> Option Description <code>-perm permissions</code> Search for files by their permissions. <code>-size size</code> Search for files by size."},{"location":"guides/linux-commands/#-exec-option-of-the-find-command","title":"<code>-exec</code> option of the <code>find</code> command","text":"<p>It is possible to use the <code>-exec</code> option of the <code>find</code> command to execute a command on each result line:</p> <pre><code>$ find /tmp -name *.txt -exec rm -f {} \\;\n</code></pre> <p>The previous command searches for all files in the <code>/tmp</code> directory named <code>*.txt</code> and deletes them.</p> <p>Understand the <code>-exec</code> option</p> <p>In the example above, the <code>find</code> command will construct a string representing the command to be executed.</p> <p>If the <code>find</code> command finds three files named <code>log1.txt</code>, <code>log2.txt</code>, and <code>log3.txt</code>, then the <code>find</code> command will construct the string by replacing in the string <code>rm -f {} \\;</code> the braces with one of the results of the search, and do this as many times as there are results.</p> <p>This will give us:</p> <pre><code>rm -f /tmp/log1.txt ; rm -f /tmp/log2.txt ; rm -f /tmp/log3.txt ;\n</code></pre> <p>The <code>;</code> character is a special shell character that must be protected by a <code>\\</code> to prevent it from being interpreted too early by the <code>find</code> command (and not in the <code>-exec</code>).</p> <p>Tip</p> <p><code>$ find /tmp -name *.txt -delete</code> does the same thing.</p>"},{"location":"guides/linux-commands/#whereis-command","title":"<code>whereis</code> command","text":"<p>The <code>whereis</code> command searches for files related to a command.</p> <pre><code>whereis [-b] [-m] [-s] command\n</code></pre> <p>Example:</p> <pre><code>$ whereis -b ls\nls: /bin/ls\n</code></pre> Option Description <code>-b</code> Searches only the binary file. <code>-m</code> Searches only for man pages. <code>-s</code> Searches only for source files."},{"location":"guides/linux-commands/#grep-command","title":"<code>grep</code> command","text":"<p>The <code>grep</code> command searches for a string in a file.</p> <pre><code>grep [-w] [-i] [-v] \"string\" file\n</code></pre> <p>Example:</p> <pre><code>$ grep -w \"root:\" /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n</code></pre> Option Description <code>-i</code> Ignores the case of the searched string. <code>-v</code> Excludes lines containing the string. <code>-w</code> Searches for the exact word. <p>The <code>grep</code> command returns the complete line containing the string you are looking for. * The <code>^</code> special character is used to search for a string at the beginning of a line. * The special character <code>$</code> searches for a string at the end of a line.</p> <pre><code>$ grep -w \"^root\" /etc/passwd\n</code></pre> <p>Note</p> <p>This command is very powerful and it is highly recommended to consult its manual. It has many derivatives.</p> <p>It is possible to search for a string in a file tree with the <code>-R</code> option.</p> <pre><code>grep -R \"Virtual\" /etc/httpd\n</code></pre>"},{"location":"guides/linux-commands/#meta-characters-wildcards","title":"Meta-characters (wildcards)","text":"<p>Meta-characters replace one or more characters (or even an absence of characters) during a search. These meta-characters are also known as wildcards.</p> <p>They can be combined.</p> <p>The <code>*</code> character replaces a string composed of any characters. The <code>*</code> character can also represent an absence of character.</p> <pre><code>$ find /home -name \"test*\"\n/home/rockstar/test\n/home/rockstar/test1\n/home/rockstar/test11\n/home/rockstar/tests\n/home/rockstar/test362\n</code></pre> <p>Meta-characters allow more complex searches by replacing all or part of a word. Simply replace the unknowns with these special characters.</p> <p>The character <code>?</code> replaces a single character, whatever it is.</p> <pre><code>$ find /home -name \"test?\"\n/home/rockstar/test1\n/home/rockstar/tests\n</code></pre> <p>The square brackets <code>[</code> and <code>]</code> are used to specify the values that a single character can take.</p> <pre><code>$ find /home -name \"test[123]*\"\n/home/rockstar/test1\n/home/rockstar/test11\n/home/rockstar/test362\n</code></pre> <p>Note</p> <p>Always surround words containing meta-characters with <code>\"</code> to prevent them from being replaced by the names of files that meet the criteria.</p> <p>Warning</p> <p>Do not confuse shell meta-characters with regular expression meta-characters. The <code>grep</code> command uses regular expression meta-characters.</p>"},{"location":"guides/linux-commands/#redirects-and-pipes","title":"Redirects and pipes","text":""},{"location":"guides/linux-commands/#standard-input-and-output","title":"Standard input and output","text":"<p>On UNIX and Linux systems, there are three standard streams. They allow programs, via the <code>stdio.h</code> library, to input or output information.</p> <p>These streams are called X channel or X file descriptor.</p> <p>By default:</p> <ul> <li>the keyboard is the input device for channel 0, called stdin ;</li> <li>the screen is the output device for channels 1 and 2, called stdout and stderr.</li> </ul> <p></p> <p>stderr receives the error streams returned by a command. The other streams are directed to stdout.</p> <p>These streams point to peripheral files, but since everything is a file in UNIX/Linux, I/O streams can easily be diverted to other files. This principle is the strength of the shell.</p>"},{"location":"guides/linux-commands/#input-redirection","title":"Input redirection","text":"<p>It is possible to redirect the input stream from another file with the character <code>&lt;</code> or <code>&lt;&lt;</code>. The command will read the file instead of the keyboard:</p> <pre><code>$ ftp -in serverftp &lt;&lt; ftp-commands.txt\n</code></pre> <p>Note</p> <p>Only commands that require keyboard input will be able to handle input redirection.</p> <p>Input redirection can also be used to simulate user interactivity. The command will read the input stream until it encounters the defined keyword after the input redirection.</p> <p>This feature is used to script interactive commands:</p> <pre><code>$ ftp -in serverftp &lt;&lt; END\nuser alice password\nput file\nbye\nEND\n</code></pre> <p>The keyword <code>END</code> can be replaced by any word.</p> <pre><code>$ ftp -in serverftp &lt;&lt; STOP\nuser alice password\nput file\nbye\nSTOP\n</code></pre> <p>The shell exits the <code>ftp</code> command when it receives a line containing only the keyword.</p> <p>Warning</p> <p>The ending keyword, here <code>END</code> or <code>STOP</code>, must be the only word on the line and must be at the beginning of the line.</p> <p>The standard input redirection is rarely used because most commands accept a filename as an argument.</p> <p>The command <code>wc</code> could be used like this:</p> <pre><code>$ wc -l .bash_profile\n27 .bash_profile # the number of lines is followed by the file name\n$ wc -l &lt; .bash_profile\n27 # returns only the number of lines\n</code></pre>"},{"location":"guides/linux-commands/#output-redirection","title":"Output redirection","text":"<p>Standard output can be redirected to other files using the <code>&gt;</code> or <code>&gt;&gt;</code> characters.</p> <p>The simple <code>&gt;</code> redirection overwrites the contents of the output file:</p> <pre><code>$ date +%F &gt; date_file\n</code></pre> <p>When the <code>&gt;&gt;</code> character is used, it indicates that the output result of the command is appended to the file content.</p> <pre><code>$ date +%F &gt;&gt; date_file\n</code></pre> <p>In both cases, the file is automatically created when it does not exist.</p> <p>The standard error output can also be redirected to another file. This time it will be necessary to specify the channel number (which can be omitted for channels 0 and 1):</p> <pre><code>$ ls -R / 2&gt; errors_file\n$ ls -R / 2&gt;&gt; errors_file\n</code></pre>"},{"location":"guides/linux-commands/#examples-of-redirection","title":"Examples of redirection","text":"<p>Redirection of 2 outputs to 2 files:</p> <pre><code>$ ls -R / &gt;&gt; ok_file 2&gt;&gt; nok_file\n</code></pre> <p>Redirection of the 2 outputs to a single file:</p> <pre><code>$ ls -R / &gt;&gt; log_file 2&gt;&amp;1\n</code></pre> <p>Redirection of stderr to a \"bottomless pit\" (<code>/dev/null</code>):</p> <pre><code>$ ls -R / 2&gt;&gt; /dev/null\n</code></pre> <p>When both output streams are redirected, no information is displayed on the screen. To use both the output redirection and to keep the display, you will have to use the command <code>tee</code>.</p>"},{"location":"guides/linux-commands/#pipes","title":"Pipes","text":"<p>A pipe is a mechanism allowing you to link the standard output of a first command to the standard input of a second command.</p> <p>This communication is uni directional and is done with the <code>|</code> symbol. The pipe symbol <code>|</code> is obtained by pressing the  SHIFT + | simultaneously.</p> <p></p> <p>All data sent by the control on the left of the pipe through the standard output channel is sent to the standard input channel of the control on the right.</p> <p>The commands particularly used after a pipe are filters.</p> <ul> <li>Examples:</li> </ul> <p>Display only the beginning:</p> <pre><code>$ ls -lia / | head\n</code></pre> <p>Display only the end:</p> <pre><code>$ ls -lia / | tail\n</code></pre> <p>Sort the result:</p> <pre><code>$ ls -lia / | sort\n</code></pre> <p>Count the number of words / characters:</p> <pre><code>$ ls -lia / | wc\n</code></pre> <p>Search for a string in the result:</p> <pre><code>$ ls -lia / | grep fichier\n</code></pre>"},{"location":"guides/linux-commands/#special-points","title":"Special Points","text":""},{"location":"guides/linux-commands/#tee-command","title":"<code>tee</code> command","text":"<p>The <code>tee</code> command is used to redirect the standard output of a command to a file while maintaining the screen display.</p> <p>It is combined with the <code>|</code> pipe to receive as input the output of the command to be redirected:</p> <pre><code>$ ls -lia / | tee fic\n$ cat fic\n</code></pre> <p>The <code>-a</code> option adds to the file instead of overwriting it.</p>"},{"location":"guides/linux-commands/#alias-and-unalias-commands","title":"<code>alias</code> and <code>unalias</code> commands","text":"<p>Using alias is a way to ask the shell to remember a particular command with its options and give it a name.</p> <p>For example:</p> <pre><code>$ ll\n</code></pre> <p>will replace the command:</p> <pre><code>$ ls -l\n</code></pre> <p>The <code>alias</code> command lists the aliases for the current session. Aliases are set by default on Linux distributions. Here, the aliases for a Rocky server:</p> <pre><code>$ alias\nalias l.='ls -d .* --color=auto'\nalias ll='ls -l --color=auto'\nalias ls='ls --color=auto'\nalias vi='vim'\nalias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'\n</code></pre> <p>The aliases are only defined temporarily, for the time of the user session.</p> <p>For permanent use, they must be created in the:</p> <ul> <li><code>.bashrc</code> file in the user's login directory;</li> <li><code>/etc/bashrc</code> file for all users.</li> </ul> <p>Warning</p> <p>Special care must be taken when using aliases which can be potentially dangerous! For example, an alias set up without the administrator's knowledge:</p> <pre><code>alias cd='rm -Rf'\n</code></pre> <p>The <code>unalias</code> command allows you to delete aliases.</p> <p>To delete a single alias:</p> <pre><code>$ unalias ll\n</code></pre> <p>To delete all aliases:</p> <pre><code>$ unalias -a\n</code></pre> <p>To disable an alias temporarily, the combination is <code>\\&lt;alias name&gt;</code>.</p> <p>For example if we do:</p> <pre><code>$ type ls\n</code></pre> <p>it might return the following:</p> <pre><code>ls is an alias to \u00ab ls -rt \u00bb\n</code></pre> <p>Now that this is known, we can see the results of using the alias or disabling it one time with the <code>\\</code> by executing the following:</p> <pre><code>$ ls file*   # order by time\nfile3.txt  file2.txt  file1.txt\n$ \\ls file*  # order by name\nfile1.txt  file2.txt  file3.txt\n</code></pre>"},{"location":"guides/linux-commands/#aliases-and-useful-functions","title":"Aliases and Useful Functions","text":"<ul> <li><code>grep</code> alias.</li> </ul> <p>Colorize the result of the <code>grep</code> command: <code>alias grep='grep --color=auto'</code></p> <ul> <li><code>mcd</code> function</li> </ul> <p>It is common to create a folder and then move around in it: <code>mcd() { mkdir -p \"$1\"; cd \"$1\"; }</code></p> <ul> <li><code>cls</code> function</li> </ul> <p>Move to a folder and list its contents: <code>cls() { cd \"$1\"; ls; }</code></p> <ul> <li><code>backup</code> function</li> </ul> <p>Create a backup copy of a file: <code>backup() { cp \"$1\"{,.bak}; }</code></p> <ul> <li><code>extract</code> function</li> </ul> <p>Extract any type of archive:</p> <pre><code>extract () {\n  if [ -f $1 ] ; then\n    case $1 in\n      *.tar.bz2) tar xjf $1 ;;\n      *.tar.gz) tar xzf $1 ;;\n      *.bz2) bunzip2 $1 ;;\n      *.rar) unrar e $1 ;;\n      *.gz) gunzip $1 ;;\n      *.tar) tar xf $1 ;;\n      *.tbz2) tar xjf $1 ;;\n      *.tgz) tar xzf $1 ;;\n      *.zip) unzip $1 ;;\n      *.Z) uncompress $1 ;;\n      *.7z) 7z x $1 ;;\n      *)\n        echo \"'$1' cannot be extracted via extract()\" ;;\n    esac\n  else\n    echo \"'$1' is not a valid file\"\n  fi\n}\n</code></pre> <ul> <li>If <code>alias cmount</code> returns the following: <code>alias cmount=\"mount | column -t\"</code></li> </ul> <p>Then we can use <code>cmount</code> to show all of the system mounts in columns like this: <code>[root]# cmount</code></p> <p>which would return our mounted filesystem in the following format:</p> <pre><code>/dev/simfs  on  /                                          type  simfs        (rw,relatime,usrquota,grpquota)\nproc        on  /proc                                      type  proc         (rw,relatime)\nsysfs       on  /sys                                       type  sysfs        (rw,relatime)\nnone        on  /dev                                       type  devtmpfs     (rw,relatime,mode=755)\nnone        on  /dev/pts                                   type  devpts       (rw,relatime,mode=600,ptmxmode=000)\nnone        on  /dev/shm                                   type  tmpfs        (rw,relatime)\nnone        on  /proc/sys/fs/binfmt_misc                   type  binfmt_misc  (rw,relatime)\n</code></pre>"},{"location":"guides/linux-commands/#the-character","title":"The character <code>;</code>","text":"<p>The <code>;</code> character strings the commands.</p> <p>The commands will all run sequentially in the order of input once the user presses ENTER.</p> <pre><code>$ ls /; cd /home; ls -lia; cd /\n</code></pre>"},{"location":"guides/linux-commands/#check-your-knowledge","title":"Check your Knowledge","text":"<p> What defines a user under Linux? (7 answers)</p> <p> What characterizes a long option for a command?</p> <p> Which commands allow you to search for help on a command?</p> <ul> <li> <code>google</code> </li> <li> <code>chuck --norris</code> </li> <li> <code>info</code> </li> <li> <code>apropos</code> </li> <li> <code>whatis</code> </li> </ul> <p> Which command allows you to view a user's history?</p> <p> Which command allows you to search for text in a file?</p> <ul> <li> <code>find</code> </li> <li> <code>grep</code> </li> </ul> <p> Which command allows you to search for a file?</p> <ul> <li> <code>find</code> </li> <li> <code>grep</code> </li> </ul> <p> Which command redirects the error stream of a command to a new <code>errors.log</code> file?</p> <ul> <li> <code>ls -R / 2&gt; errors.log</code> </li> <li> <code>ls -R / 2&gt;&gt; errors.log</code> </li> <li> <code>ls -R / 2&gt; errors.log 2&gt;&amp;1</code></li> </ul>"},{"location":"guides/phpmyadmin-install/","title":"How to Install phpMyAdmin on Ubuntu 22.04","text":""},{"location":"guides/phpmyadmin-install/#introduction","title":"Introduction","text":"<p>phpMyAdmin is a free, open-source application for managing MySQL and MariaDB relational databases.</p> <p>Beginners and experienced database administrators use phpMyAdmin to interact with MySQL databases via a web-based, user-friendly interface instead of manually entering commands into the terminal.</p>"},{"location":"guides/phpmyadmin-install/#prerequisites","title":"Prerequisites","text":"<ul> <li>Ubuntu 22.04 installed.</li> <li>A fully installed LAMP stack (Linux, Apache/Nginx, MySQL/MariaDB, PHP).</li> <li>A user account with root or sudo privileges.</li> <li>Access to a command line/terminal window.</li> </ul> <p>Note</p> <p>phpMyAdmin is a common target for cyberattacks, mainly due to misconfigurations or weak security settings. Connecting to a remote server and running phpMyAdmin over an unencrypted HTTP connection poses a security risk, as the data can be intercepted. For steps on setting up an encrypted connection using SSL/TLS certificates, please refer to our guide on SSL/TLS encryption.</p>"},{"location":"guides/phpmyadmin-install/#installing-phpmyadmin-on-ubuntu","title":"Installing phpMyAdmin on Ubuntu","text":"<p>This guide assumes that you are installing phpMyAdmin on a system that is not publicly accessible over the internet, often referred to as a local system. Follow the steps below to install phpMyAdmin on Ubuntu 20.04 or 22.04:</p>"},{"location":"guides/phpmyadmin-install/#step-1-update-your-system","title":"Step 1: Update Your System","text":"<p>Access the command line and use the apt package manager to update the Ubuntu package repository and installed packages:</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p>Allow the operation to finish.</p>"},{"location":"guides/phpmyadmin-install/#step-2-install-phpmyadmin","title":"Step 2: Install phpMyAdmin","text":"<p>Run the following command to install phpMyAdmin and its dependencies:</p> <pre><code>sudo apt install phpmyadmin -y\n</code></pre> <p>The installer prompts you to choose a web server to configure automatically. The apache2 option is already highlighted if the system uses Apache. Press Space to select apache2, then Tab to highlight Ok.</p> <p></p> <p>Press Enter to confirm the selection.</p> <p>(Optional) Select Yes and press Enter to set up a phpMyAdmin database using the dbconfig-common configuration package.</p> <p></p> <p>Note</p> <p>Advanced users can attempt to configure the database manually. Find more information about the dbconfig-common package on Debian's official website.</p> <p>The installer creates a default user named phpmyadmin. Type a strong password for the phpmyadmin user and hit Enter.</p> <p></p> <p>Note</p> <p>Leaving the password field blank causes the system to generate a random password.</p> <p>Confirm the password and press Enter.</p> <p></p> <p>The default phpmyadmin user is typically used for managing the phpMyAdmin database, which stores metadata and settings for bookmarks, history, logs, and other advanced features. This user should not be used for general database management tasks because it is restricted to the phpMyAdmin database.</p> <p>Database administrators typically use the MySQL root user or another user with appropriate permissions.</p>"},{"location":"guides/phpmyadmin-install/#step-3-create-a-new-mysql-administrator-account","title":"Step 3: Create a New MySQL Administrator Account","text":"<p>phpMyAdmin provides a web interface to MySQL, including a root user with full administrative privileges.</p> <p>Ubuntu 20.04 and 22.04 use the auth_socket plugin for root authentication. This authentication method does not allow password-based login for root users and disrupts the standard way phpMyAdmin is used to access MySQL.</p> <p>Ubuntu users need to create a new MySQL user with administrative privileges or reconfigure the existing root user to enable password-based authentication.</p> <p>To create a new phpMyAdmin user for accessing a MySQL database:</p> <p>1.Open the MySQL terminal and log in as the sudo (or root) user:</p> <pre><code>sudo mysql\n</code></pre> <p>The terminal prompt shows that the MySQL shell is active.</p> <p>2.Use the following command to create a new user with a secure password:</p> <pre><code>CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';\n</code></pre> <p>Replace [newuser] with a username of your choice and [password] with a strong password.</p> <p>3.Assign appropriate privileges to the new user. For example, to allow this user to perform all operations on a database called mydatabase, run:</p> <pre><code>GRANT ALL PRIVILEGES ON mydatabase.* TO 'newuser'@'localhost';\n</code></pre> <p>4.Flush all privileges:</p> <pre><code>FLUSH PRIVILEGES;\n</code></pre> <p>5.Exit the MySQL terminal:</p> <pre><code>EXIT;\n</code></pre> <p>6.Open a browser and access the phpMyAdmin login page by entering:</p> <pre><code>localhost/phpmyadmin\n</code></pre> <p>or</p> <pre><code>YOUR_IP/phpmyadmin\n</code></pre> <p>or</p> <pre><code>www.yourdomain.com/phpmyadmin\n</code></pre> <p>7.The browser displays a screen welcoming you to phpMyAdmin. Enter the newly created username and password and click Go.</p> <p></p> <p>8.The browser loads the phpMyAdmin dashboard.</p> <p></p>"},{"location":"guides/rocky-installation/","title":"Installing Rocky Linux 9","text":"<p>This is a detailed guide for installing a 64-bit version of the Rocky Linux distribution on a standalone system. We will be performing a server class install. We will step through the installation and customization steps in the following sections.</p>"},{"location":"guides/rocky-installation/#os-installation-prerequisites","title":"OS Installation Prerequisites","text":"<p>Download the ISO to use for this installation of Rocky Linux. You can download the latest ISO image for the version of Rocky Linux for this installation here:</p> <pre><code>https://www.rockylinux.org/download/\n</code></pre> <p>To download the ISO directly from the command line on an existing Linux based system use the <code>wget</code> command:</p> <pre><code>wget https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.2-x86_64-minimal.iso\n</code></pre> <p>Rocky Linux ISOs follow this naming convention:</p> <pre><code>Rocky-&lt;MAJOR#&gt;.&lt;MINOR#&gt;-&lt;ARCH&gt;-&lt;VARIANT&gt;.iso\n</code></pre> <p>For example, <code>Rocky-9.2-x86_64-minimal.iso</code></p> <p>Note</p> <p>The Rocky project web page lists several mirrors, which are located around the globe. Choose the mirror geographically closest to you. The list ofofficial mirrors can be found here.</p>"},{"location":"guides/rocky-installation/#verifying-the-installation-program-iso-file","title":"Verifying the Installation Program ISO File","text":"<p>If you've downloaded the Rocky Linux ISO(s) on an existing Linux distribution, you can use the <code>sha256sum</code> utility to verify that file(s) you downloaded are not corrupt. We will show an example of how to verify the <code>Rocky-9.2-x86_64-minimal.iso</code> file by checking its checksum.</p> <ol> <li> <p>Download the file that contains the official checksums for the available ISOs.</p> </li> <li> <p>While still in the folder that contains the downloaded Rocky Linux ISO, download the checksum file for the ISO, type:</p> <pre><code>wget -O CHECKSUM https://download.rockylinux.org/pub/rocky/9.2/isos/x86_64/CHECKSUM\n</code></pre> </li> <li> <p>Use the <code>sha256sum</code> utility to verify the integrity of the ISO file against corruption or tampering.</p> <pre><code>sha256sum -c CHECKSUM --ignore-missing\n</code></pre> <p>This checks the integrity of the ISO file downloaded previously, provided that it is in the same directory. The output should show:</p> <pre><code>Rocky-9.2-x86_64-minimal.iso: OK\n</code></pre> </li> </ol>"},{"location":"guides/rocky-installation/#the-installation","title":"The Installation","text":"<p>Tip</p> <p>Before starting the installation proper, the system\u2019s Unified Extensible Firmware Interface (UEFI) or Basic Input/Output System (BIOS) should be preconfigured to boot from the correct medium.</p> <p>If the computer is setup to boot from the media that has the ISO file, we can begin the installation process.</p> <ol> <li> <p>Insert and boot from the installation medium (optical disk, USB flash drive, and so on).</p> </li> <li> <p>Once the computer has booted you see the Rocky Linux 9 welcome splash screen.</p> <p></p> </li> <li> <p>If you do not press any key, the installation program starts a countdown, after which the installation process automatically executes the default, highlighted, option:</p> <p><code>Test this media &amp; install Rocky Linux 9.2</code></p> <p>You can also press Enter at any time to start the process immediately.</p> </li> <li> <p>A quick media verification step takes place. This media verification step can save you the trouble of starting the installation only to find out halfway through that the installation program has to stop because of bad installation media.</p> </li> <li> <p>After the media check runs to completion and the media is successfully verified to be usable, the installation program automatically continues to the next screen.</p> </li> <li> <p>Select the language you want to use to perform the installation in this screen. For this guide, we select English (United States). Then click the Continue button.</p> </li> </ol>"},{"location":"guides/rocky-installation/#installation-summary","title":"Installation Summary","text":"<p>The Installation Summary screen is an all-in-one area where you make the important decisions about the system to be installed.</p> <p>The screen is roughly divided into the following sections:</p> <ul> <li>LOCALIZATION </li> <li>SOFTWARE</li> <li>SYSTEM</li> <li>USER SETTINGS</li> </ul> <p>We will delve into each of these sections next and make changes where necessary.</p>"},{"location":"guides/rocky-installation/#localization-section","title":"Localization Section","text":"<p>This section is used for customizing items related to the geographic locality of the system. This includes \u2013 Keyboard, Language Support, Time and Date.</p>"},{"location":"guides/rocky-installation/#keyboard","title":"Keyboard","text":"<p>On our demo system in this guide, we accept the default value (English US) and make no changes.</p> <p>However, if you need to make any changes here, from the Installation Summary screen, click the Keyboard option to specify the keyboard layout of the system. Using the + button, you can add additional keyboard layouts if you need to in the ensuing screen and even specify your preferred order.</p> <p>Click Done when you are finished with this screen.</p>"},{"location":"guides/rocky-installation/#language-support","title":"Language Support","text":"<p>The Language Support option on the Installation Summary screen enables you to specify support for additional languages.</p> <p>We will accept the default value - English (United States) and make no change, click Done.</p>"},{"location":"guides/rocky-installation/#time-date","title":"Time &amp; Date","text":"<p>Click the Time &amp; Date option on the main Installation Summary screen to bring up another screen that will allow you to select the time zone in which the machine is located. Scroll through the list of regions and cities and select the area closest to you.</p> <p>Depending on your installation source, the Network Time option could be set to ON or OFF by default. Accept the default ON setting; this allows the system to automatically set the correct time using the Network Time Protocol (NTP). </p> <p>Click Done after making any changes.</p>"},{"location":"guides/rocky-installation/#software-section","title":"Software Section","text":"<p>Under the Software section of the Installation Summary screen, you can select or change the installation source as well as additional packages (applications) that get installed.</p>"},{"location":"guides/rocky-installation/#installation-source","title":"Installation Source","text":"<p>Because the installation uses a Rocky Linux 9 ISO image, you will notice that Local Media is automatically specified under the Installation Source section of the main Installation Summary screen. You can accept the preset defaults.</p> <p>Tip</p> <p>The installation Source area is where you can opt to perform a network-based installation (for example if you are using the Rocky Linux boot ISO - Rocky-9.2-x86_64-boot.iso). For a network-based installation, you need to first ensure that a network adapter on the target system is properly configured, and is able to reach the internet. To perform a network-based installation, click on <code>Installation Source</code> and then select the <code>On the network</code> radio button. Once selected, choose <code>https</code> as the protocol and type the following URL in the text field <code>download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/os</code>. Click <code>Done</code>.</p>"},{"location":"guides/rocky-installation/#software-selection","title":"Software Selection","text":"<p>Clicking the Software Selection option on the main Installation Summary screen presents you with the section of the installation where you can pick the exact software packages that get installed on the system. The software selection area is divided into:</p> <ul> <li>Base Environment: Minimal Install and Custom operating system</li> <li>Additional software for Selected Environment: Selecting a Base Environment on the left side presents a variety of related additional software to install for the given environment on the right side. Note that this is only applicable if you were installing from a full Rocky Linux 9.2 DVD or if you have additional repositories configured.</li> </ul> <p>Select the Minimal Install (Basic functionality) option.</p> <p>Click Done at the top of the screen.</p>"},{"location":"guides/rocky-installation/#system-section","title":"System Section","text":"<p>The System section of the Installation Summary screen is used for customizing and making changes to things related to the underlying hardware of the target system. This is where you create your hard disk drive partitions or volumes, specify the file system, specify the network configuration, enable or disable KDUMP or select a Security Profile.</p>"},{"location":"guides/rocky-installation/#installation-destination","title":"Installation Destination","text":"<p>From the Installation Summary screen, click the Installation Destination option. This takes you to the corresponding task area.</p> <p>You will see a screen displaying all the candidate disk drives that you have available on the target system. If you have only one disk drive on the system, as on our sample system, you see the drive listed under Local Standard Disks with a check mark beside it. Clicking the disk icon will toggle on or off the disk selection check mark. Keep it checked to select the disk.</p> <p>Under the Storage Configuration section:</p> <ol> <li> <p>Select the Automatic radio button.</p> </li> <li> <p>Click Done at the top of the screen.</p> </li> <li> <p>Once the installation program determines that you have a usable disk, it returns to the Installation Summary screen.</p> </li> </ol>"},{"location":"guides/rocky-installation/#network-host-name","title":"Network &amp; Host Name","text":"<p>The next important task of the installation procedure under the System area deals with network configuration, where you can configure or tweak network-related settings for the system.</p> <p>Note</p> <p>After you click on the Network &amp; Hostname option, all correctly detected network interface hardware (such as Ethernet, wireless network cards, and so on) will be listed in the left pane of the network configuration screen. Depending on your specific hardware setup, Ethernet devices in Linux have names similar to <code>eth0</code>, <code>eth1</code>, <code>ens3</code>, <code>ens4</code>, <code>em1</code>, <code>em2</code>, <code>p1p1</code>, <code>enp0s3</code> and so on.  For each interface, you can either configure it using DHCP or manually set the IP address.  If you choose to configure manually, be sure to have all the required information ready, such as the IP address, netmask, and so on.</p> <p>Clicking the Network &amp; Hostname button in the main Installation Summary screen opens the corresponding configuration screen. Among other things, you have the option to configure the hostname of the system.</p> <p>Note</p> <p>You can easily change the system hostname later on after the OS has been installed.</p> <p>The next important configuration task is related to the network interfaces on the system.</p> <ol> <li>Verify that the left pane lists an Ethernet card (or any network card.)</li> <li>Click any of the detected network devices in the left pane to select it. The configurable properties of the selected network adapter appear in the right pane of the screen.</li> </ol> <p>Note</p> <p>On our sample system, we have two Ethernet devices <code>ens3</code> and <code>ens4</code>, all of which are in a connected state. The type, name, quantity, and state of the network devices on your system may vary from the ones on our demo system.</p> <p>Verify the switch of the device you want to configure is flipped to the <code>ON</code> (blue) position in the right pane. We'll accept all the defaults in this section.</p> <p>Click Done to return to the main Installation Summary screen.</p> <p>Warning</p> <p>Pay attention to the IP address of the server in this section of this installer. If you don\u2019t have physical or easy console access to the system, this information will come in handy later on when you need to connect to the server to continue working on it after the OS installation is completed.</p>"},{"location":"guides/rocky-installation/#user-settings-section","title":"User Settings Section","text":"<p>This section can be used for creating a password for the <code>root</code> user account and also for creating new administrative or non-administrative accounts.</p>"},{"location":"guides/rocky-installation/#root-password","title":"Root Password","text":"<ol> <li> <p>Click the Root Password field under User Settings to start the Root Password task screen.</p> <p>Warning</p> <p>The root superuser is the most privileged account on the system. Therefore, if you choose to use or enable it, it is crucial that you protect this account with a strong password.</p> </li> <li> <p>In the Root Password text box, set a strong password for the root user.</p> </li> <li> <p>Enter the same password again in the Confirm text box.</p> </li> <li> <p>Click Done.</p> </li> </ol>"},{"location":"guides/rocky-installation/#user-creation","title":"User Creation","text":"<p>To create a user:</p> <ol> <li> <p>Click the User Creation field under User Settings to start the Create User task screen. This task area allows you to create a privileged or non-privileged (non-administrative) user account on the system.</p> <p>Info</p> <p>Creating and using a non-privileged account for day-to-day tasks on a system is a good system administration practice.</p> <p>We\u2019ll create a regular user that can invoke superuser (administrator) powers when needed.</p> </li> <li> <p>Complete the fields in the Create User screen with the following information:</p> <ul> <li>Full name: <code>rockstar</code></li> <li>Username: <code>rockstar</code></li> <li>Make this user administrator: Checked</li> <li>Require a password to use this account: Checked</li> <li>Password: <code>04302021</code></li> <li>Confirm password: <code>04302021</code></li> </ul> </li> <li> <p>Click Done.</p> </li> </ol>"},{"location":"guides/rocky-installation/#installer-phase","title":"Installer Phase","text":"<p>Once you are satisfied with your choices for the various installation tasks, the next phase of the installation process will begin the installation proper.</p>"},{"location":"guides/rocky-installation/#start-the-installation","title":"Start the Installation","text":"<p>Once you are satisfied with your choices for the various installation tasks, click the Begin Installation button on the main Installation Summary screen.</p> <p>The installation will begin, and the installation program will show the progress of the installation.  After the installation begins, various tasks will begin running in the background, such as partitioning the disk, formatting the partitions or LVM volumes, checking for and resolving software dependencies, writing the operating system to the disk, and so on.</p> <p>Note</p> <p>If you do not wish to continue after clicking the Begin Installation button, you can still safely back out of the installation without any loss of data. To quit the installer, simply reset your system either by clicking the Quit button, pressing ctrl-alt-del on the keyboard, or pushing the reset or power switch.</p>"},{"location":"guides/rocky-installation/#complete-the-installation","title":"Complete the Installation","text":"<p>After the installation program has run its course, you see a final installation progress screen with a complete message.</p> <p>Finally, complete the entire procedure by clicking the Reboot System button. The system restarts.</p>"},{"location":"guides/rocky-installation/#log-in","title":"Log In","text":"<p>The system is now set up and ready for use. You will see the Rocky Linux console.</p> <p></p> <p>To log onto the system:</p> <ol> <li> <p>Type <code>rockstar</code> at the login prompt and press Enter.</p> </li> <li> <p>At the Password prompt, type <code>04302021</code> (rockstar\u2019s password) and press Enter (the password will not be echoed to the screen, that is normal).</p> </li> <li> <p>Run the <code>whoami</code> command after login. This command shows the name of the currently logged in user.</p> </li> </ol> <p></p>"},{"location":"guides/vi-editor/","title":"VI Text Editor","text":"<p>In this chapter you will learn how to work with the Visual Editor.</p> <p>Objectives: In this chapter, future Linux administrators will learn how to:</p> <p> Use the main commands of the VI editor;   Modify a text with the VI editor.</p> <p> user commands, linux</p> <p>Knowledge:  Complexity:  </p> <p>Reading time: 20 minutes</p> <p>Visual (VI) is a very popular text editor under Linux, despite its limited ergonomics. It is indeed an editor entirely in text mode: each action is done with a key on the keyboard or dedicated commands.</p> <p>Very powerful, it is above all very practical since it is on the whole minimal for basic applications. It is therefore accessible in case of system failure. Its universality (it is present on all Linux distributions and under Unix) makes it a crucial tool for the administrator.</p> <p>Its functionalities are:</p> <ul> <li>Insert, delete, modify text;</li> <li>Copy words, lines or blocks of text;</li> <li>Search and replace characters.</li> </ul>"},{"location":"guides/vi-editor/#vi-command","title":"<code>vi</code> command","text":"<p>The <code>vi</code> command opens the VI text editor.</p> <pre><code>vi [-c command] [file]\n</code></pre> <p>Example:</p> <pre><code>$ vi /home/rockstar/file\n</code></pre> Option Information <code>-c command</code> Execute VI by specifying a command at the opening <p>If the file exists at the location mentioned by the path, it is read by VI which is placed in commands mode.</p> <p>If the file does not exist, VI opens a blank file and an empty page is displayed on the screen. When the file is saved, it will take the name specified with the command.</p> <p>If the command <code>vi</code> is executed without specifying a file name, VI opens a blank file and an empty page is displayed on the screen. When the file is saved, VI will ask for a file name.</p> <p>The <code>vim</code> editor takes the interface and functions of VI with many improvements.</p> <pre><code>vim [-c command] [file]\n</code></pre> <p>Among these improvements, the user has syntax highlighting, which is very useful for editing shell scripts or configuration files.</p> <p>During a session, VI uses a buffer file in which it records all the changes made by the user.</p> <p>Note</p> <p>As long as the user has not saved his work, the original file is not modified.</p> <p>At startup, VI is in commands mode.</p> <p>Tip</p> <p>A line of text is ended by pressing ENTER but if the screen is not wide enough, VI makes automatic line breaks, wrap configuration by default. These line breaks may not be desired, this is the nowrap configuration.</p> <p>To exit VI, from the Commands mode, press : then type:</p> <ul> <li><code>q</code> to exit without saving (quit);</li> <li><code>w</code> to save your work (write);</li> <li><code>wq</code> (write quit) or <code>x</code> (eXit) to save and exit.</li> </ul> <p>In command mode,  Click the Z key of uppercase status twice in a row to save and exit.</p> <p>To force the exit without confirmation, you must add ! to the previous commands.</p> <p>Warning</p> <p>There is no periodic backup, so you must remember to save your work regularly.</p>"},{"location":"guides/vi-editor/#operating-mode","title":"Operating mode","text":"<p>In VI, there are 3 working modes:</p> <ul> <li>The command mode;</li> <li>The insertion mode;</li> <li>The ex mode.</li> </ul> <p>The philosophy of VI is to alternate between the command mode and the insertion mode.</p> <p>The third mode, ex, is a footer command mode from an old text editor.</p>"},{"location":"guides/vi-editor/#the-command-mode","title":"The Command Mode","text":"<p>This is the default mode when VI starts up. To access it from any of the other modes, simply press the ESC key.</p> <p>At this time, all keyboard typing is interpreted as commands and the corresponding actions are executed. These are essentially commands for editing text (copy, paste, undo, ...).</p> <p>The commands are not displayed on the screen.</p>"},{"location":"guides/vi-editor/#the-insert-mode","title":"The Insert mode","text":"<p>This is the text modification mode. To access it from the command mode, you have to press special keys that will perform an action in addition to changing the mode.</p> <p>The text is not entered directly into the file but into a buffer zone in the memory. The changes are only effective when the file is saved.</p>"},{"location":"guides/vi-editor/#the-ex-mode","title":"The Ex mode","text":"<p>This is the file modification mode. To access it, you must first switch to command mode, then enter the ex command frequently starting with the character <code>:</code>.</p> <p>The command is validated by pressing the ENTER key.</p>"},{"location":"guides/vi-editor/#moving-the-cursor","title":"Moving the cursor","text":"<p>In command mode, there are several ways to move the cursor.</p> <p>The mouse is not active in a text environment but is in a graphic environment, it is possible to move it character by character, but shortcuts exist to go faster.</p> <p>VI remains in command mode after moving the cursor.</p> <p>The cursor is placed under the desired character.</p>"},{"location":"guides/vi-editor/#from-a-character","title":"From a character","text":"<ul> <li>Move one or <code>n</code> characters to the left:</li> </ul> <p>\u2190, n\u2190, h or nh</p> <ul> <li>Move one or <code>n</code> characters to the right:</li> </ul> <p>\u2192, n\u2192, l or nl</p> <ul> <li>Move one or <code>n</code> characters up:</li> </ul> <p>\u2191, n\u2191, k or nk</p> <ul> <li>Move one or <code>n</code> characters down:</li> </ul> <p>\u2193, n\u2193, j or nj</p> <ul> <li>Move to the end of the line:</li> </ul> <p>$ or END</p> <ul> <li>Move to the beginning of the line:</li> </ul> <p>0 or POS1</p>"},{"location":"guides/vi-editor/#from-the-first-character-of-a-word","title":"From the first character of a word","text":"<p>Words are made up of letters or numbers. Punctuation characters and apostrophes separate words.</p> <p>If the cursor is in the middle of a word w moves to the next word, b moves to the beginning of the word.</p> <p>If the line is finished, VI goes automatically to the next line.</p> <ul> <li>Move one or <code>n</code> words to the right:</li> </ul> <p>w or nw</p> <ul> <li>Move one or <code>n</code> words to the left:</li> </ul> <p>b or nb</p>"},{"location":"guides/vi-editor/#from-any-location-on-a-line","title":"From any location on a line","text":"<ul> <li>Move to last line of text:</li> </ul> <p>G</p> <ul> <li>Move to line <code>n</code>:</li> </ul> <p>nG</p> <ul> <li>Move to the first line of the screen:</li> </ul> <p>H</p> <ul> <li>Move to the middle line of the screen:</li> </ul> <p>M</p> <ul> <li>Move to the last line of the screen:</li> </ul> <p>L</p>"},{"location":"guides/vi-editor/#inserting-text","title":"Inserting text","text":"<p>In command mode, there are several ways to insert text.</p> <p>VI switches to insert mode after entering one of these keys.</p> <p>Note</p> <p>VI switches to insertion mode. So you will have to press the ESC key to return to command mode.</p>"},{"location":"guides/vi-editor/#in-relation-to-a-character","title":"In relation to a character","text":"<ul> <li>Inserting text before a character:</li> </ul> <p>i (insert)</p> <ul> <li>Inserting text after a character:</li> </ul> <p>a (append)</p>"},{"location":"guides/vi-editor/#in-relation-to-a-line","title":"In relation to a line","text":"<ul> <li>Inserting text at the beginning of a line:</li> </ul> <p>I</p> <ul> <li>Inserting text at the end of a line:</li> </ul> <p>A</p>"},{"location":"guides/vi-editor/#in-relation-to-the-text","title":"In relation to the text","text":"<ul> <li>Inserting text before a line:</li> </ul> <p>O</p> <ul> <li>Inserting text after a line:</li> </ul> <p>o</p>"},{"location":"guides/vi-editor/#characters-words-and-lines","title":"Characters, words and lines","text":"<p>VI allows text editing by managing:</p> <ul> <li>characters,</li> <li>words,</li> <li>lines.</li> </ul> <p>In each case it is possible to :</p> <ul> <li>delete,</li> <li>replace,</li> <li>copy,</li> <li>cut,</li> <li>paste.</li> </ul> <p>These operations are done in command mode.</p>"},{"location":"guides/vi-editor/#characters","title":"Characters","text":"<ul> <li>Delete one or <code>n</code> characters:</li> </ul> <p>x or nx</p> <ul> <li>Replace a character with another:</li> </ul> <p>rcharacter</p> <ul> <li>Replace more than one character with others:</li> </ul> <p>RcharactersESC</p> <p>Note</p> <p>The R command switches to replace mode, which is a kind of insert mode.</p>"},{"location":"guides/vi-editor/#words","title":"Words","text":"<ul> <li>Delete (cut) one or <code>n</code> words:</li> </ul> <p>dw or ndw</p> <ul> <li>Copy one or <code>n</code> words:</li> </ul> <p>yw or nyw</p> <ul> <li>Paste a word once or <code>n</code> times after the cursor:</li> </ul> <p>p or np</p> <ul> <li>Paste a word once or <code>n</code> times before the cursor:</li> </ul> <p>P or nP</p> <ul> <li>Replace one word:</li> </ul> <p>cwwordESC</p> <p>Tip</p> <p>It is necessary to position the cursor under the first character of the word to cut (or copy) otherwise VI will cut (or copy) only the part of the word between the cursor and the end. To delete a word is to cut it. If it is not pasted afterwards, the buffer is emptied and the word is deleted.</p>"},{"location":"guides/vi-editor/#lines","title":"Lines","text":"<ul> <li>Delete (cut) one or <code>n</code> lines:</li> </ul> <p>dd or ndd</p> <ul> <li>Copy one or <code>n</code> lines:</li> </ul> <p>yy or nyy</p> <ul> <li>Paste what has been copied or deleted once or <code>n</code> times after the current line:</li> </ul> <p>p or np</p> <ul> <li>Paste what has been copied or deleted once or <code>n</code> times before the current line:</li> </ul> <p>P or nP</p> <ul> <li>Delete (cut) from the beginning of the line to the cursor:</li> </ul> <p>d0</p> <ul> <li>Delete (cut) from the cursor to the end of the line:</li> </ul> <p>d$</p> <ul> <li>Copy from the beginning of the line to the cursor:</li> </ul> <p>y0</p> <ul> <li>Copy from the cursor to the end of the line:</li> </ul> <p>y$</p> <ul> <li>Delete (cut) the text from the current line:</li> </ul> <p>dL or dG</p> <ul> <li>Copy the text from the current line:</li> </ul> <p>yL or yG</p>"},{"location":"guides/vi-editor/#cancel-an-action","title":"Cancel an action","text":"<ul> <li>Undo the last action:</li> </ul> <p>u</p> <ul> <li>Undo the actions on the current line:</li> </ul> <p>U</p>"},{"location":"guides/vi-editor/#cancel-cancellation","title":"Cancel cancellation","text":"<ul> <li>Cancel a cancellation</li> </ul> <p>Ctrl+r</p>"},{"location":"guides/vi-editor/#ex-commands","title":"EX commands","text":"<p>The Ex mode allows you to act on the file (saving, layout, options, ...). It is also in Ex mode where search and replace commands are entered. The commands are displayed at the bottom of the page and must be validated with the ENTER key.</p> <p>To switch to Ex mode, from command mode, type :.</p>"},{"location":"guides/vi-editor/#file-line-numbers","title":"File line numbers","text":"<ul> <li>Show/hide numbering:</li> </ul> <p><code>:set nu</code> or the longer <code>:set number</code></p> <p><code>:set nonu</code>  or the longer <code>:set nonumber</code></p>"},{"location":"guides/vi-editor/#search-for-a-string","title":"Search for a string","text":"<ul> <li>Search for a string from the cursor:</li> </ul> <p><code>/string</code></p> <ul> <li>Search for a string before the cursor:</li> </ul> <p><code>?string</code></p> <ul> <li>Find the next matching string:</li> </ul> <p>n</p> <ul> <li>Find the previous matching string:</li> </ul> <p>N</p> <p>There are wildcards to facilitate the search in VI.</p> <ul> <li><code>[]</code> : Searches for a range of characters or a single character whose possible values are specified.</li> </ul> <p>Example:</p> <p><code>/[Ww]ord</code> : search word or Word</p> <p><code>/[1-9]word</code> : search 1word, 2word \u2026 <code>x</code>word  where <code>x</code> is a number</p> <ul> <li><code>^</code> : Search for lines that begin with a characters.</li> </ul> <p>Example:</p> <p><code>/^Word</code></p> <ul> <li><code>$</code> : Search for lines that end with characters.</li> </ul> <p>Example:</p> <p><code>/Word$</code></p> <ul> <li><code>.</code> : Search for any single character except newline characters.</li> </ul> <p>Example:</p> <p><code>/W.rd</code> : search Word, Ward \u2026</p> <ul> <li><code>*</code> : The number of times the previous character matches, 0 times, or any number of times.</li> </ul> <p>Example:</p> <p><code>/W*d</code></p> <p>Note: If you want to ignore case (temporary) when matching strings, Please type the <code>:set ic</code>. </p>"},{"location":"guides/vi-editor/#replace-a-string","title":"Replace a string","text":"<p>From the 1st to the last line of the text, replace the searched string by the specified string:</p> <p><code>:1,$ s/search/replace</code></p> <p>Note: You can also use <code>:0,$s/search/replace</code> to specify starting at the absolute beginning of the file.</p> <p>From line <code>n</code> to line <code>m</code>, replace the searched string with the specified string:</p> <p><code>:n,m s/search/replace</code></p> <p>By default, only the first occurrence found of each line is replaced. To force the replacement of each occurrence, you have to add <code>/g</code> at the end of the command:</p> <p><code>:n,m s/search/replace/g</code></p> <p>Browse an entire file to replace the searched string with the specified string:</p> <p><code>:% s/search/replace</code></p>"},{"location":"guides/vi-editor/#deletes-the-specified-row","title":"Deletes the specified row","text":"<ul> <li>Delete a blank line</li> </ul> <p><code>:g/^$/d</code></p> <ul> <li>Delete lines with line numbers n to m</li> </ul> <p><code>:n,md</code></p> <ul> <li>Delete the line on which the string is located</li> </ul> <p><code>:g/string/d</code></p> <ul> <li>Delete a line that does not contain a string</li> </ul> <p><code>:g!/string/d</code></p> <ul> <li>Delete all lines that begin with #</li> </ul> <p><code>:g/^#/d</code></p> <p>The g here stands for global.</p>"},{"location":"guides/vi-editor/#file-operations","title":"File operations","text":"<ul> <li>Save the file:</li> </ul> <p><code>:w</code></p> <ul> <li>Save under another name:</li> </ul> <p><code>:w file</code></p> <ul> <li>Save from line <code>n</code> to line <code>m</code> in another file:</li> </ul> <p><code>:n,m w file</code></p> <ul> <li>Reload the last record of the file:</li> </ul> <p><code>e!</code></p> <ul> <li>Paste the content of another file after the cursor:</li> </ul> <p><code>:r file</code></p> <ul> <li>Quit editing a file without saving:</li> </ul> <p><code>:q</code></p> <ul> <li>Quit editing a file that has been modified during the session but not saved:</li> </ul> <p><code>:q!</code></p> <ul> <li>Exit the file and save:</li> </ul> <p><code>:wq</code> or <code>:x</code></p>"},{"location":"guides/vi-editor/#other-functions","title":"Other functions","text":"<p>It is possible to execute VI by specifying the options to be loaded for the session. To do this, you must use the <code>-c</code> option:</p> <pre><code>$ vi -c \"set nu\" /home/rockstar/file\n</code></pre> <p>It is also possible to enter the Ex commands in a file named <code>.exrc</code> put in the user's login directory. At each VI or VIM startup, the commands will be read and applied.</p>"},{"location":"guides/vi-editor/#vimtutor-command","title":"<code>vimtutor</code> command","text":"<p>There is a tutorial for learning how to use VI. It is accessible with the command <code>vimtutor</code>.</p> <pre><code>$ vimtutor\n</code></pre>"}]}